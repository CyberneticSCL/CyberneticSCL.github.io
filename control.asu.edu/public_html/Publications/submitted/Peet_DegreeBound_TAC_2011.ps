%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: nonglobal11Nov11.dvi
%%CreationDate: Sat Dec 03 15:15:00 2011
%%Pages: 28
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Times-Bold Courier Symbol Times-Italic
%%+ CMR10 CMMI10 MSBM10 CMSY10 CMEX10 MSAM10 Helvetica
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe nonglobal11Nov11.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.12.03:1514
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/UniqueID 5031981 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /defines put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22A31B165EA
8DE2F2534E57BC3E63D44604D095AAF56667F587FBFB99FACB6315A21101C80A
6029178A3D776FC5AD82C8D28E22410BEED692C2946D5B9FD8DECF532B53F0F0
FD2A0EBDA484D41057AD7B96E5827286FA3D43DEBDAF614B7759AF134331BC12
16511AD3AF2E96B12C58984B62C6F391EBE8C99C1766B6FD8E20EC01B04E071F
4B99EF450D74A992E8EFD2C2317186D597EF68BE314E3CCD2BFE8C7F8EC32902
D28EB613866E65F8524C3094BE6ECA4C63C25A25B6593AE38D7A7C85CB80D66A
DEC58F2D4587FC73DC427217F59EE20468AEACCFCF10FEE18C9E8AF1BDC7D230
AD697549A650B9E9257C3E35CD274A86C80C421DD06CDD2CECE8A21278303F0D
24E8FF7A37F03792B38F852AF0E345DB7F983C82B32E089EA4BDA9FAF84E0C52
F4032C5D169F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 13 /vextenddouble put
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 82 /integraltext put
dup 90 /integraldisplay put
dup 104 /bracketleftBig put
dup 105 /bracketrightBig put
dup 110 /braceleftBig put
dup 111 /bracerightBig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A21C69E7495DA267D5C198848DFADA31AC9F5DD453B1D
3838DCCD32AD23C7D890BC859BAC8AEB18B09AC71832190E5EDEB99DC3904AF8
BBE407F5EAC1D1B0A1D662D1A896874566CBFB46E98286E82BF892917848B9BD
B70BCCC4F83DC06ADFBA741F9A9E0FDDD9189DE5C3F2A05C77BA591FED2312CD
D8FBDFFB276035A428E531D41C53700C98D6923FFD65A2DA9A78A3E50FA79BC7
833A2232444D1984C6BA33B510A06972844DA0B1D64C4F19C062E78A80E6349A
2D7766E0C532F6379318EC2BA20E6E2B266C6370598767B4AD2DCA885F6D7735
1161490F2026AE755A25A28E43DDFECF131EA7773CDF24A22DA49AE3438A0158
3FC9625BD54584BF043FA43B1EE9AADC6D26F1D34C65A456AD6056DE445BC9F2
59D3F28843E761AB26D232E57ED8DAF4A607E6A5B3FF15B81EC65EA92069B982
1B686229EF1A068BEE2AD3A7E7830C82633EF9BC7FA2E035173F3BE8CC28290F
1ADACBD6A9BB0098F1F78CB3239467709DF11E99CAFA40D90B0835DF4FFAD667
932D8AC9A49979A8E4FE49BBEE3A8E5000BA7CB27F10B7C3A0DF6E64E2FA747E
E9A891DD6CD4EE8BF8B5126527E8F4D98C901A9FF2CFE99A86BED49C97511C00
9AE38C9C2A1F16FC0721CC49EE3933408ED162363E557778B3E1D31CFBBCEFE7
C9660C8E7F1E4C5DE70F2B1AF8E94F0EEFD3AAAFEA99F3FB85FD71FC0EE48A30
2843DCFBDA6C75F8C190DC9159F679F5141E5BAF8097265D11DD781FA1B04D0C
E67E64A2BCA728ED15C94D26C28195A1F4C430FA2812ED3120EF67A5144E5CFA
4410C156A38606287EF568A67D70B10B623CF4E2FA5DE4D8ADC2A042D41501F9
16F8C93211276E0CF9FBE043EF7C2E1BBC8E513B5109E46573D9647A53BE4808
2343FD9F2CA86D9A63F2C69EB0E1D89E9FEAEAB1349ECC939A0E719A312BC374
F7A56EC78157D3C4892F2B959E171F6331DBD5179209204FC49641D348A1009A
99D3FF20E1E2C22CA96321BCE03626A490602F140FD7042027E6E20C8B67B3DF
2C6B35D50D750A31A1BB431820F0A49B3DEA17756B48CAE55AB488DF0EF4C0C6
D41131D66F53FE7ACF128497C4335ED82CB91AE617F2CA0C7D35F28E43401198
29C319D8A38C771B1E948779D8B633424221E0FCF72CCDAAEBA96E6C0B8FB690
C9B68E93D1C87A7753D08F49CB65E69B7AF7A06D2F321D3F494C46521C7ABDB3
AD86898B6F0C706CC821FF8A4C376237A78B1277C70222471F308AE382B7F1C1
D504828E2C6D7485FA1CA436B3A2569DBB739AFF26890B09B574B46BBAB11300
2716FD449B86EFBD1C30E2D59697AC25A067B15C7AE6450E260A19C6A6C55405
ECA02CAE7CCA531C23500C6B4E7868B117CC3E1C510844F07DDFAE8BEAF902AF
F1801C815B1D7E105F9407A18E756040D1DE1A1B41BCC94BCA3B0139750C580F
E588117968FFD1C2C02F878F03F6C71D9D328C1DAB487E983548569D82C1F845
594DBB9D79D1359339CEF3307305E054D8DDC33F5A623703F46FA91905021509
E11716BFD3D9A817C0E99B5B4F3D971B451BD334EEBBEC465C4D11753CE4F223
96C7CA87CA1AF26441FFD7A5418AE23E5A6E9FB6EB2D0A7F5CD24A77377181E3
1D47D4DC580EAD57274EDB438804155D7EF39F7060525D7504C399AD0CC1DA8D
3E940D093F97EE013AA1585BF61521D6F2A5AFD74613F66BC8315F09D943EF46
6C00584ACA9A0D37E29A522216E888A8B786B736B42E9DF883A4D0010F2C48A6
FE2FE28255263CF7AC777EBC874F4F3BA6313127201EA0B5818C65C9DC26F515
B6576AE85AD565DDA5EC7D4E4F7B2AF115F590979683D53ECB46D6E7FBAA94C8
7A946ACEBB0F02ACDEEBAA548AE63162B48F7FA26BCFF38B8F88F6CD337E4429
1A75EB06BB3D5669CA75557055EBA80472D3FF98895516F2736CC7EC02E5C4A9
253942435B0DA100B9BAC782DE4D4928F3790FA1B16C2FE36C4064B9E2D3A5E4
22796C8581135149D960DBEE26F2BBD437222F654C2D2B76557C8C45238C6F9C
DB39DD03DCD4F30CAB5672D1DFA0D9C940CC4D703830E5A85466609D5DF9BD41
96157B56B7B62ACF0B5A2F57231E5B73809EE0CE9C3788E1F95C64054578001B
F6C0BE8FD0858691207C805DDFFB8B10B02B3C8D500175C4587D95E50C0035EA
7AB03E771181CEC66B229EDF8B8281F032246658F6EDA32C32DABE343138E8A6
BCD7F608D260A68C04F40C2452F33D505FE3ED1681F5635AC34593DA6268FC68
13C15FB6CC5B7536B713B4B1E81ED43E22555A1687CD75BE1A1FE02C9612C2D0
B0AD086A6CE1C098FAEC1882B368B0076A9931467E67F5F9AC09ACDBCFD3FA72
38CAA456905E0E36A91D16C0BE7C4E04AC93047C0D163FE94E8AC0C4D1B41D2B
D9BB6B6122CBEA97D69753E785FBFB2E651143C978CAC57DCDFF2C48A9D01154
6E24F0D8870BA14635E41BEBEA235F5074459F1793C41D8443568D092DF0A437
77B3A06BB94B80D908BF39E0003313581E8408592B2C2F68C2E7B53649B48060
AF1FE4FBF56F27BAEDC479AC2492E3034CEA977A18111DD9CF0474A0D5FAF524
1F3E4B314DBB72E2E8D4FCD7753657D8BB23A5941501C759E253510923B8E9D6
084A3D7D8718BAA729983D5EAE183817DF8DC18AB2ED4786C8BD8103B476FA6A
36750C2AD9DE658EB51F5B73EA575D9D4E6880ED473362068175EEAE27567A75
F05F457F17B2C2F18610E4D752FF2F585D50ADC5E9762D381DB2C00D9E958F94
288F6462841183282FEDC3F3EA0E3769B8806A6FF69A657189898F47B846C1BA
9BFC79AA2D37BDEA3F380C2C8509C6D522FFCE42924CE4A14089BBEE9CEC61B5
3CB179DF7AD09CB438EF33E4BB2001FD2069CFAA51F56AA8B4B2046679FBB873
32076C609F35BD3B34914B554895C70B647B11C18693FB20B0D6C3EE81F31BE7
91C6D86FBDF14223121B173C4780622C90343CE22DD7C8D170BB3EBCE5D8E8EB
108C5D02664EB5BBC5171B0BB7EF7CFC85B25D58F4673267C985735C8AA58947
63829DCCC9BE1E9321A26B8FA0E701D0C1F2C389D37B1282B290553D4C60388F
D2EB93051489D2FBA26FB4C3A6761D48BE819DC85D0CE59EEAD652157593FB25
EF9ED9880F29AB78F4ABDE19886696B4418E28B605070E764A97AF1F50E2192E
6023221FE09C3A301F6969CA5BA63023E0A26A8CDE350A3100516B97E001C995
728294DF2466BB4C675CD5480124232BAE49C46AC1C3DE481809AE7876103238
DA677936A1F87D75E92BF6E1AE274EFDF3E5982DA49841E6E9F8A2633D451C1A
F64A408044AD3DAB6B43641EBDA184AA153CF9238C4A23A340268508B94C73BB
0CF0A6E24AB67D6FF4D676F2CDADE8D048229CE48EB59CEC04D296A26BCC2281
BD52EAB1F1257B2072FB6A47F8B04A8FBFB5F80D5EE08E37DA2FC5568CEDBD67
22FD5315AA630F10FDE056C016E8708A421012B5F31D2666D07FB3DE82AEA6D6
C9B426BF007671D589531F23A94F1B63CB9592F99D4B3778E502740AC33BE133
DD7C09C054CBCB9061CB52AA7967594ABE9D45319074351A22458BA320E1CCB6
206AF3CFEFC9DD9AC8D52984C615271F9F371F813C2A67757E344CF053F565FD
6F0C10B169EA1A4958A71DD9171B6C661E32BCF62A9273AF7A65D171EE1723DC
4FA2E1304942EA10BE88124725F67724FEE3507CAB1777AFB1657D4B76D31933
590406AC412B238033BC718D053B95FFC63470D2A763C744DFC3856ED5ADFE84
165114BA2D4D35EA29461E644C2DCDE1782930111A133B870D9704B2C8A0A13B
D899D43B45D6CB411C89EF3F5F574F8C44D23A3F54491D88330F51C42FC7C9FC
C6E8E83E214C89C650B8A15BBB4071C7C11106147D2C80BC3491CD8BD7C953A0
E4950A4F844E2C397AF016C4B9EF8401C8278E0A1E15993C4D12DD7581
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43ED8EF5C8884274EC7FD5E57E10CCA8B09C0D3FAFE7F9122F1F259E133CC
DF1DC4CD54AFABF522EB5F04445F241CEA612AD474377E241B56E22412356E46
2A7E818027FFB057270EBFE11971EBE66E203F3FE3B48BCAB8E6DC985E41510C
37D22F2AB42B414279EFFEE416CF4B52A51B214D3F826575C60D5D4C4CDAF96C
2A8AE2BAA62C353B3B81BA71CF70354594D933D4A6BF0124981F4156244DDB78
9330619D5B18F788760796E2BEF60B790CE855AE62039F6E23923F4DD6309DD3
E47CF1FA44EF753246BA20720ACB9D861F331CA1739CE12AF94A7F3B9119027A
D8275C9A1B5B84158686025BBE2AFAB98AC164C9FF51091FD936D27583C816D0
73CD893B009FC205B27310E65C1ECB79F35C1F9BDF4D32E3AECF0E6F4EFE0D61
F15C34E770DBBFD4E49ECB5FAEE2F5EF559C1C677C648926B5CD10691FB92B0A
A345AE441E622CA540193951C15763CBFF6A344893E0DE5A50355054738D70B4
DC61569A9CB25021A1AB26F7C1DAC7BA99E4416C6B379D9487FDDB85B3F7617F
747B71E7FB759E402F8D559FC4AEC1D1CC40672A120DC0E9B50E4C603CDED14B
3FDF8501E76B80E3B89A010793F4E2895BDDB400214CEFC5AE111A59FCECEC01
F1ED67AAF9B8970DB7AF25E32F81C637405E3292C48DAAA023A3F56A2884B8E8
84D9F426AB774A7BF5190A15EE9BE0C7219D5A81242E3E6C280CF6E73BE0C3AB
BA0621D15EB0B957204CE3CF8764FDEFC911B5E379FF2A5191D8A7F3F060D1FE
3A087D7E9CD5DF45EB900CFCCEBCDA451565EECF00E5EB279F9AA6E2F0C79EBD
F0075A6941D1B39FA89EEA50FE11AC5FF0A590473E33BB560A349839F83EBB58
84FA406ACF07081EE23B0ADD014967C6F33BB023EDBA0192D2F7D229905B2783
CB6F2C6544FEBF93BB0FE0320DDFC90E3FC09BF16EE599334EF23956BECC8431
C1B68717673328AACCF795D5F5EFCCD9BFCA0968381F3AE06B1468849270A5C9
C75EAE740402DED7F97F1134D15742D94C8C8CB48E3C9B06E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 23 /followsequal put
dup 24 /similar put
dup 26 /propersubset put
dup 33 /arrowright put
dup 48 /prime put
dup 50 /element put
dup 55 /mapsto put
dup 56 /universal put
dup 102 /braceleft put
dup 103 /braceright put
dup 107 /bardbl put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B173D
04EB366360BE407C85D3D5438FC30734039BA64C612CE4B55B31D7CF38FDA828
F09E354CFE201E2EF622184F4F77D062F6AAE96801D1AB07FAD7681FECCBB4BA
BA1CB90A126BF167630971BC818F83B1FA1212B92B903556C5BF3C524664AE0A
B89DF0865E14A2374BC9C5097DADB8D380DEF7DC1DC78624C748192FA321C96B
32DB626F7A1363DB3004BFD229E6A1E22554AF326DDC6C3E637CC8580098961C
D6EFEBC99973D55751D6F766B2D8A1776493BF6F949889654AE58EBA7754AFC7
ECC4FF008A8123FAD0B30DFAF717211AC59032442EA54F13E1BC55E428C82679
BD8273610FD4348A72D6C751345E5AA0E578C8752FC7AD65268239B30A36148A
9D476393226F2B043586B1F6EF1D81C607DDC24276002CA2C67146942DAFE5DD
8B495E093BC2D3A3616EC52E57E5F3E894111BA837D199443B828C972183B33C
EE856D8890B5C5215D69A2717E3C70E0E595A9A42D9D117DB62D52963D9E82B7
9A1176B4B2E66BDC867F547A5525CBBBA867ED1223C8CF29FD012001ECFCD4C7
F39E0BFBBE2AB6F26EF4C09AD71A9DE6DFCA06F9DA1C4FD7CBDF1DEEC3E36E25
D749C89DC1708152A8DC652536C939F422F7D4C4C81032AB74C4E56E7B3E6FCE
004AC1161C6193CC80BC376112A5002761823F35B63BFA9563683990002EB1AA
E939CE5D56BB35BFF4E8559A188FDBB40969D70ADCAE72745F41C9F33C4EA7E3
3C5974585E1E4DEF84979942C5AA0B21CA20BC9EA91B74EC159D7D6E38ECFF35
ED159F89A4A81151B04A442C87346335CD4BECA8BAB354CA0DB31FFF08E8C5DD
FAA4392A1BE9440DF500347B27B5B23EE68150A7725A8EBC261E5D294F70FFF2
85F9509A15351617716906CCD741FEF62DBF9568DD203EDF5CA57646DDC4A659
08C33B6456EA0A216C52E70C9F4FED359C63F01C4E9301ACECA894C73A8D3286
B10D753A0394ABEEA099E59531A0A206D36384B60F58580D454B04088B7B6B2F
F56BD7AA5FD5C9B2458887246EA9AE1B58477382131A93319393CB9A0190EBC0
71519C23AF5D21598384A5C06E6C6EDDD69991BAE9E90CB5F5692BDCCAF6F32D
B58612E7D961B3FAF0B1535673D3FD05E25390E7B5575F5FB13461FB2C137E62
C5F742F2109BB4EF34E44E18071A0FE28182BC2600800EFE12CB8C8D649A0806
0BE26CA34520AF49BF0EDF93195C0888180FE6FCF2DA7ABBEE4771B7F10B5C8D
75DC34EAA2477BEDDFD03836A5A9130F55342EF64C9DE1632B293ED7470EAEBB
E7926D5E05E1C80AC5FF365EC87904A27DF728836878918CA207C2E8B48BF927
CE87044BD4F0314081214FD0316B200B39AD6ABE1A0B4318825B23A4F3CDC63D
6B41F1B2B9B1FE4F34D6831E3CF73F3131E04319222E003AC961DC21048FD34E
C2DAE392F4ECE0B61C00CC7CC3FBC6731E1B4C7F79B72CD332F96DFE1244945F
350361ACEE62055C810B52BDBA4291ABE69B2A2AB9063C21B68F647FEE8960EB
218B3289C9D91032883786F54EC285704C8FBD71ACBA23B26E3DC237D3825A7C
BDBA93DF831122691596BB162542CFF7D68D61F27E275D8B867DF0A94741C56B
386B63480284ACE9BCA1337F79A2662257EDCCAF0FB253DDCF5574B41A3A008D
32C08910F51BB9FD8D4B8BC0639E1723B6639858D7005BABAFAFAEF12045E22F
49FE1DF723F127142D07715DF3F0002CEF34404CC3AE037BD2E3E06C3F3CAB32
9232012E0E046A112217FA216BBEF53FB5AEED05D64907AD2E2682F2C695FB1F
3D24DAA589731815612833CBB815DE6289FAB541BEA7B282FD6016E15417816F
BFA95C22B2AECFF0FD11E95E669267E7DBD0605F7BF66712AD86BA5EC8127858
94DD9BF07A1781F2F7DB01188F4E304C4610FADF063DA725E07003D6195EB642
4F56A2859D545EDA8E463A624FBD55F481B9766C525EACF2538B1727A64089F3
107B384AA144317DE155BCE5FFCCDABF4F7FA90BB17A65DBED7589B675920BAC
DDEDFA0D92254C9ACFDA5D5D8F14D744C2F9D27B6EE6591AE8B9F8DC3E48D6C7
8F48E4C6CDECC89C87C439C29C2D94AB9542F2C1865CF70A51E3618FCC12AE3B
BAC1D797A26B4C3E5CC5823F009D2A8D38B577573ADD43A6FE0F5850E4507B6E
D71B05738E0ACDC0C653ED3A609C37DAD94F715A4E540884D9D71D680E10975B
67CC3DB8B20856C476FBFA10D1D70CC44A808736C62FB1A6D682AACE43101B12
1FB4D55F759F73D4B0CB9429E63B29564D79ACBDED0CE3D904B0E2081ADCC509
861BC2084E698D64BDCBE250872A5EAB4846D4995C6C5A645EF436C92AF8FE6C
4246FA53552917DBE23A4A2E2D8101584A62E6CEA034BF17F8E58951490286C4
94438E1761CE46F8B18CB59D9F6488910609FD5F83F72FED7B5E0DA73222AF7F
A0CDBE4C6166105130C88D04C192E1F73AD78BFFF37A432D802C2BD70BD8C5A2
229C4114AD8A1CDD23A1AA44455FB756B4C43FA27076F032964AFFDAE5D2205E
9EA50DE388D8C43D52579333EBC0C99BA3D1334DC9FFD264D87F2E59792BEC0D
DA1E76B4C773ACB08DFFC2C4298244FFABAC7F4E5597A5B54A05440EE022A2E5
0BF87E7F50F100500C31E686F3154CE93447538F3EFE8C81ED6FA24AFB45B6BC
01EF436044B8AF2121F0745F493C44B12CF5716BDF488F2FF91D51F0F6818DF6
86FA504E94AF546DF6D9F7252F055FF96AF05B051F2C47DFFB75575E7269E273
1AC77435F8B2D7105F06D520A456B2FA4C0C79D28DED282BC3CF127832423429
0489E55FBA316CADEE09CB666AC9F79572E1B80D1CD182E534ABD425CAC2302D
40A641A3666B9A3338574C6214C55B480B2792AC2E3BA3A1457B40AB5F1C579B
F978411889457BD384CA9FDD2707AAAC6BE070A5DBD8E670A4FACB7D03227DEC
434AC11174AA2B139125BB44F713EF5B44139370D33FFE1E972CD6B90E31CCCE
C70F675775923759FE3FB282CCDD8DFC11CB1092C8F977B7265D554F48FCD9DB
68C5E995D71E2ADE50B7DC1A0D17C38F8D54E298082ACF8C5B352FD4124E7C23
A90160F38B03D6B9C93F182487582C623CD245349C69CC28AFCD2D087F75D11D
29FA8AC38366C06DC0FD5D501E58C69EEA6F22E46B258F3F4DA4210C4A35B49B
F587A34BCC776B9E03DA429A4632CC4C9A53E4C205B438C02322D163D8C76066
74E15732E38549B7AB7A2DA471EA6A1872398F7750388E6EA2B123E55AE9A7B7
11D0DF546545E032AFD129BB998AE7C54C69D43DB7CE3E846841925F742F7497
99D31748619CED333B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9122E8494CE3AC668
3B5554571BE12596F1E4AC4A664CDCEB7842581CA963B239C132D1566EA3C8D8
813C2E0080DEDC279CF83DA020EE0285979C4568B1805BD605BBC48767D7E254
2CDACC60553FBCF6C09B8F0B42CEEF693F098F68C9050D6E601A3307C3482173
C52C785C77938E895784B9D7442495A411942ADB7F3DAD182C4DFE4CFA5E25E4
085971B4609973340944D9505C22E9B3AF8886495B2F7FF02617D82222A089D2
E28F7D9F6A1DD342AA0D497399B6CD04C9ED54A1438D29A7A714B8488A5A9A47
0D0B7F9A5ED08B01294992BC3BDD904E3472A62290CDEBB146B5BBF2F8F6AE1B
BB6686A3E784726ACB83BC86529F3F5F1FF08A1E8641FCEDDB4441844FD2AF76
8DC09BEF6AF3CA872061D593FC9F4C8E5CB817C343736C070C225886297544F8
BCC589CE170F5EB25F61BB1861C534B6D4FE0B3A878122C7EA54BDFAFB92C687
74B003E59D28B2070CDB1D060D17B9BC495C1736BE4EE992021189336CDB99F8
E99356C5C84003478CE8F9A5C480E0CD7FE053E797378CD182FAA91D9DF0E626
1556BF470661AD27664CA4A214752C39C0FD52500E8D21D8C42AED5E902F4D4D
0A84620ACC7459E8053BBEC05008A04E0C939686682AB2277EED2469F6EEF3CC
BAD9E2B59940867873F249477A81819AF76794FC0042E2E7D11E592F62E24424
14FB4C08557C946362D8C63CA091BACAA2F28EC91E57B77EEFFFA0162D416A56
4E284C6D512A513B44A02F2B79C05FF15EE8BBA574171C7EA709B110067BDED2
0B5DCF4C876A44A605DFC28ABAEB0D936DCAEF2306926133CC8493D9E95377BF
12F0BCD138EB9A79A0C62128C1E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/UniqueID 5031982 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 83 /S put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4B144C6A
0133D120D220C791738B0CFF74AD0BC6BFFBE163DEE83329462435575B07F4CB
8D5F4D4A1CE333DEF6158750FA879AD2FE472ABFBDC0AC815B61831B9FC0792B
B78578441FFECBA1924D3250FF74C7A60AECF7C4B350822CABC775360F8147D4
0CBB485DBC4E559069D50B1984B405494A19BC80F638158D5B80EED08906E448
74A5BD55DE020C1F97549E59B06AC529DA1F868CC63ED96EF6CF5119D9771548
F2DA3B490834E7B4CECD9293A5DD581A323F06A1983104FD0583F6B3B0E85E66
C882C0AABD75F913649F77D74740BDDC09B2FAEBE1A7FFB35B258F70E467C0A7
7E0A3D71A628ED2C5458AED8575D5AA5F99198A39BE62AF7CFBAB277B8A66C84
13AB05099393336984A0495B5AFDFA147835FE0BCFC55CE05D377D3EC454B9E8
E4E4B7897387234F730A1D2E0EC08BC400F4CC30DF20F770307817C09D60F570
96E4ADBB28E969382B124072BC0D21A599EF056F964BA478FF00A40E236B7BCA
3A83192D97B128519E4CCF272AFF773E96A5067A963B28EFCF9069994A576F56
985ACE98AF85DB5EBCE675FD54311CB14681571757E31E9FCDDFA1761BD627D8
6E69BDF08C1356CE7697395635D1205BB77DD35458B69695B18EDFFF6D3F790D
4C56390019E47A7959FBE3D7E3776948F8D7C9B6E0A00EF3B88CD94B16BD8190
D0ABD49A915F3F61318A2700ADDA0B5620DABD96113671378C42B44A425855EA
FBEF470190ED1166EFC65030484D3C3C93DA20B328E820C7F49279CDE37F1925
B6693F95DE687BF693F79CF794D01C25251E3CA06E468CE6D5028DE72E7BCEAD
976678A366AB84DB2D3C982F74530633FF7E34D5594796765CBD5EBF9F12B9B5
6D4593017021A0783962414281BCB53CA4FA0FDE0CFA710A57EC01B0363AF006
1698D9E762B41B580942794D4A017FD770673DD451BB273FE9838DBA156E9322
B0BAED95225CBB27D783B64B5C9A58D5D7C06A014E220A1E5F3F6D37E22FE877
ECDA60723573367FA38BFF5B8D25D5E5CF1A361BF068B882433718D09BEA52A9
9CDB8D30603A230F97C725DD42DAD87E81677E222489CEFF6D0FF1E88A23B776
F130E7425BA1092D8AD08AF34AED36BADF5E78CCA6D45DF7C92D22F746A1E3E0
6124E402123883B0ABF9432B1BA4AC5896C36CA417A5C37D27861FE3681BFC6C
4B33EABD5CAAC79310753CF29ACE3E23647A69390CCCCBB4FE15196DC9DC52F9
B0C4AD57262D570ACB99A759C131550FA0437C9D679DA415AFCE27FD761495FC
55E312687B98F40A0DA2D4CFE3FC779A7B0C9810F803BC9CF8263BFCCB5EA9D5
7FBE736BB2BFD587CF11C0198546DFEBE411181E037F11F50ADCAA3173BB9102
CE3295099EED85565E3AE6E0A959FDA2A175B7507EB1940061ED088A50D6D515
A39DD382CECD577351A402989A8D223D078887B1B9E56753F625FA2CEA1E8D76
DD2E2375709A41C2D0F55E1465E8F8658FB55C849077A96053111F1F1EB6DCA6
165CB52E3F026B0722D80E42EC69D4BB6ECC249318DA6B10D3D6F233AE8DDF59
97443CDC7D254BCABBCF436AF9C9C6B0FE7D8E25386243128DC5BAC865E4FB09
FD6C863D915A825669B0935EB0F94E7C4115D3AC316765D0DD11BACA27A28B34
0B52BB8F85E8C193F8A21FF77D688FB52F11DEB377AA9D897724D23CD432BC89
9751DA9EA55DD51C722A08084ED0129A3C4F1CF033F0CC958E223D201AD9E255
F295BF969E12C3D3FA5F0B98A6AA41AD18794DB36B02C3DC95B5D9A4849941F5
9238BD872679BE88024C8F07B1A151CD1AB6E5B05D9680B837F5C9F91B1CD4E8
76EF7E23D1418544D50FB7A45C09E6F13A78FFBAFB6E3727FC99F7C3B567B325
5B6E75366AC682DE2856A6621406CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (nonglobal11Nov11.dvi)
@start /Fa 103[45 31[45 45 1[45 45 45 45 1[45 45 45 45
45 2[45 45 2[45 45 1[45 45 38[45 10[45 45 46[{
 TeXBase1Encoding ReEncodeFont }21 74.7198 /Courier rf
/Fb 145[55 4[28 4[55 29[61 11[33 58[{ TeXBase1Encoding ReEncodeFont }5
99.6264 /Times-Bold rf /Fc 211[77 44[{}1 99.6264 /MSAM10
rf /Fd 204[29 29 29 49[{ TeXBase1Encoding ReEncodeFont }3
58.1154 /Times-Roman rf /Ff 141[23 6[26 1[16 28[32 76[{
 TeXBase1Encoding ReEncodeFont }4 58.1154 /Times-Italic
rf /Fg 147[32 4[24 103[{ .167 SlantFont }2 58.1154 /Symbol
rf /Fh 26[102 229[{}1 143.461 /Symbol rf /Fi 165[50 7[42
82[{}2 89.6637 /CMEX10 rf /Fj 144[66 66 4[47 47 50[66
66 66 66 28[53 53 73 73 59 59 2[55 11[46 46{}17 99.6264
/CMEX10 rf /Fk 162[21 1[21 29[58 17[58 1[29 29 40[{}6
74.7198 /CMR10 rf /Fl 90[53 165[{}1 74.7198 /Symbol rf
/Fm 148[37 56[50 1[21 47[58{}4 74.7198 /CMSY10 rf /Fn
148[50 3[50 50 45[55 0 4[66 16[100 6[77 1[77 77 1[77
77 18[28 77{}14 99.6264 /CMSY10 rf /Fo 75[25 57[29 33
33 1[33 37 21 29 29 37 37 37 37 54 21 33 21 21 37 37
21 33 37 33 37 37 8[46 2[54 42 37 46 54 46 54 50 62 42
50 33 25 54 54 1[46 54 50 46 46 18[19 25 3[25 25 25 36[37
2[{ TeXBase1Encoding ReEncodeFont }53 74.7198 /Times-Italic
rf /Fp 193[58 1[58 21 21 58[{}4 74.7198 /CMMI10 rf /Fq
73[37 73[41 4[31 39 1[37 100[{ .167 SlantFont }5 74.7198
/Symbol rf /Fr 172[55 72 82[{}2 99.6264 /MSBM10 rf /Fs
133[39 44 44 66 44 50 28 39 39 50 50 50 50 72 28 44 1[28
50 50 28 44 50 44 50 50 3[39 1[39 55 1[61 1[61 72 55
50 61 72 61 72 66 83 55 66 1[33 1[72 61 61 72 66 61 61
6[33 50 50 50 50 50 50 50 50 50 50 1[25 33 3[33 33 37[50
2[{ TeXBase1Encoding ReEncodeFont }65 99.6264 /Times-Italic
rf /Ft 193[77 50 77 28 28 58[{}5 99.6264 /CMMI10 rf /Fu
73[49 72[57 55 4[41 52 1[49 1[55 63 97[{ .167 SlantFont }8
99.6264 /Symbol rf /Fv 162[28 1[28 29[77 17[77 1[39 39
40[{}6 99.6264 /CMR10 rf /Fw 26[71 19[71 43[71 165[{}3
99.6264 /Symbol rf /Fx 135[50 2[50 50 50 2[50 50 50 50
1[50 1[50 1[50 1[50 50 50 1[50 32[50 17[50 46[{
 TeXBase1Encoding ReEncodeFont }17 83.022 /Courier rf
/Fy 75[25 11[25 17[37 1[33 33 24[33 37 37 54 37 37 21
29 25 37 37 37 37 58 21 37 21 21 37 37 25 33 37 33 37
33 3[25 1[25 46 54 54 71 54 54 46 42 50 1[42 54 54 66
46 54 29 25 54 54 42 46 54 50 50 54 6[21 37 37 37 37
37 37 37 37 37 37 1[19 25 19 2[25 25 25 5[25 30[42 25
1[{ TeXBase1Encoding ReEncodeFont }78 74.7198 /Times-Roman
rf /Fz 105[50 27[44 50 50 72 50 50 28 39 33 50 50 50
50 78 28 50 28 28 50 50 33 44 50 44 50 44 3[33 1[33 2[72
94 72 72 61 55 66 72 55 72 72 89 61 1[39 33 72 72 55
61 72 66 66 72 5[28 28 50 50 50 50 50 50 50 50 50 50
1[25 33 25 2[33 33 33 1[83 33[55 55 33 1[{
 TeXBase1Encoding ReEncodeFont }74 99.6264 /Times-Roman
rf /FA 166[58 58 1[58 58 49 44 53 58 44 58 58 71 49 58
1[27 1[58 44 49 58 53 1[58 65[{ TeXBase1Encoding ReEncodeFont }21
79.701 /Times-Roman rf /FB 134[42 42 60 42 42 23 32 28
42 42 42 42 65 23 2[23 42 42 28 37 42 37 42 37 12[51
46 2[46 60 2[51 2[28 7[60 18[21 28 21 41[46 2[{
 TeXBase1Encoding ReEncodeFont }34 83.022 /Times-Roman
rf /FC 139[28 32 37 14[37 46 42 31[60 65[{
 TeXBase1Encoding ReEncodeFont }7 83.022 /Times-Bold
rf /FD 136[84 1[58 32 45 39 1[58 58 58 1[32 2[32 58 2[52
58 52 1[52 16[65 2[103 11[84 18[29 46[{ TeXBase1Encoding ReEncodeFont }
19 116.231 /Times-Roman rf /FE 134[100 1[144 100 100
55 78 66 100 100 100 100 155 55 2[55 100 100 66 88 100
2[88 13[111 133 5[122 7[144 133 133 144 65[{
 TeXBase1Encoding ReEncodeFont }27 199.253 /Times-Roman
rf /FF 141[22 4[52 7[29 1[29 33 13[41 1[44 11[37 1[48
2[48 7[33 33 33 33 33 33 33 33 33 33 3[17 44[{
 TeXBase1Encoding ReEncodeFont }21 66.4176 /Times-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black 3867 -150 a FF(1)p Black
Black Black 65 136 a FE(A)70 b(Con)-8 b(v)m(erse)69 b(Sum)g(of)h
(Squares)g(L)-11 b(yapuno)m(v)67 b(Result)1072 485 y(with)j(a)g(De)m
(gree)h(Bound)757 794 y FD(Matthe)m(w)41 b(M.)g(Peet)f(and)g(Antonis)i
(P)n(apachristodoulou)p Black Black 1796 1432 a FC(Abstract)p
Black Black 349 1669 a FB(Sum)c(of)g(Squares)g(programming)d(has)k
(been)e(used)i(e)o(xtensi)n(v)o(ely)d(o)o(v)o(er)h(the)i(past)f(decade)
g(for)g(the)g(stability)199 1818 y(analysis)e(of)f(nonlinear)f(systems)
i(b)n(ut)f(se)n(v)o(eral)g(questions)g(remain)g(unanswered.)e(In)i
(this)h(paper)m(,)e(we)i(sho)n(w)f(that)199 1967 y(e)o(xponential)24
b(stability)i(of)f(a)h(polynomial)e(v)o(ector)g(\002eld)i(on)g(a)g
(bounded)d(set)k(implies)e(the)h(e)o(xistence)f(of)h(a)g(L)-5
b(yapuno)o(v)199 2117 y(function)25 b(which)h(is)i(a)e(sum-of-squares)e
(of)j(polynomials.)d(In)i(particular)m(,)f(the)h(main)h(result)f
(states)i(that)e(if)h(a)g(system)199 2266 y(is)h(e)o(xponentially)c
(stable)k(on)e(a)i(bounded)c(nonempty)h(set,)i(then)g(there)f(e)o
(xists)i(an)e(SOS)i(L)-5 b(yapuno)o(v)25 b(function)g(which)199
2416 y(is)i(e)o(xponentially)c(decreasing)h(on)h(that)h(bounded)d(set.)
j(The)g(proof)e(is)i(constructi)n(v)o(e)e(and)h(uses)h(the)g(Picard)f
(iteration.)199 2565 y(A)41 b(bound)d(on)i(the)g(de)o(gree)e(of)i(this)
h(con)m(v)o(erse)d(L)-5 b(yapuno)o(v)37 b(function)i(is)i(also)f(gi)n
(v)o(en.)f(This)h(result)g(implies)g(that)199 2715 y(semide\002nite)29
b(programming)c(can)j(be)h(used)g(to)g(answer)f(the)h(question)f(of)g
(stability)h(of)g(a)g(polynomial)e(v)o(ector)g(\002eld)199
2864 y(with)i(a)g(bound)d(on)j(comple)o(xity)-5 b(.)1489
3186 y Fz(I)t(.)56 b(I)t(N)t(T)t(RO)t(D)t(U)5 b(C)h(T)f(I)g(O)g(N)100
3388 y(Computational)34 b(and)j(numerical)e(algorithms)g(are)i(e)o
(xtensi)n(v)o(ely)d(used)i(in)g(control)f(theory)-6 b(.)36
b(A)g(particular)0 3561 y(e)o(xample)f(is)h(semide\002nite)f
(programming)g(conditions)f(for)j(addressing)e(linear)h(control)g
(problems,)f(which)0 3735 y(are)f(formulated)f(as)g(Linear)g(Matrix)g
(Inequalities)f(\(LMIs\).)h(Using)g(such)g(tools,)f(se)n(v)o(eral)g
(questions)g(on)h(the)0 3908 y(analysis)41 b(and)h(synthesis)e(of)i
(linear)f(systems)g(can)h(be)g(formulated)f(and)g(addressed)h(ef)n
(fecti)n(v)o(ely)-6 b(.)40 b(In)i(f)o(act,)0 4081 y(e)n(v)o(er)c(since)
h(the)f(1990s)g([1],)h(LMIs)f(ha)n(v)o(e)g(had)h(a)g(signi\002cant)f
(impact)g(in)g(the)h(control)f(\002eld,)g(to)h(the)f(point)0
4255 y(that)32 b(once)h(the)g(solution)e(of)i(a)g(control)g(problem)f
(has)g(been)h(formulated)g(as)f(the)h(solution)e(to)i(an)g(LMI,)f(it)h
(is)0 4428 y(considered)h(solv)o(ed.)100 4599 y(When)42
b(it)h(comes)f(to)g(nonlinear)g(and)h(in\002nite-dimensional)d
(systems,)i(the)g(equi)n(v)n(alent)f(problems)h(can)0
4773 y(be)33 b(formulated)g(as)g(polynomial)f(non-ne)o(gati)n(vity)e
(constraints)i(under)h(a)g(L)-5 b(yapuno)o(v)32 b(frame)n(w)o(ork,)h(b)
n(ut)f(these)p Black 75 5024 a Fy(M.)24 b(M.)f(Peet)h(is)f(with)h(the)g
(Department)g(of)g(Mechanical,)h(Materials,)f(and)g(Aerospace)h
(Engineering,)g(Illinois)e(Institute)h(of)g(T)-5 b(echnology)g(,)25
b(10)0 5111 y(W)-6 b(est)26 b(32nd)h(Street,)e(E1-252B,)i(Chicago,)g
(IL)f(60616,)h(U.S.A.)e Fx(mpeet@iit.edu)75 5229 y Fy(A.)i(P)o
(apachristodoulou)i(is)e(with)h(the)f(Department)i(of)e(Engineering)i
(Science,)e(Uni)n(v)o(ersity)h(of)g(Oxford,)g(P)o(arks)f(Road,)h
(Oxford,)g(O)m(X1)f(3PJ,)0 5316 y(U.K.)e Fx(antonis@eng.ox.ac.uk)p
Fy(.)p Black Black 0 5556 a FF(December)g(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black 3867 -150 a FF(2)p Black
0 116 a Fz(are)36 b(not,)f(at)h(\002rst)f(glance,)h(as)g(easy)f(to)h
(solv)o(e.)e(Polynomial)g(non-ne)o(gati)n(vity)e(is)j(in)h(f)o(act)g
(NP)g(hard.)f(It)h(is)f(for)0 289 y(this)k(reason)h(that)f(se)n(v)o
(eral)g(researchers)i(ha)n(v)o(e)e(look)o(ed)g(at)h(alternati)n(v)o(e)e
(tests)h(for)h(non-ne)o(gati)n(vity)-6 b(,)36 b(that)j(are)0
462 y(polynomial-time)g(comple)o(x)i(to)g(test,)g(and)h(which)g(imply)e
(non-ne)o(gati)n(vity)-6 b(.)38 b(One)k(such)g(relaxation)f(is)g(the)0
636 y(e)o(xistence)h(of)g(a)h(sum)f(of)g(squares)g(decomposition:)e
(the)j(ability)e(to)h(optimize)f(o)o(v)o(er)h(the)g(set)g(of)g(positi)n
(v)o(e)0 809 y(polynomials)48 b(using)i(the)g(sum-of-squares)f
(relaxation)h(has)h(undoubtedly)d(opened)i(up)h(ne)n(w)f(w)o(ays)g(for)
0 982 y(addressing)42 b(nonlinear)g(control)g(problems,)f(in)h(much)g
(the)g(same)h(w)o(ay)f(Linear)h(Matrix)f(Inequalities)f(are)0
1156 y(used)34 b(to)g(address)g(analysis)g(questions)f(for)i(linear)f
(\002nite-dimensional)f(systems.)g(Ho)n(we)n(v)o(er)l(,)g(there)h
(remain)0 1329 y(se)n(v)o(eral)g(open)h(questions)e(about)h(ho)n(w)g
(these)h(methods)e(can)i(be)g(used)g(to)f(search)h(for)g(L)-5
b(yapuno)o(v)33 b(functions)0 1502 y(for)c(nonlinear)f(systems.)g(F)o
(or)h(references)h(on)e(early)h(w)o(ork)g(on)g(optimization)d(of)j
(polynomials,)e(see)i([2],)g([3],)0 1676 y(and)23 b([4].)h(F)o(or)f
(more)g(recent)h(w)o(ork)g(see)f([5])h(and)f([6].)h(F)o(or)f(a)h
(recent)g(re)n(vie)n(w)e(paper)l(,)i(see)g([7].)f(T)-8
b(oday)i(,)23 b(there)g(e)o(xist)0 1849 y(a)32 b(number)e(of)i(softw)o
(are)f(packages)h(for)f(optimization)e(o)o(v)o(er)i(positi)n(v)o(e)d
(polynomials,)h(e.g.)j(SOST)n(OOLS)g([8])0 2022 y(and)j(GloptiPoly)e
([9].)100 2196 y(At)g(the)g(same)g(time,)f(there)i(are)g(still)e(a)i
(number)e(of)i(unanswered)f(questions)f(re)o(garding)g(the)h(use)h(of)f
(sum)0 2369 y(of)43 b(squares)f(as)h(a)g(relaxation)f(to)h(nonne)o
(gati)n(vity)c(and)k(its)f(use)g(for)h(the)g(analysis)f(of)g(nonlinear)
h(systems.)0 2542 y(Unanswered)29 b(questions)f(include,)h(for)g(e)o
(xample,)g(a)g(series)g(of)h(questions)e(on)h(controller)f(synthesis)g
(and)h(the)0 2716 y(role)f(of)g(duality)f(to)h(con)l(v)o(e)o(xify)e
(this)h(problem,)g(as)i(well)e(as)h(estimating)f(re)o(gions)g(of)h
(attraction)f(of)h(equilibria.)0 2889 y(On)33 b(the)g(computation)e
(and)j(optimization)d(side,)h(it)h(is)g(unclear)g(whether)g(multi-core)
g(computing)e(could)i(be)0 3063 y(used)28 b(for)h(computation,)e(as)i
(well)f(as)h(ho)n(w)f(to)g(tak)o(e)h(adv)n(antage)f(of)h(sparsity)f(in)
g(semide\002nite)g(programming.)100 3236 y(In)35 b(this)g(paper)l(,)h
(we)g(do)g(not)f(consider)g(the)h(problem)f(of)h(computing)e
(sum-of-squares)h(L)-5 b(yapuno)o(v)34 b(func-)0 3409
y(tions.)j(Such)h(w)o(ork)g(can)g(be)g(found)f(in,)h(e.g.)g
([10]\226[13].)f(Instead,)h(we)g(concentrate)g(on)g(the)g(properties)f
(of)0 3583 y(the)e(con)l(v)o(erse)f(L)-5 b(yapuno)o(v)33
b(functions)h(for)h(systems)e(of)i(the)g(form)1667 3857
y(\001)-46 b Fs(x)q Fv(\()n Fs(t)7 b Fv(\))20 b(=)38
b Fs(f)14 b Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))p
Ft(;)0 4131 y Fz(where)46 b Fs(f)34 b Fz(:)19 b Fr(R)470
4095 y Fo(n)532 4131 y Fn(!)h Fr(R)724 4095 y Fo(n)795
4131 y Fz(is)30 b(polynomial.)e(In)i(particular)l(,)g(we)g(address)g
(the)g(question)f(of)h(whether)h(an)f(e)o(xponen-)0 4304
y(tially)36 b(stable)g(nonlinear)h(system)e(will)i(ha)n(v)o(e)f(a)h
(sum-of-squares)g(L)-5 b(yapuno)o(v)35 b(function)h(which)g
(establishes)0 4478 y(this)30 b(property)-6 b(.)30 b(This)g(result)g
(adds)h(to)f(our)h(pre)n(vious)e(w)o(ork)i([14],)g(where)g(we)g(were)h
(able)f(to)f(sho)n(w)g(that)g(local)0 4651 y(stability)40
b(on)i(a)h(bounded)e(re)o(gion)g(implies)g(the)h(e)o(xistence)f(of)h(a)
h(e)o(xponentially)d(decreasing)i(polynomial)0 4824 y(L)-5
b(yapuno)o(v)33 b(function)h(on)g(that)h(set.)100 4998
y(W)-8 b(ork)31 b(that)f(is)h(rele)n(v)n(ant)f(to)g(the)h(one)g
(presented)g(here)g(includes)g(research)g(on)g(continuity)e
(properties,)i(see)0 5171 y(e.g.)26 b([15],)h([16])g(and)f([17])h(and)f
(the)g(o)o(v)o(ervie)n(w)f(in)h([18].)h(In\002nitely-dif)n(ferentiable)
e(functions)h(were)h(e)o(xplored)p Black 0 5556 a FF(December)e(3,)e
(2011)3181 b(DRAFT)p Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black 3867 -150 a FF(3)p Black
0 116 a Fz(in)23 b(the)f(w)o(ork)h([19],)g([20].)g(Other)g(inno)o(v)n
(ati)n(v)o(e)c(results)k(are)g(found)g(in)f([21])h(and)g([22].)g(The)g
(books)f([23])h(and)g([24])0 289 y(treat)29 b(further)g(con)l(v)o(erse)
g(theorems)f(of)h(L)-5 b(yapuno)o(v)f(.)26 b(Continuity)i(of)h(L)-5
b(yapuno)o(v)27 b(functions)h(is)g(inherited)g(from)0
462 y(continuity)37 b(of)i(the)g(solution)e(map)h(with)g(respect)h(to)g
(initial)e(condition.)g(An)i(e)o(xcellent)f(treatment)g(of)h(this)0
636 y(problem)34 b(can)h(be)g(found)f(in)h(the)f(te)o(xt)g(of)h(Arnol')
-5 b(d)34 b([25].)100 809 y(Unlik)o(e)28 b(the)i(w)o(ork)f(in)g([14],)h
(this)e(paper)i(is)f(closely)g(tied)g(to)g(systems)f(theory)h(as)h
(opposed)f(to)g(approxima-)0 982 y(tion)k(theory)-6 b(.)33
b(Our)h(method)f(is)h(to)f(tak)o(e)h(a)g(well-kno)n(wn)f(form)h(of)g
(con)l(v)o(erse)f(L)-5 b(yapuno)o(v)32 b(function)h(based)h(on)0
1156 y(the)29 b(solution)e(map.)h(W)-8 b(e)30 b(use)e(the)h(Picard)h
(iteration)e(to)g(approximate)g(the)h(solution)e(map.)i(The)g(adv)n
(antage)f(of)0 1329 y(this)e(approach)g(is)g(that)g(if)h(the)f(v)o
(ector)g(\002eld)h(is)f(polynomial,)f(the)h(Picard)h(iteration)f(will)f
(also)i(be)f(polynomial.)0 1502 y(Furthermore,)h(the)g(Picard)g
(iteration)f(inducti)n(v)o(ely)f(retains)h(almost)g(all)h(the)f
(properties)h(of)g(the)f(solution)g(map.)0 1676 y(The)32
b(result)f(is)g(a)h(ne)n(w)f(form)g(of)h(iterati)n(v)o(e)e(con)l(v)o
(erse)i(L)-5 b(yapuno)o(v)29 b(function,)d Fs(V)2752
1693 y Fo(k)2791 1676 y Fz(.)31 b(This)g(function)g(is)g(discussed)0
1849 y(in)j(Section)h(VI.)100 2022 y(The)49 b(\002rst)h(practical)g
(contrib)n(ution)e(of)h(this)g(paper)h(is)f(gi)n(v)o(e)g(a)g(bound)g
(on)h(the)f(number)g(of)h(decision)0 2196 y(v)n(ariables)34
b(in)l(v)n(olv)o(ed)e(in)i(the)h(question)e(of)h(local)g(stability)f
(of)h(polynomial)f(v)o(ector)h(\002elds.)g(This)g(is)g(because)0
2369 y(SOS)h(functions)e(of)h(bounded)g(de)o(gree)g(can)h(be)f
(parameterized)h(by)f(the)g(set)g(of)g(positi)n(v)o(e)e(matrices)i(of)g
(\002x)o(ed)0 2542 y(size.)g(Furthermore,)h(we)g(note)f(that)g(the)g
(question)f(of)i(e)o(xistence)e(of)i(a)g(L)-5 b(yapuno)o(v)32
b(function)i(with)f(ne)o(gati)n(v)o(e)0 2716 y(deri)n(v)n(ati)n(v)o(e)
42 b(is)i(con)l(v)o(e)o(x.)g(Therefore,)h(if)f(the)h(question)e(of)i
(polynomial)d(positi)n(vity)g(on)i(a)h(bounded)f(set)h(is)0
2889 y(decidable,)28 b(we)h(can)g(conclude)f(that)g(the)h(problem)e(of)
i(local)f(stability)f(of)h(polynomial)f(v)o(ector)h(\002elds)g(on)h
(that)0 3063 y(set)36 b(is)g(decidable.)g(The)h(further)f(comple)o
(xity)f(bene\002t)h(of)h(using)e(SOS)i(L)-5 b(yapuno)o(v)35
b(functions)g(is)h(discussed)0 3236 y(in)e(Section)h(VIII.)100
3409 y(The)48 b(main)f(result)g(of)h(the)g(paper)g(is)g(stated)f(and)h
(pro)o(v)o(en)f(in)g(Section)h(VI.)g(The)g(section)f(leading)g(to)0
3583 y(Section)g(VI)g(presents)f(a)i(series)e(of)h(lemmas)f(that)h(are)
g(used)g(in)f(the)h(proof)g(of)g(the)f(main)h(theorem.)f(In)0
3756 y(Subsection)35 b(V)g(we)g(sho)n(w)f(that)h(the)g(Picard)h
(iteration)e(is)h(contracti)n(v)o(e)f(on)h(a)g(certain)g(metric)g
(space;)g(and)g(in)0 3929 y(Subsection)d(V)-10 b(-A)32
b(we)h(propose)e(a)i(ne)n(w)f(w)o(ay)g(of)h(e)o(xtending)d(the)j
(Picard)g(iteration.)e(In)h(Subsection)g(V)-10 b(-B)33
b(we)0 4103 y(sho)n(w)26 b(that)g(the)h(Picard)h(iteration)e
(approximately)f(retains)i(the)g(dif)n(ferentiability)e(properties)h
(of)h(the)g(solution)0 4276 y(map,)34 b(before)h(we)f(pro)o(v)o(e)g
(the)g(main)g(result.)f(The)i(implications)d(of)i(the)g(main)g(result)g
(are)h(then)f(e)o(xplored)f(in)0 4449 y(Section)c(VIII)g(and)f(Section)
h(VII.)f(A)h(detailed)f(e)o(xample)g(is)g(gi)n(v)o(en)f(in)h(Section)g
(IX.)h(The)g(paper)f(is)h(concluded)0 4623 y(in)34 b(Section)h(X.)1568
4931 y(I)t(I)t(.)57 b(M)t FA(A)t(I)t(N)31 b Fz(R)t FA(E)t(S)t(U)t(L)m
(T)100 5135 y Fz(Before)44 b(we)f(be)o(gin)f(the)g(technical)h(part)g
(of)g(the)g(paper)l(,)g(we)g(gi)n(v)o(e)e(a)j(simpli\002ed)d(v)o
(ersion)h(of)h(the)g(main)0 5309 y(result.)p Black 0
5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black
eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black 3867 -150 a FF(4)p Black
Black 100 116 a Fs(Theor)l(em)35 b(1:)p Black 50 w Fz(Suppose)f(that)50
b Fs(f)f Fz(is)34 b(polynomial)f(of)i(de)o(gree)f Fs(q)h
Fz(and)g(that)f(solutions)f(of)48 b(\001)-46 b Fs(x)22
b Fv(=)38 b Fs(f)14 b Fv(\()p Fs(x)p Fv(\))35 b Fz(satisfy)1489
390 y Fn(k)p Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p Fn(k)21
b(\024)i Fs(K)17 b Fn(k)o Fs(x)p Fv(\()p Fz(0)p Fv(\))p
Fn(k)11 b Fs(e)2274 349 y Fm(\000)p Fq(l)c Fo(t)0 664
y Fz(for)32 b(some)g Fu(l)h Ft(>)21 b Fz(0,)32 b Fs(K)27
b Fn(\025)21 b Fz(1)32 b(and)g(for)h(an)o(y)e Fs(x)p
Fv(\()p Fz(0)p Fv(\))21 b Fn(2)g Fs(M)t Fz(,)32 b(where)h
Fs(M)j Fz(is)c(a)g(bounded)f(nonempty)g(re)o(gion)g(of)i(radius)0
837 y Fs(r)r Fz(.)i(Then)f(there)h(e)o(xist)f Fu(a)8
b Ft(;)j Fu(b)h Ft(;)f Fu(g)30 b Ft(>)22 b Fz(0)35 b(and)g(a)g
(sum-of-squares)f(polynomial)28 b Fs(V)12 b Fv(\()p Fs(x)p
Fv(\))35 b Fz(such)f(that)h(for)g(an)o(y)f Fs(x)23 b
Fn(2)f Fs(M)t Fz(,)1474 1112 y Fu(a)e Fn(k)o Fs(x)p Fn(k)1701
1066 y Fy(2)1764 1112 y Fn(\024)e Fs(V)12 b Fv(\()p Fs(x)p
Fv(\))22 b Fn(\024)h Fu(b)g Fn(k)p Fs(x)p Fn(k)2398 1066
y Fy(2)3784 1112 y Fz(\(1\))1460 1328 y Fw(\321)-5 b
Fs(V)13 b Fv(\()p Fs(x)p Fv(\))1722 1287 y Fo(T)1792
1328 y Fs(f)h Fv(\()p Fs(x)p Fv(\))22 b Fn(\024)h(\000)p
Fu(g)c Fn(k)p Fs(x)p Fn(k)2359 1283 y Fy(2)2412 1328
y Ft(:)1344 b Fz(\(2\))0 1602 y(Further)l(,)38 b(the)g(de)o(gree)g(of)
33 b Fs(V)51 b Fz(will)37 b(be)h(less)g(than)g Fs(q)1815
1566 y Fy(2)p Fk(\()p Fo(N)t(k)q Fm(\000)p Fy(1)p Fk(\))2098
1602 y Fz(,)g(where)g Fs(k)j Fz(is)c(the)h(minimum)e(inte)o(ger)h(such)
h(that)0 1776 y Fs(c)p Fv(\()p Fs(k)r Fv(\))22 b Fz(:)p
Fv(=)317 1783 y Fw(\345)388 1735 y Fo(N)t Fm(\000)p Fy(1)388
1807 y Fo(i)p Fk(=)p Fy(0)553 1695 y Fj(\000)598 1776
y Fs(e)642 1740 y Fo(T)10 b(L)753 1776 y Fv(+)k Fs(K)6
b Fv(\()p Fs(T)13 b(L)p Fv(\))1117 1740 y Fo(k)1156 1695
y Fj(\001)1202 1717 y Fo(i)1238 1776 y Fs(K)1310 1740
y Fy(2)1351 1776 y Fv(\()p Fs(T)g(L)p Fv(\))1552 1740
y Fo(k)1613 1776 y Ft(<)23 b Fs(K)6 b Fz(,)34 b(and)946
2067 y Fs(c)p Fv(\()p Fs(k)r Fv(\))1114 2025 y Fy(2)1169
2067 y Fv(+)1270 1999 y Fz(log)11 b(2)p Fs(K)1531 1963
y Fy(2)p 1270 2044 302 4 v 1363 2135 a Fz(2)p Fu(l)1582
2067 y Fs(K)1664 1999 y Fv(\()p Fs(T)h(L)p Fv(\))1864
1963 y Fo(k)p 1664 2044 240 4 v 1750 2135 a Fs(T)1913
2067 y Fv(\()p Fz(1)i Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\)\)\()p
Fs(K)k Fv(+)c Fs(c)p Fv(\()p Fs(k)r Fv(\)\))22 b Ft(<)2866
1999 y Fz(1)p 2866 2044 50 4 v 2866 2135 a(2)2926 2067
y Ft(;)946 2322 y Fs(c)p Fv(\()p Fs(k)r Fv(\))1114 2280
y Fy(2)1177 2322 y Ft(<)1474 2254 y Fu(l)p 1287 2299
441 4 v 1287 2390 a Fs(K)6 b(L)11 b Fz(log)g(2)p Fs(K)1686
2361 y Fy(2)1737 2322 y Fv(\()p Fz(1)j Fn(\000)g Fv(\()p
Fz(2)p Fs(K)2092 2280 y Fy(2)2133 2322 y Fv(\))2172 2280
y Fm(\000)2243 2251 y Ff(L)p 2239 2263 40 3 v 2239 2309
a Fg(l)2292 2322 y Fv(\))p Ft(:)0 2625 y Fz(Here)30 b
Fs(T)42 b Fz(and)29 b Fs(N)35 b Fz(are)30 b(an)o(y)e(numbers)g(chosen)h
(such)g(that)f Fs(N)6 b(T)33 b Ft(>)2251 2578 y Fy(log)9
b(2)p Fo(K)2446 2551 y Fd(2)p 2251 2603 229 4 v 2321
2662 a Fy(2)p Fq(l)2518 2625 y Fz(and)29 b Fs(T)j Ft(<)2906
2586 y Fy(1)p 2885 2603 80 4 v 2885 2660 a(2)p Fo(L)3003
2625 y Fz(where)e Fs(L)f Fz(is)g(a)g(Lipschitz)0 2799
y(bound)34 b(for)50 b Fs(f)f Fz(on)35 b Fs(B)723 2814
y Fy(4)p Fo(K)t(r)849 2799 y Fz(.)1459 3107 y(I)t(I)t(I)t(.)58
b(S)t FA(U)t(M)t Fz(-)t FA(O)t(F)t Fz(-)6 b(S)f FA(Q)t(U)q(A)t(R)g(E)g
(S)100 3311 y Fz(Sum)38 b(of)h(squares)g(\(SOS\))h(methods)d(ha)n(v)o
(e)i(been)g(introduced)f(o)o(v)o(er)g(the)g(past)h(decade)g(to)f(allo)n
(w)g(for)h(the)0 3485 y(algorithmic)g(solution)f(of)i(problems)f(that)h
(frequently)g(arise)g(in)g(systems)f(and)h(control)g(theory)-6
b(,)39 b(man)o(y)g(of)0 3658 y(which)d(can)i(be)f(formulated)f(as)h
(polynomial)e(non-ne)o(gati)n(vity)e(constraints)j(that)g(are)i(ho)n
(we)n(v)o(er)d(dif)n(\002cult)h(to)0 3831 y(solv)o(e.)44
b(In)i(these)f(methods,)f(non-ne)o(gati)n(vity)e(is)j(relax)o(ed)g(to)g
(the)g(e)o(xistence)g(of)h(a)f(SOS)h(decomposition,)0
4005 y(which)34 b(can)i(be)e(tested)h(using)e(Semide\002nite)i
(programming.)100 4178 y(Consider)l(,)23 b(for)h(e)o(xample,)e(the)i
(problem)e(of)i(ensuring)f(that)g(a)h(polynomial)k Fs(p)p
Fv(\()p Fs(x)p Fv(\))17 b Fn(2)g Fr(R)p Fv([)p Fs(x)p
Fv(])24 b Fz(satis\002es)30 b Fs(p)p Fv(\()p Fs(x)p Fv(\))17
b Fn(\025)g Fz(0.)0 4351 y(This)48 b(problem)g(arises)h(naturally)f
(when)g(trying)g(to)h(construct)f(L)-5 b(yapuno)o(v)47
b(functions)g(for)i(the)g(stability)0 4525 y(analysis)30
b(of)h(dynamical)f(systems,)g(which)g(is)h(the)f(topic)h(of)g(this)f
(paper)-5 b(.)30 b(Since)i(ensuring)e(non-ne)o(gati)n(vity)e(is)0
4698 y(hard)36 b([26])f(man)o(y)g(researchers)h(ha)n(v)o(e)f(in)l(v)o
(estigated)e(alternati)n(v)o(e)h(w)o(ays)i(to)f(do)g(this.)f(In)i
([27],)f(the)h(e)o(xistence)0 4871 y(of)e(a)h(Sum)f(of)g(Squares)h
(decomposition)d(w)o(as)i(used)g(for)g(that)g(purpose,)g(which)g(in)l
(v)n(olv)o(es)e(the)i(presentation)p Black 0 5556 a FF(December)25
b(3,)e(2011)3181 b(DRAFT)p Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black 3867 -150 a FF(5)p Black
0 116 a Fz(of)35 b(other)f(polynomials)40 b Fs(p)942
131 y Fo(i)967 116 y Fv(\()p Fs(x)p Fv(\))35 b Fz(such)f(that)1620
409 y Fs(p)p Fv(\()p Fs(x)p Fv(\))22 b(=)1955 303 y Fo(k)1921
430 y Fh(\345)1914 513 y Fo(i)p Fk(=)p Fy(1)2048 409
y Fs(p)2098 424 y Fo(i)2123 409 y Fv(\()p Fs(x)p Fv(\))2245
368 y Fy(2)3784 409 y Fz(\(3\))0 692 y(Algorithms)37
b(for)h(ensuring)g(this)g(ha)n(v)o(e)g(appeared)h(in)g(the)f(1990')-5
b(s)38 b([28])g(b)n(ut)g(it)g(w)o(as)h(not)f(until)f(the)i(turn)f(of)0
865 y(the)32 b(century)g(that)g(this)f(w)o(as)h(recognized)h(as)f
(being)g(solv)n(able)e(using)i(Semide\002nite)g(Programming)f([29].)h
(In)0 1039 y(particular)l(,)k(\(3\))g(can)h(be)f(sho)n(wn)f(equi)n(v)n
(alent)f(to)i(the)g(e)o(xistence)f(of)h(a)h Fs(Q)23 b
Fn(\027)g Fz(0)36 b(and)g(a)g(v)o(ector)g(of)g(monomials)0
1212 y Fs(Z)5 b Fv(\()p Fs(x)p Fv(\))35 b Fz(of)g(de)o(gree)g(less)f
(than)h(or)f(equal)h(half)g(the)f(de)o(gree)h(of)42 b
Fs(p)p Fv(\()p Fs(x)p Fv(\))p Fz(,)35 b(such)g(that)1561
1486 y Fs(p)p Fv(\()p Fs(x)p Fv(\))22 b(=)h Fs(Z)5 b
Fv(\()p Fs(x)p Fv(\))2037 1445 y Fo(T)2092 1486 y Fs(QZ)g
Fv(\()p Fs(x)p Fv(\))0 1761 y Fz(In)35 b(the)f(abo)o(v)o(e)g
(representation,)g(the)h(matrix)f Fs(Q)h Fz(is)f(not)g(unique,)g(in)h
(f)o(act)g(it)f(can)h(be)g(represented)g(as)1599 2035
y Fs(Q)22 b Fv(=)h Fs(Q)1865 2051 y Fy(0)1920 2035 y
Fv(+)2011 2056 y Fh(\345)2052 2137 y Fo(i)2124 2035 y
Fu(l)2179 2050 y Fo(i)2204 2035 y Fs(Q)2276 2050 y Fo(i)3784
2035 y Fz(\(4\))0 2333 y(where)40 b Fs(Q)355 2348 y Fo(i)419
2333 y Fz(satisfy)e Fs(Z)5 b Fv(\()p Fs(x)p Fv(\))900
2297 y Fo(T)955 2333 y Fs(Q)1027 2348 y Fo(i)1052 2333
y Fs(Z)g Fv(\()p Fs(x)p Fv(\))25 b(=)g Fz(0.)39 b(The)g(search)g(for)h
Fu(l)2173 2348 y Fo(i)2237 2333 y Fz(such)e(that)h Fs(Q)g
Fz(in)g(\(4\))g(is)g(such)g(that)f Fs(Q)25 b Fn(\027)g
Fz(0)39 b(is)0 2506 y(a)j(Linear)h(Matrix)e(Inequality)-6
b(,)41 b(which)g(can)i(be)f(solv)o(ed)f(using)g(Semide\002nite)h
(Programming.)f(Moreo)o(v)o(er)l(,)0 2680 y(if)60 b Fs(p)p
Fv(\()p Fs(x)p Fv(\))54 b Fz(has)g(unkno)n(wn)e(coef)n(\002cients)h
(that)g(enter)h(af)n(\002nely)f(in)g(the)h(representation)f(\(3\),)g
(Semide\002nite)0 2853 y(Programming)34 b(can)h(be)g(used)f(to)h
(\002nd)g(v)n(alues)f(for)h(them)f(so)g(that)g(the)h(resulting)f
(polynomial)e(is)j(SOS.)100 3026 y(This)k(latter)i(observ)n(ation)e
(can)i(allo)n(w)e(us)i(to)f Fs(sear)l(c)o(h)g Fz(for)h(polynomials)d
(that)i(satisfy)g(SOS)h(conditions:)0 3200 y(the)34 b(most)f(important)
g(e)o(xample)g(is)g(in)h(the)g(construction)f(of)h(L)-5
b(yapuno)o(v)32 b(functions,)h(which)h(is)g(the)g(topic)f(of)0
3373 y(this)38 b(paper)-5 b(.)40 b(F)o(or)f(more)g(details,)g(please)g
(see)h([29],)f([30].)g(The)h(question)e(that)h(we)g(address)g(in)g
(this)g(paper)0 3546 y(is)45 b(whether)g(Sum)f(of)i(Squares)f(L)-5
b(yapuno)o(v)43 b(functions)h(al)o(w)o(ays)h(e)o(xist)f(for)h(locally)g
(e)o(xponentially)e(stable)0 3720 y(systems.)1212 4028
y(I)t(V)-9 b(.)57 b(N)t FA(O)q(T)m(A)-5 b(T)t(I)t(O)t(N)33
b(A)t(N)t(D)d Fz(B)q FA(A)q(C)t(K)t(G)t(R)q(O)t(U)t(N)t(D)100
4232 y Fz(The)42 b(core)i(concept)e(we)i(use)e(in)h(this)e(paper)j(is)e
(the)h(Picard)g(iteration.)f(W)-8 b(e)43 b(use)g(this)e(to)i(construct)
f(an)0 4406 y(approximation)34 b(to)h(the)h(solution)e(map)h(and)h
(then)f(use)h(the)g(approximate)e(solution)g(map)i(to)f(construct)g
(the)0 4579 y(L)-5 b(yapuno)o(v)28 b(function.)g(Construction)h(of)g
(the)h(L)-5 b(yapuno)o(v)28 b(function)g(will)h(be)h(discussed)e(in)h
(more)h(depth)f(later)0 4752 y(on.)42 b(Ho)n(we)n(v)o(er)l(,)e(at)i
(this)f(point)g(we)h(re)n(vie)n(w)f(the)h(Picard)g(iteration:)f(a)h
(standard)g(method)f(for)h(pro)o(ving)e(the)0 4926 y(e)o(xistence)34
b(of)h(solutions.)100 5099 y(Denote)i(the)g(Euclidean)g(ball)g
(centered)i(at)e(0)h(of)f(radius)g Fs(r)j Fz(by)d Fs(B)2458
5114 y Fo(r)2493 5099 y Fz(.)h(Consider)f(an)h(ordinary)f(dif)n
(ferential)p Black 0 5556 a FF(December)25 b(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black 3867 -150 a FF(6)p Black
0 116 a Fz(equation)34 b(of)h(the)f(form)1062 289 y(\001)-46
b Fs(x)p Fv(\()n Fs(t)7 b Fv(\))21 b(=)37 b Fs(f)14 b
Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))p Ft(;)209 b
Fs(x)p Fv(\()p Fz(0)p Fv(\))21 b(=)i Fs(x)2188 305 y
Fy(0)2230 289 y Ft(;)225 b Fs(f)14 b Fv(\()p Fz(0)p Fv(\))21
b(=)i Fz(0)p Ft(;)932 b Fz(\(5\))0 563 y(where)25 b Fs(x)18
b Fn(2)g Fr(R)486 527 y Fo(n)552 563 y Fz(and)40 b Fs(f)f
Fz(satis\002es)24 b(appropriate)h(smoothness)e(properties)h(for)h
(local)g(e)o(xistence)f(and)g(uniqueness)0 736 y(of)35
b(solutions.)d(The)j(solution)e(map)i(is)f(a)h(function)f
Fu(f)46 b Fz(which)34 b(satis\002es)996 943 y Fu(\266)p
980 988 94 4 v 980 1079 a(\266)10 b Fs(t)1083 1011 y
Fu(f)h Fv(\()n Fs(t)c Ft(;)k Fs(x)p Fv(\))21 b(=)38 b
Fs(f)14 b Fv(\()p Fu(f)d Fv(\()n Fs(t)c Ft(;)k Fs(x)p
Fv(\)\))232 b Fz(and)i Fu(f)11 b Fv(\()p Fz(0)p Ft(;)g
Fs(x)p Fv(\))21 b(=)i Fs(x)p Ft(:)0 1341 y Fs(A.)50 b(L)m(yapuno)o(v)34
b(Stability)100 1546 y Fz(The)40 b(use)g(of)h(L)-5 b(yapuno)o(v)38
b(functions)h(to)h(pro)o(v)o(e)g(stability)e(of)j(ordinary)f(dif)n
(ferential)f(equations)g(is)h(well-)0 1719 y(established.)34
b(The)g(follo)n(wing)f(theorem)h(illustrates)g(the)g(use)h(of)g(L)-5
b(yapuno)o(v)33 b(functions.)p Black 100 1892 a Fs(De\002nition)g(2:)p
Black 50 w Fz(W)-8 b(e)34 b(say)f(that)g(the)h(system)e(de\002ned)i(by)
g(the)f(equations)g(in)g(\(5\))h(are)g(e)o(xponentially)e(stable)0
2066 y(on)i Fs(X)45 b Fz(if)34 b(there)h(e)o(xist)f Fu(g)8
b Ft(;)j Fs(K)28 b Ft(>)22 b Fz(0)35 b(such)g(that)f(for)h(an)o(y)f
Fs(x)1931 2081 y Fy(0)1995 2066 y Fn(2)23 b Fs(X)10 b
Fz(,)1539 2340 y Fn(k)p Fs(x)p Fv(\()n Fs(t)d Fv(\))p
Fn(k)21 b(\024)h Fs(K)17 b Fn(k)p Fs(x)2091 2356 y Fy(0)2133
2340 y Fn(k)11 b Fs(e)2238 2299 y Fm(\000)p Fq(g)t Fo(t)0
2614 y Fz(for)35 b(all)e Fs(t)28 b Fn(\025)22 b Fz(0.)p
Black 100 2788 a Fs(Theor)l(em)35 b(3)g(\(L)m(yapuno)o(v\):)p
Black 50 w Fz(Suppose)j(there)g(e)o(xist)f(constants)g
Fu(a)8 b Ft(;)j Fu(b)h Ft(;)f Fu(g)31 b Ft(>)25 b Fz(0)38
b(and)g(a)g(continuously)e(dif)n(fer)n(-)0 2961 y(entiable)e(function)
29 b Fs(V)48 b Fz(such)34 b(that)g(the)h(follo)n(wing)e(conditions)g
(are)i(satis\002ed)g(for)g(all)f Fs(x)23 b Fn(2)17 b
Fs(U)32 b Fn(\032)22 b Fr(R)3477 2925 y Fo(n)3519 2961
y Fz(.)1467 3235 y Fu(a)e Fn(k)o Fs(x)p Fn(k)1694 3190
y Fy(2)1757 3235 y Fn(\024)e Fs(V)12 b Fv(\()p Fs(x)p
Fv(\))22 b Fn(\024)h Fu(b)g Fn(k)p Fs(x)p Fn(k)2391 3190
y Fy(2)1492 3452 y Fw(\321)-5 b Fs(V)13 b Fv(\()p Fs(x)p
Fv(\))1754 3411 y Fo(T)1824 3452 y Fs(f)h Fv(\()p Fs(x)p
Fv(\))22 b Fn(\024)g(\000)p Fu(g)e Fn(k)p Fs(x)p Fn(k)2391
3406 y Fy(2)0 3726 y Fz(Then)35 b(we)g(ha)n(v)o(e)f(e)o(xponential)f
(stability)g(of)i(System)f(\(5\))h(on)g Fn(f)p Fs(x)45
b Fz(:)f Fn(f)p Fs(y)22 b Fz(:)17 b Fs(V)12 b Fv(\()p
Fs(y)p Fv(\))22 b Fn(\024)17 b Fs(V)c Fv(\()p Fs(x)p
Fv(\))p Fn(g)22 b(\032)17 b Fs(U)10 b Fn(g)o Fz(.)0 4056
y Fs(B.)50 b(F)l(ixed-P)-8 b(oint)33 b(Theor)l(ems)p
Black 100 4261 a(De\002nition)g(4:)p Black 50 w Fz(Let)j
Fs(X)45 b Fz(be)37 b(a)f(metric)g(space.)g(A)g(mapping)f
Fs(F)c Fz(:)23 b Fs(X)32 b Fn(!)23 b Fs(X)45 b Fz(is)36
b Fs(contr)o(active)f Fz(with)g(coef)n(\002cient)0 4434
y Fs(d)27 b Fn(2)c Fv([)p Fz(0)p Ft(;)11 b Fz(1)p Fv(\))33
b Fz(if)1220 4608 y Fn(k)p Fs(F)8 b(x)14 b Fn(\000)g
Fs(F)9 b(y)p Fn(k)22 b(\024)h Fs(d)16 b Fn(k)p Fs(x)e
Fn(\000)g Fs(y)p Fn(k)211 b Fs(x)p Ft(;)11 b Fs(y)22
b Fn(2)h Fs(X)10 b Ft(:)100 4882 y Fz(The)34 b(follo)n(wing)f(is)i(a)g
Fs(F)l(ixed-P)-8 b(oint)35 b Fz(Theorem.)p Black 100
5055 a Fs(Theor)l(em)g(5)g(\(Contr)o(action)e(Mapping)g(Principle)h
([31]\):)p Black 49 w Fz(Let)f Fs(X)42 b Fz(be)33 b(a)g(complete)f
(metric)h(space)g(and)f(let)p Black 0 5556 a FF(December)25
b(3,)e(2011)3181 b(DRAFT)p Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black 3867 -150 a FF(7)p Black
0 116 a Fs(F)30 b Fz(:)22 b Fs(X)32 b Fn(!)21 b Fs(X)44
b Fz(be)35 b(a)g(contraction)g(with)f(coef)n(\002cient)g
Fs(d)5 b Fz(.)35 b(Then)g(there)g(e)o(xists)e(a)i(unique)f
Fs(y)23 b Fn(2)f Fs(X)44 b Fz(such)35 b(that)1799 390
y Fs(F)8 b(y)23 b Fv(=)f Fs(y)-5 b Ft(:)0 664 y Fz(Furthermore,)35
b(for)g(an)o(y)f Fs(x)930 680 y Fy(0)994 664 y Fn(2)22
b Fs(X)10 b Fz(,)1423 723 y Fj(\015)1423 783 y(\015)1423
842 y(\015)1479 837 y Fs(F)1548 796 y Fo(k)1587 837 y
Fs(x)1631 853 y Fy(0)1686 837 y Fn(\000)k Fs(y)1821 723
y Fj(\015)1821 783 y(\015)1821 842 y(\015)1899 837 y
Fn(\024)23 b Fs(d)2054 796 y Fo(k)2103 837 y Fn(k)p Fs(x)2197
853 y Fy(0)2253 837 y Fn(\000)14 b Fs(y)p Fn(k)d Ft(:)100
1112 y Fz(T)-8 b(o)34 b(apply)g(these)h(results)f(to)g(the)h(e)o
(xistence)f(of)h(the)g(solution)e(map,)h(we)h(use)g(the)f(Picard)i
(iteration.)1468 1419 y(V)-9 b(.)55 b(P)t FA(I)t(C)t(A)t(R)t(D)34
b Fz(I)t FA(T)t(E)t(R)t(A)-5 b(T)t(I)t(O)t(N)100 1624
y Fz(W)d(e)32 b(be)o(gin)f(by)h(re)n(vie)n(wing)e(the)i(Picard)g
(iteration.This)e(is)i(the)g(basic)g(mathematical)e(tool)h(we)i(will)e
(use)g(to)0 1798 y(de\002ne)k(our)g(approximation)e(to)h(the)h
(solution)e(map)h(and)h(can)g(be)g(found)f(in)h(man)o(y)f(te)o(xts,)f
(e.g.)i([32].)p Black 100 1971 a Fs(De\002nition)e(6:)p
Black 50 w Fz(F)o(or)i(gi)n(v)o(en)e Fs(T)48 b Fz(and)34
b Fs(r)r Fz(,)h(de\002ne)h(the)e(complete)g(metric)h(space)816
2245 y Fs(X)875 2260 y Fo(T)t Fp(;)p Fo(r)998 2245 y
Fz(:)p Fv(=)1125 2134 y Fj(n)1191 2245 y Fs(q)p Fv(\()n
Fs(t)7 b Fv(\))20 b Fz(:)1464 2255 y(sup)1600 2280 y
Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)k Fk(])1842
2255 y Fn(k)o Fs(q)p Fv(\()n Fs(t)e Fv(\))p Fn(k)20 b(\024)j
Fs(r)-9 b Ft(;)45 b Fs(q)35 b Fz(is)f(continuous)o Ft(:)3018
2134 y Fj(o)3784 2245 y Fz(\(6\))0 2519 y(with)g(norm)1520
2693 y Fn(k)o Fs(q)p Fn(k)1669 2721 y Fo(X)1748 2693
y Fv(=)66 b Fz(sup)1846 2787 y Fo(t)5 b Fm(2)p Fk([)p
Fy(0)p Fp(;)p Fo(T)j Fk(])2083 2693 y Fn(k)p Fs(q)p Fv(\()n
Fs(t)f Fv(\))p Fn(k)i Ft(:)100 2985 y Fz(F)o(or)34 b(a)h(\002x)o(ed)g
Fs(x)23 b Fn(2)f Fs(B)799 3000 y Fo(r)869 2985 y Fz(and)35
b Fs(q)22 b Fn(2)g Fs(X)1267 3000 y Fo(T)t Fp(;)p Fo(r)1368
2985 y Fz(,)34 b(the)h Fs(Picar)l(d)f(Iter)o(ation)f
Fz([33],)i(is)g(de\002ned)g(as)1390 3259 y Fv(\()p Fs(Pq)p
Fv(\)\()n Fs(t)7 b Fv(\))20 b Fc(,)j Fs(x)14 b Fv(+)1959
3134 y Fi(Z)2047 3163 y Fo(t)2009 3337 y Fy(0)2103 3259
y Fs(f)g Fv(\()p Fs(q)p Fv(\()p Fs(s)p Fv(\)\))p Fs(d)5
b(s)p Ft(:)0 3533 y Fz(In)35 b(this)f(paper)l(,)h(we)g(also)f(de\002ne)
h(the)g(Picard)h(iteration)d(iteration)h(on)h(functions)f
Fs(z)p Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))33 b Fz(as)1318
3807 y Fv(\()p Fs(Pz)p Fv(\)\()p Fs(x)p Ft(;)9 b Fs(t)e
Fv(\))20 b Fc(,)j Fs(x)14 b Fv(+)1959 3683 y Fi(Z)2047
3712 y Fo(t)2009 3886 y Fy(0)2103 3807 y Fs(f)g Fv(\()p
Fs(z)p Fv(\()p Fs(x)p Ft(;)d Fs(s)p Fv(\)\))p Fs(d)5
b(s)p Ft(:)100 4081 y Fz(W)-8 b(e)36 b(be)o(gin)g(by)f(sho)n(wing)g
(that)h(for)g(an)o(y)g(radius)g Fs(r)r Fz(,)g(there)h(e)o(xists)d(a)j
Fs(T)49 b Fz(such)36 b(that)g(the)g(Picard)h(iteration)f(is)0
4255 y(contracti)n(v)o(e)e(on)g Fs(X)667 4271 y Fo(T)t
Fp(;)p Fy(2)p Fo(r)840 4255 y Fz(for)h(an)o(y)f Fs(x)23
b Fn(2)f Fs(B)1384 4270 y Fo(r)1419 4255 y Fz(.)p Black
100 4428 a Fs(Lemma)35 b(7:)p Black 50 w Fz(Gi)n(v)o(en)h
Fs(r)26 b Ft(>)f Fz(0,)37 b(let)h Fs(T)f Ft(<)25 b Fz(min)o
Fn(f)1675 4389 y Fo(r)p 1664 4405 54 4 v 1664 4463 a(Q)1727
4428 y Ft(;)1778 4389 y Fy(1)p 1776 4405 42 4 v 1776
4463 a Fo(L)1828 4428 y Fn(g)38 b Fz(where)53 b Fs(f)f
Fz(has)38 b(Lipschitz)f(f)o(actor)i Fs(L)g Fz(on)e Fs(B)3434
4444 y Fy(2)p Fo(r)3545 4428 y Fz(and)h Fs(Q)24 b Fv(=)0
4602 y Fz(sup)138 4627 y Fo(x)p Fm(2)p Fo(B)267 4640
y Fd(2)p Ff(r)355 4602 y Fs(f)14 b Fv(\()p Fs(x)p Fv(\))p
Fz(.)32 b(Then)h Fs(P)21 b Fz(:)g Fs(X)1004 4617 y Fo(T)t
Fp(;)p Fy(2)p Fo(r)1163 4602 y Fn(!)g Fs(X)1343 4617
y Fo(T)t Fp(;)p Fy(2)p Fo(r)1513 4602 y Fz(and)33 b(there)g(e)o(xists)e
(some)h Fu(f)g Fn(2)22 b Fs(X)2654 4617 y Fo(T)t Fp(;)p
Fy(2)p Fo(r)2824 4602 y Fz(such)33 b(that)f(for)f Fs(t)c
Fn(2)22 b Fv([)p Fz(0)p Ft(;)11 b Fs(T)h Fv(])32 b Fz(and)0
4775 y Fs(x)23 b Fn(2)f Fs(B)216 4790 y Fo(r)251 4775
y Fz(,)1325 4881 y Fs(d)p 1309 4925 87 4 v 1309 5017
a(d)s(t)1406 4948 y Fu(f)11 b Fv(\()n Fs(t)c Fv(\))20
b(=)38 b Fs(f)14 b Fv(\()p Fu(f)d Fv(\()n Fs(t)c Fv(\)\))p
Ft(;)208 b Fu(f)11 b Fv(\()p Fz(0)p Fv(\))21 b(=)i Fs(x)p
Black 0 5556 a FF(December)i(3,)e(2011)3181 b(DRAFT)p
Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black 3867 -150 a FF(8)p Black
0 116 a Fz(and)35 b(for)g(an)o(y)f Fs(z)22 b Fn(2)g Fs(X)715
131 y Fo(T)t Fp(;)p Fy(2)p Fo(r)853 116 y Fz(,)1383 174
y Fj(\015)1383 234 y(\015)1383 294 y(\015)1438 289 y
Fu(f)j Fn(\000)14 b Fs(P)1667 248 y Fo(k)1706 289 y Fs(z)1745
174 y Fj(\015)1745 234 y(\015)1745 294 y(\015)1822 289
y Fn(\024)22 b Fv(\()p Fs(T)13 b(L)p Fv(\))2122 248 y
Fo(k)2172 289 y Fn(k)p Fu(f)25 b Fn(\000)14 b Fs(z)p
Fn(k)d Ft(:)199 563 y Fs(Pr)l(oof:)25 b Fz(W)-8 b(e)26
b(\002rst)g(sho)n(w)f(that)h(for)g Fs(x)19 b Fn(2)f Fs(B)1578
578 y Fo(r)1613 563 y Fz(,)26 b Fs(P)18 b Fz(:)f Fs(X)1847
579 y Fo(T)t Fp(;)p Fy(2)p Fo(r)2003 563 y Fn(!)h Fs(X)2180
579 y Fo(T)t Fp(;)p Fy(2)p Fo(r)2318 563 y Fz(.)26 b(If)g
Fs(q)18 b Fn(2)h Fs(X)2673 579 y Fo(T)t Fp(;)p Fy(2)p
Fo(r)2810 563 y Fz(,)26 b(then)g(sup)3195 588 y Fo(t)5
b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)k Fk(])3437 563 y
Fn(k)p Fs(q)p Fv(\()n Fs(t)e Fv(\))p Fn(k)16 b(\024)i
Fz(2)p Fs(r)0 736 y Fz(and)35 b(so)1241 1011 y Fn(k)p
Fs(Pq)p Fn(k)1451 1039 y Fo(X)1530 1011 y Fv(=)66 b Fz(sup)1628
1105 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)j Fk(])1865
866 y Fj(\015)1865 926 y(\015)1865 986 y(\015)1865 1046
y(\015)1920 1011 y Fs(x)14 b Fv(+)2069 886 y Fi(Z)2157
915 y Fo(t)2120 1089 y Fy(0)2214 1011 y Fs(f)g Fv(\()p
Fs(q)p Fv(\()p Fs(s)p Fv(\)\))2501 866 y Fj(\015)2501
926 y(\015)2501 986 y(\015)2501 1046 y(\015)2565 1011
y Fs(d)5 b(s)1530 1321 y Fn(\024)23 b(k)p Fs(x)p Fn(k)14
b Fv(+)1879 1197 y Fi(Z)1968 1225 y Fo(T)1929 1399 y
Fy(0)2035 1321 y Fn(k)h Fs(f)f Fv(\()p Fs(q)p Fv(\()p
Fs(s)p Fv(\)\))p Fn(k)9 b Fs(d)c(s)1530 1588 y Fn(\024)23
b Fs(r)16 b Fv(+)1776 1464 y Fi(Z)1865 1492 y Fo(T)1826
1667 y Fy(0)1955 1588 y Fz(sup)1932 1675 y Fo(y)p Fm(2)p
Fo(B)2061 1688 y Fd(2)p Ff(r)2128 1588 y Fn(k)f Fs(f)f
Fv(\()p Fs(y)p Fv(\))p Fn(k)d Fs(d)5 b(s)1530 1865 y
Fn(\024)23 b Fs(r)16 b Fv(+)e Fs(T)f(Q)22 b Ft(<)h Fz(2)p
Fs(r)0 2139 y Fz(Thus)34 b(we)h(conclude)g(that)f Fs(Pq)22
b Fn(2)g Fs(X)1244 2155 y Fo(T)t Fp(;)p Fy(2)p Fo(r)1382
2139 y Fz(.)35 b(Furthermore,)g(for)g Fs(q)2201 2155
y Fy(1)2242 2139 y Ft(;)11 b Fs(q)2331 2155 y Fy(2)2394
2139 y Fn(2)23 b Fs(X)2542 2155 y Fo(T)t Fp(;)p Fy(2)p
Fo(r)2680 2139 y Fz(,)761 2414 y Fn(k)p Fs(Pq)922 2430
y Fy(1)977 2414 y Fn(\000)14 b Fs(Pq)1179 2430 y Fy(2)1220
2414 y Fn(k)1270 2443 y Fo(X)1349 2414 y Fv(=)66 b Fz(sup)1447
2509 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)j Fk(])1684
2270 y Fj(\015)1684 2330 y(\015)1684 2390 y(\015)1684
2449 y(\015)1739 2290 y Fi(Z)1827 2319 y Fo(t)1789 2493
y Fy(0)1868 2414 y Fv(\()15 b Fs(f)f Fv(\()p Fs(q)2053
2430 y Fy(1)2094 2414 y Fv(\()p Fs(s)p Fv(\)\))g Fn(\000)29
b Fs(f)14 b Fv(\()p Fs(q)2501 2430 y Fy(2)2541 2414 y
Fv(\()p Fs(s)p Fv(\)\)\))9 b Fs(d)c(s)2839 2270 y Fj(\015)2839
2330 y(\015)2839 2390 y(\015)2839 2449 y(\015)1349 2725
y Fn(\024)1449 2600 y Fi(Z)1538 2629 y Fo(T)1498 2803
y Fy(0)1647 2725 y Fz(sup)1602 2819 y Fo(t)g Fm(2)p Fk([)p
Fy(0)p Fp(;)p Fo(T)k Fk(])1840 2725 y Fn(k)15 b Fs(f)f
Fv(\()p Fs(q)2036 2741 y Fy(1)2077 2725 y Fv(\()p Fs(s)p
Fv(\)\))g Fn(\000)29 b Fs(f)14 b Fv(\()p Fs(q)2484 2741
y Fy(2)2524 2725 y Fv(\()p Fs(s)p Fv(\)\))p Fn(k)9 b
Fs(d)c(s)1349 3012 y Fn(\024)23 b Fs(T)13 b(L)54 b Fz(sup)1581
3107 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)k Fk(])1819
3012 y Fn(k)p Fs(q)1919 3028 y Fy(1)1960 3012 y Fv(\()p
Fs(s)p Fv(\))14 b Fn(\000)g Fs(q)2232 3028 y Fy(2)2272
3012 y Fv(\()p Fs(s)p Fv(\))p Fn(k)21 b Fv(=)i Fs(T)13
b(L)e Fn(k)q Fs(q)2795 3028 y Fy(1)2850 3012 y Fn(\000)j
Fs(q)2991 3028 y Fy(2)3032 3012 y Fn(k)3082 3041 y Fo(X)100
3311 y Fz(Therefore,)35 b(by)g(the)g(contraction)f(mapping)f(theorem,)i
(the)f(Picard)i(iteration)e(con)l(v)o(er)n(ges)h(on)f
Fv([)p Fz(0)p Ft(;)11 b Fs(T)h Fv(])35 b Fz(with)0 3484
y(con)l(v)o(er)n(gence)g(rate)g Fv(\()p Fs(T)13 b(L)p
Fv(\))916 3448 y Fo(k)955 3484 y Fz(.)p 3842 3484 59
59 v 0 3814 a Fs(A.)50 b(Picar)l(d)34 b(Extension)g(Con)l(ver)l(g)o
(ence)i(Lemma)100 4019 y Fz(In)47 b(this)f(section)h(we)h(propose)e(an)
i(e)o(xtension)e(to)h(the)g(Picard)h(iteration)e(approximation.)g(W)-8
b(e)47 b(di)n(vide)0 4193 y(the)37 b(interv)n(al)f(into)h(subinterv)n
(als)e(on)i(which)g(the)g(Picard)h(iteration)e(is)h(guaranteed)g(to)g
(con)l(v)o(er)n(ge.)g(On)g(each)0 4366 y(interv)n(al,)k(we)g(apply)h
(the)f(Picard)h(iteration)f(using)g(the)g(\002nal)h(v)n(alue)f(of)h
(the)f(solution)f(estimate)h(from)g(the)0 4539 y(pre)n(vious)34
b(interv)n(al)g(as)i(the)f(initial)f(condition,)g Fs(x)p
Fz(.)i(F)o(or)f(a)h(polynomial)d(v)o(ector)i(\002eld,)h(the)f(result)g
(is)g(a)h(piece-)0 4713 y(wise)h(polynomial)e(approximation)g(which)i
(is)g(guaranteed)g(to)g(con)l(v)o(er)n(ge)g(on)g(an)g(arbitrary)h
(interv)n(al)e(\226)h(see)0 4886 y(Figure)e(1)g(for)g(an)g
(illustration.)p Black 100 5059 a Fs(De\002nition)e(8:)p
Black 50 w Fz(Suppose)k(that)h(the)f(solution)f(map)i
Fu(f)49 b Fz(e)o(xists)36 b(on)f Fs(t)30 b Fn(2)24 b
Fv([)p Fz(0)p Ft(;)11 b Fw(\245)p Fv(])37 b Fz(and)h
Fn(k)o Fu(f)11 b Fv(\()n Fs(t)c Ft(;)k Fs(x)p Fv(\))p
Fn(k)23 b(\024)h Fs(K)17 b Fn(k)p Fs(x)p Fn(k)38 b Fz(for)0
5233 y(an)o(y)c Fs(x)23 b Fn(2)g Fs(B)394 5248 y Fo(r)428
5233 y Fz(.)35 b(Suppose)g(that)49 b Fs(f)g Fz(has)35
b(Lipschitz)f(f)o(actor)h Fs(L)h Fz(on)e Fs(B)2263 5248
y Fy(4)p Fo(K)t(r)2424 5233 y Fz(and)h(is)f(bounded)g(on)h
Fs(B)3278 5248 y Fy(4)p Fo(K)t(r)3439 5233 y Fz(with)f(bound)p
Black 0 5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p
Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black 3867 -150 a FF(9)p Black
Black 1013 1313 a @beginspecial 0 @llx 0 @lly 281 @urx
197 @ury 2248 @rwi @setspecial
%%BeginDocument: PicardPlot.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: PicardPlot.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Peet Elders
%%CreationDate: 11/13/2011
%%BoundingBox: 0 0 281 197
%%HiResBoundingBox: 0 0 280.0401 196.7706
%%CropBox: 0 0 280.0401 196.7706
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541
%ADO_ContainsXMP: MainFirst

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-11-13T18:15:29-06:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-11-13T18:15:30-06:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-11-13T18:15:30-06:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qxv8AMDzLfeWfLra1&#xA;axRXK2s8P1m0evqTxSOI2jtqEfvyXHAEHkfh71Crz3XfN/na5uNCurPVLWznmi0J3FuklxZSLreo&#xA;yRSfB6sfqCJLeJeZapDNx4F6hV6D5LuL0y+YLG6uGuhpuqvBBO5ZiUmtre7KguztxjkuXRRyNAAO&#xA;2KslxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;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&#xA;f//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Times Bold</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">PicardPlot</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:9D0BA0D1540EE111BBF2E67919AE3E5A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9D0BA0D1540EE111BBF2E67919AE3E5A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:bfb82be1-3d75-492b-a17f-f05770fb2fbb</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7041708d-337f-411f-b977-c0ef991ad0c9</stRef:instanceID>
            <stRef:documentID>uuid:bfb82be1-3d75-492b-a17f-f05770fb2fbb</stRef:documentID>
            <stRef:originalDocumentID>uuid:bfb82be1-3d75-492b-a17f-f05770fb2fbb</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9D0BA0D1540EE111BBF2E67919AE3E5A</stEvt:instanceID>
                  <stEvt:when>2011-11-13T18:15:30-06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -196.771 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 196.771 li
280.04 196.771 li
280.04 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1.6 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
186.075 22.5869 mo
186.922 22.5869 li
187.769 22.5869 li
189.605 22.5869 li
191.319 22.5869 li
193 22.5869 li
194.823 22.5869 li
196.524 22.5869 li
198.368 22.5869 li
200.178 22.5869 li
201.867 22.5869 li
203.698 22.5869 li
205.407 22.5869 li
207.083 22.5869 li
208.901 22.5869 li
210.598 22.5869 li
212.438 22.5869 li
214.242 22.5869 li
215.926 22.5869 li
217.752 22.5869 li
219.456 22.5869 li
221.303 22.5869 li
223.116 22.5869 li
224.808 22.5869 li
226.642 22.5869 li
228.354 22.5869 li
230.033 22.5869 li
231.854 22.5869 li
233.554 22.5869 li
235.396 22.5869 li
237.204 22.5869 li
238.891 22.5869 li
240.72 22.5869 li
242.428 22.5869 li
244.101 22.5869 li
245.918 22.5869 li
247.612 22.5869 li
249.45 22.5869 li
251.165 22.5869 li
252.847 22.5869 li
254.671 22.5869 li
256.374 22.5869 li
258.219 22.5869 li
260.03 22.5869 li
261.72 22.5869 li
263.552 22.5869 li
265.262 22.5869 li
266.939 22.5869 li
268.759 22.5869 li
270.456 22.5869 li
271.404 22.5869 li
272.351 22.5869 li
102.337 22.5869 mo
103.158 22.5869 li
103.98 22.5869 li
105.762 22.5869 li
107.426 22.5869 li
109.057 22.5869 li
110.827 22.5869 li
112.478 22.5869 li
114.268 22.5869 li
116.025 22.5869 li
117.664 22.5869 li
119.441 22.5869 li
121.1 22.5869 li
122.726 22.5869 li
124.491 22.5869 li
126.138 22.5869 li
127.923 22.5869 li
129.675 22.5869 li
131.309 22.5869 li
133.081 22.5869 li
134.736 22.5869 li
136.528 22.5869 li
138.288 22.5869 li
139.93 22.5869 li
141.71 22.5869 li
143.372 22.5869 li
145.002 22.5869 li
146.77 22.5869 li
148.419 22.5869 li
150.207 22.5869 li
151.962 22.5869 li
153.599 22.5869 li
155.374 22.5869 li
157.032 22.5869 li
158.656 22.5869 li
160.419 22.5869 li
162.064 22.5869 li
163.847 22.5869 li
165.512 22.5869 li
167.145 22.5869 li
168.915 22.5869 li
170.567 22.5869 li
172.358 22.5869 li
174.116 22.5869 li
175.756 22.5869 li
177.535 22.5869 li
179.195 22.5869 li
180.822 22.5869 li
182.588 22.5869 li
184.236 22.5869 li
185.156 22.5869 li
186.075 22.5869 li
18.5981 22.5869 mo
19.4199 22.5869 li
20.2422 22.5869 li
22.0239 22.5869 li
23.687 22.5869 li
25.3188 22.5869 li
27.0879 22.5869 li
28.7402 22.5869 li
30.5293 22.5869 li
32.2861 22.5869 li
33.9248 22.5869 li
35.7021 22.5869 li
37.3608 22.5869 li
38.9883 22.5869 li
40.752 22.5869 li
42.3989 22.5869 li
44.1841 22.5869 li
45.936 22.5869 li
47.5698 22.5869 li
49.3428 22.5869 li
50.9971 22.5869 li
52.79 22.5869 li
54.5498 22.5869 li
56.1909 22.5869 li
57.9722 22.5869 li
59.6338 22.5869 li
61.2632 22.5869 li
63.0313 22.5869 li
64.6802 22.5869 li
66.4683 22.5869 li
68.2231 22.5869 li
69.8599 22.5869 li
71.6362 22.5869 li
73.293 22.5869 li
74.918 22.5869 li
76.6802 22.5869 li
78.3252 22.5869 li
80.1079 22.5869 li
81.7729 22.5869 li
83.4063 22.5869 li
85.1763 22.5869 li
86.8291 22.5869 li
88.6191 22.5869 li
90.3779 22.5869 li
92.0181 22.5869 li
93.7959 22.5869 li
95.4561 22.5869 li
97.084 22.5869 li
98.8501 22.5869 li
100.497 22.5869 li
101.417 22.5869 li
102.337 22.5869 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
3.09944e-5 .993988 1 3.09944e-5 cmyk
@
186.008 135.525 mo
186.033 135.53 li
186.061 135.535 li
186.113 135.546 li
186.219 135.566 li
186.432 135.606 li
186.854 135.688 li
187.701 135.851 li
189.537 136.201 li
191.252 136.53 li
192.932 136.852 li
194.756 137.201 li
196.457 137.526 li
198.301 137.879 li
200.109 138.227 li
201.799 138.55 li
203.631 138.9 li
205.34 139.229 li
207.016 139.548 li
208.834 139.897 li
210.529 140.223 li
212.369 140.574 li
214.174 140.92 li
215.857 141.242 li
217.684 141.592 li
219.389 141.918 li
221.234 142.272 li
223.049 142.619 li
224.74 142.943 li
226.574 143.294 li
228.287 143.622 li
229.965 143.944 li
231.787 144.293 li
233.486 144.618 li
235.328 144.971 li
237.137 145.317 li
238.822 145.641 li
240.652 145.99 li
242.359 146.317 li
244.033 146.639 li
245.85 146.986 li
247.545 147.311 li
249.383 147.662 li
251.098 147.991 li
252.779 148.313 li
254.604 148.662 li
256.307 148.988 li
258.15 149.342 li
259.963 149.688 li
261.652 150.012 li
263.484 150.363 li
265.193 150.691 li
266.871 151.012 li
268.691 151.36 li
270.389 151.686 li
270.418 151.691 li
270.447 151.697 li
270.508 151.708 li
270.625 151.731 li
270.861 151.776 li
271.336 151.867 li
271.365 151.872 li
271.395 151.878 li
271.455 151.889 li
271.572 151.912 li
271.811 151.957 li
271.84 151.963 li
271.869 151.969 li
271.928 151.98 li
272.047 152.003 li
272.076 152.008 li
272.105 152.014 li
272.166 152.025 li
272.195 152.031 li
272.225 152.037 li
272.254 152.042 li
272.283 152.048 li
102.27 109.583 mo
102.294 109.591 li
102.321 109.6 li
102.372 109.615 li
102.475 109.646 li
102.681 109.71 li
103.091 109.837 li
103.913 110.092 li
105.695 110.645 li
107.358 111.16 li
108.99 111.665 li
110.76 112.213 li
112.411 112.726 li
114.201 113.279 li
115.958 113.823 li
117.597 114.331 li
119.374 114.882 li
121.033 115.396 li
122.659 115.9 li
124.424 116.446 li
126.071 116.956 li
127.855 117.509 li
129.607 118.052 li
131.242 118.56 li
133.014 119.108 li
134.668 119.62 li
136.46 120.175 li
138.221 120.721 li
139.863 121.229 li
141.643 121.781 li
143.305 122.296 li
144.934 122.801 li
146.701 123.349 li
148.352 123.859 li
150.139 124.413 li
151.895 124.957 li
153.531 125.464 li
155.307 126.014 li
156.965 126.527 li
158.588 127.031 li
160.352 127.577 li
161.996 128.086 li
163.779 128.639 li
165.443 129.155 li
167.076 129.66 li
168.848 130.209 li
170.5 130.721 li
172.291 131.276 li
174.049 131.82 li
175.688 132.328 li
177.467 132.879 li
179.127 133.395 li
180.754 133.898 li
182.52 134.445 li
184.168 134.955 li
184.197 134.964 li
184.225 134.974 li
184.283 134.991 li
184.398 135.027 li
184.629 135.098 li
185.088 135.24 li
185.115 135.249 li
185.145 135.258 li
185.203 135.276 li
185.318 135.313 li
185.547 135.383 li
185.576 135.393 li
185.605 135.401 li
185.662 135.418 li
185.777 135.454 li
185.807 135.463 li
185.836 135.472 li
185.893 135.49 li
185.922 135.499 li
185.949 135.507 li
185.979 135.517 li
186.008 135.525 li
18.5308 23.3271 mo
18.5566 23.354 li
18.5815 23.3804 li
18.6338 23.4331 li
18.7358 23.5391 li
18.9414 23.751 li
19.3525 24.1743 li
20.1748 25.02 li
21.9565 26.856 li
23.6196 28.5703 li
25.2515 30.25 li
27.0205 32.0732 li
28.6729 33.7744 li
30.4619 35.6172 li
32.2188 37.4272 li
33.8574 39.1152 li
35.6348 40.9463 li
37.2935 42.6553 li
38.9209 44.3301 li
40.6846 46.1479 li
42.3315 47.8442 li
44.1167 49.6821 li
45.8687 51.4873 li
47.5024 53.1699 li
49.2754 54.9961 li
50.9297 56.7002 li
52.7227 58.5474 li
54.4824 60.3594 li
56.1235 62.0513 li
57.9048 63.8843 li
59.5664 65.5962 li
61.1958 67.2754 li
62.9639 69.0952 li
64.6128 70.7949 li
66.4009 72.6362 li
68.1558 74.4443 li
69.7925 76.1304 li
71.5688 77.959 li
73.2256 79.666 li
74.8506 81.3398 li
76.6128 83.1553 li
78.2578 84.8496 li
80.0405 86.6855 li
81.7056 88.4014 li
83.3389 90.083 li
85.1089 91.9072 li
86.7617 93.6094 li
88.5518 95.4531 li
90.3105 97.2637 li
91.9507 98.9541 li
93.7285 100.785 li
95.3887 102.495 li
97.0166 104.172 li
98.7827 105.991 li
100.43 107.688 li
100.458 107.718 li
100.488 107.747 li
100.544 107.808 li
100.66 107.925 li
100.89 108.162 li
101.35 108.635 li
101.379 108.665 li
101.407 108.695 li
101.465 108.754 li
101.58 108.872 li
101.81 109.109 li
101.839 109.139 li
101.867 109.168 li
101.925 109.229 li
102.04 109.346 li
102.068 109.376 li
102.097 109.405 li
102.155 109.464 li
102.183 109.494 li
102.212 109.524 li
102.241 109.553 li
102.27 109.583 li
.883665 .769161 3.09944e-5 3.09944e-5 cmyk
@
186.075 90.4668 mo
186.102 90.478 li
186.128 90.4888 li
186.181 90.5107 li
186.287 90.5547 li
186.499 90.6431 li
186.922 90.8198 li
187.769 91.1709 li
189.605 91.9248 li
191.319 92.6211 li
193 93.2959 li
194.823 94.02 li
196.524 94.688 li
198.368 95.4028 li
200.178 96.0967 li
201.867 96.7358 li
203.698 97.4219 li
205.407 98.0537 li
207.083 98.666 li
208.901 99.3232 li
210.598 99.9287 li
212.438 100.578 li
214.242 101.207 li
215.926 101.786 li
217.752 102.407 li
219.456 102.979 li
221.303 103.592 li
223.116 104.186 li
224.808 104.732 li
226.642 105.319 li
228.354 105.86 li
230.033 106.383 li
231.854 106.944 li
233.554 107.46 li
235.396 108.013 li
237.204 108.548 li
238.891 109.042 li
240.72 109.57 li
242.428 110.056 li
244.101 110.527 li
245.918 111.032 li
247.612 111.496 li
249.45 111.993 li
251.165 112.451 li
252.847 112.895 li
254.671 113.369 li
256.374 113.806 li
258.219 114.272 li
260.03 114.726 li
261.72 115.142 li
263.552 115.587 li
265.262 115.997 li
266.939 116.394 li
268.759 116.818 li
270.456 117.209 li
270.486 117.216 li
270.516 117.222 li
270.575 117.236 li
270.693 117.263 li
270.93 117.317 li
271.404 117.425 li
271.434 117.431 li
271.463 117.438 li
271.522 117.451 li
271.641 117.478 li
271.878 117.532 li
271.907 117.539 li
271.938 117.545 li
271.996 117.559 li
272.115 117.585 li
272.145 117.592 li
272.174 117.599 li
272.233 117.612 li
272.263 117.619 li
272.292 117.625 li
272.322 117.632 li
272.351 117.639 li
102.337 48.5298 mo
102.362 48.5488 li
102.388 48.5679 li
102.439 48.6069 li
102.542 48.6841 li
102.748 48.8379 li
103.158 49.146 li
103.98 49.7568 li
105.762 51.0659 li
107.426 52.2681 li
109.057 53.4277 li
110.827 54.665 li
112.478 55.8008 li
114.268 57.0098 li
116.025 58.1768 li
117.664 59.2471 li
119.441 60.3867 li
121.1 61.4331 li
122.726 62.4419 li
124.491 63.5171 li
126.138 64.5029 li
127.923 65.5527 li
129.675 66.5649 li
131.309 67.4917 li
133.081 68.479 li
134.736 69.3838 li
136.528 70.3467 li
138.288 71.2739 li
139.93 72.124 li
141.71 73.0269 li
143.372 73.855 li
145.002 74.6528 li
146.77 75.501 li
148.419 76.2778 li
150.207 77.104 li
151.962 77.8989 li
153.599 78.626 li
155.374 79.3989 li
157.032 80.1069 li
158.656 80.7871 li
160.419 81.5107 li
162.064 82.1729 li
163.847 82.877 li
165.512 83.52 li
167.145 84.1377 li
168.915 84.7949 li
170.567 85.396 li
172.358 86.0327 li
174.116 86.645 li
175.756 87.2041 li
177.535 87.7979 li
179.195 88.3389 li
180.822 88.8599 li
182.588 89.4121 li
184.236 89.916 li
184.265 89.9248 li
184.293 89.9341 li
184.351 89.9512 li
184.466 89.9858 li
184.696 90.0547 li
185.156 90.1929 li
185.184 90.2021 li
185.213 90.21 li
185.271 90.228 li
185.386 90.2617 li
185.615 90.3301 li
185.645 90.3389 li
185.673 90.3467 li
185.73 90.3638 li
185.845 90.3989 li
185.874 90.4067 li
185.903 90.416 li
185.96 90.4331 li
185.989 90.4409 li
186.018 90.4497 li
186.047 90.458 li
186.075 90.4668 li
18.5981 22.5869 mo
18.624 22.6138 li
18.6489 22.6401 li
18.7012 22.6929 li
18.8032 22.7979 li
19.0088 23.0078 li
19.4199 23.4258 li
20.2422 24.248 li
22.0239 25.9751 li
23.687 27.521 li
25.3188 28.9741 li
27.0879 30.4839 li
28.7402 31.8301 li
30.5293 33.2241 li
32.2861 34.5259 li
33.9248 35.6841 li
35.7021 36.8779 li
37.3608 37.936 li
38.9883 38.9229 li
40.752 39.937 li
42.3989 40.832 li
44.1841 41.7471 li
45.936 42.5908 li
47.5698 43.3311 li
49.3428 44.083 li
50.9971 44.7397 li
52.79 45.4019 li
54.5498 46.0039 li
56.1909 46.5239 li
57.9722 47.043 li
59.6338 47.4868 li
61.2632 47.8857 li
63.0313 48.2769 li
64.6802 48.606 li
66.4683 48.9229 li
68.2231 49.1968 li
69.8599 49.4189 li
69.8882 49.4219 li
69.916 49.4258 li
69.9712 49.4321 li
70.082 49.4458 li
70.3042 49.4727 li
70.748 49.5259 li
71.6362 49.624 li
71.6621 49.627 li
71.687 49.6289 li
71.7393 49.6348 li
71.8433 49.646 li
72.0498 49.667 li
72.4639 49.708 li
73.293 49.7842 li
73.3179 49.7861 li
73.3442 49.7881 li
73.394 49.793 li
73.4961 49.8008 li
73.6992 49.8179 li
74.105 49.8511 li
74.1309 49.853 li
74.1563 49.855 li
74.207 49.8589 li
74.3081 49.8672 li
74.5112 49.8818 li
74.918 49.9121 li
74.9448 49.9141 li
74.9731 49.915 li
75.0278 49.9189 li
75.1382 49.9268 li
75.3579 49.9409 li
75.7988 49.9688 li
75.8271 49.9707 li
75.854 49.9727 li
75.9092 49.9761 li
76.019 49.9819 li
76.2402 49.9951 li
76.6802 50.019 li
76.7061 50.02 li
76.7319 50.021 li
76.7832 50.0239 li
76.8862 50.0288 li
77.0918 50.0391 li
77.5029 50.0581 li
77.5288 50.0591 li
77.5542 50.0601 li
77.606 50.062 li
77.708 50.0669 li
77.9141 50.0752 li
78.3252 50.0898 li
78.353 50.0908 li
78.3809 50.0918 li
78.437 50.0938 li
78.5479 50.0981 li
78.771 50.105 li
78.7988 50.106 li
78.8271 50.1069 li
78.8818 50.1079 li
78.9941 50.1118 li
79.2168 50.1182 li
79.2451 50.1182 li
79.272 50.1191 li
79.3281 50.1211 li
79.4399 50.123 li
79.6631 50.1289 li
79.6899 50.1289 li
79.7183 50.1299 li
79.7739 50.1309 li
79.8853 50.1328 li
80.1079 50.1377 li
80.1338 50.1377 li
80.1602 50.1377 li
80.2119 50.1387 li
80.3159 50.1411 li
80.3418 50.1411 li
80.3682 50.1421 li
80.4199 50.1431 li
80.5249 50.144 li
80.5508 50.145 li
80.5771 50.145 li
80.6289 50.146 li
80.7329 50.147 li
80.7588 50.147 li
80.7852 50.1479 li
80.8369 50.1479 li
80.9409 50.1489 li
80.9668 50.1489 li
80.9932 50.1499 li
81.0449 50.1499 li
81.0713 50.1499 li
81.0972 50.1509 li
81.1489 50.1509 li
81.1748 50.1509 li
81.2012 50.1519 li
81.2529 50.1519 li
81.3569 50.1528 li
81.3828 50.1528 li
81.4092 50.1528 li
81.4609 50.1528 li
81.4868 50.1528 li
81.5132 50.1528 li
81.5649 50.1538 li
81.5908 50.1538 li
81.6172 50.1538 li
81.6431 50.1538 li
81.6689 50.1538 li
81.6948 50.1538 li
81.7212 50.1538 li
81.7471 50.1538 li
81.7729 50.1538 li
81.7988 50.1538 li
81.8242 50.1548 li
81.8501 50.1548 li
81.875 50.1548 li
81.9009 50.1548 li
81.9258 50.1548 li
81.9521 50.1548 li
81.9771 50.1548 li
82.0029 50.1548 li
82.0278 50.1548 li
82.0542 50.1548 li
82.0791 50.1548 li
82.105 50.1548 li
82.1299 50.1548 li
82.1563 50.1548 li
82.1812 50.1548 li
82.207 50.1548 li
82.2319 50.1548 li
82.2578 50.1548 li
82.2832 50.1538 li
82.3091 50.1538 li
82.334 50.1538 li
82.3853 50.1538 li
82.4111 50.1538 li
82.436 50.1538 li
82.4868 50.1538 li
82.5132 50.1538 li
82.5381 50.1538 li
82.5889 50.1528 li
82.6152 50.1528 li
82.6401 50.1528 li
82.6909 50.1528 li
82.7168 50.1528 li
82.7422 50.1519 li
82.793 50.1519 li
82.8188 50.1519 li
82.8442 50.1519 li
82.895 50.1509 li
82.998 50.1509 li
83.0229 50.1499 li
83.0488 50.1499 li
83.1001 50.1499 li
83.2021 50.1489 li
83.4063 50.146 li
83.4331 50.146 li
83.4609 50.146 li
83.5161 50.145 li
83.627 50.1431 li
83.8481 50.1396 li
83.876 50.1387 li
83.9038 50.1387 li
83.959 50.1377 li
84.0698 50.1357 li
84.291 50.1318 li
84.3188 50.1309 li
84.3462 50.1309 li
84.4019 50.1299 li
84.5122 50.127 li
84.7339 50.1221 li
85.1763 50.1108 li
85.2021 50.1099 li
85.228 50.1089 li
85.2788 50.1079 li
85.3828 50.105 li
85.5889 50.0991 li
86.002 50.085 li
86.0278 50.084 li
86.0542 50.083 li
86.106 50.0811 li
86.209 50.0781 li
86.416 50.0698 li
86.8291 50.0527 li
86.8569 50.0518 li
86.8853 50.0508 li
86.9409 50.0488 li
87.0532 50.0439 li
87.2759 50.0342 li
87.7241 50.0127 li
87.752 50.0107 li
87.7803 50.0098 li
87.8359 50.0068 li
87.9482 50.002 li
88.1719 49.9897 li
88.6191 49.9658 li
88.647 49.9639 li
88.6738 49.9629 li
88.729 49.96 li
88.8389 49.9531 li
89.0591 49.9399 li
89.499 49.9141 li
90.3779 49.855 li
90.4028 49.853 li
90.4292 49.8521 li
90.48 49.8477 li
90.583 49.8408 li
90.7881 49.8262 li
91.1982 49.7959 li
92.0181 49.731 li
93.7959 49.5737 li
95.4561 49.4077 li
97.084 49.2261 li
98.8501 49.0107 li
100.497 48.792 li
100.526 48.7881 li
100.555 48.7842 li
100.612 48.7759 li
100.727 48.7607 li
100.957 48.729 li
101.417 48.6631 li
101.446 48.6592 li
101.474 48.6548 li
101.532 48.647 li
101.647 48.6299 li
101.877 48.5967 li
101.906 48.5928 li
101.934 48.5889 li
101.992 48.5801 li
102.107 48.564 li
102.135 48.5591 li
102.164 48.5547 li
102.222 48.5469 li
102.25 48.542 li
102.279 48.5381 li
102.308 48.5342 li
102.337 48.5298 li
3.09944e-5 .614282 1 3.09944e-5 cmyk
@
186.075 117.867 mo
186.102 117.874 li
186.128 117.881 li
186.181 117.895 li
186.287 117.923 li
186.499 117.979 li
186.922 118.091 li
187.769 118.313 li
189.605 118.792 li
191.319 119.236 li
193 119.668 li
194.823 120.132 li
196.524 120.562 li
198.368 121.023 li
200.178 121.474 li
201.867 121.891 li
203.698 122.338 li
205.407 122.753 li
207.083 123.157 li
208.901 123.591 li
210.598 123.993 li
212.438 124.426 li
214.242 124.847 li
215.926 125.237 li
217.752 125.657 li
219.456 126.046 li
221.303 126.464 li
223.116 126.872 li
224.808 127.249 li
226.642 127.655 li
228.354 128.031 li
230.033 128.397 li
231.854 128.792 li
233.554 129.158 li
235.396 129.551 li
237.204 129.935 li
238.891 130.29 li
240.72 130.673 li
242.428 131.027 li
244.101 131.372 li
245.918 131.745 li
247.612 132.089 li
249.45 132.461 li
251.165 132.805 li
252.847 133.141 li
254.671 133.502 li
256.374 133.838 li
258.219 134.198 li
260.03 134.55 li
261.72 134.877 li
263.552 135.228 li
265.262 135.554 li
266.939 135.872 li
268.759 136.215 li
270.456 136.532 li
270.486 136.538 li
270.516 136.543 li
270.575 136.555 li
270.693 136.577 li
270.93 136.621 li
271.404 136.709 li
271.434 136.714 li
271.463 136.72 li
271.522 136.73 li
271.641 136.753 li
271.878 136.797 li
271.907 136.803 li
271.938 136.808 li
271.996 136.819 li
272.115 136.841 li
272.145 136.846 li
272.174 136.852 li
272.233 136.863 li
272.263 136.868 li
272.292 136.874 li
272.322 136.879 li
272.351 136.885 li
102.337 89.8169 mo
102.362 89.8271 li
102.388 89.8379 li
102.439 89.8599 li
102.542 89.9028 li
102.748 89.9897 li
103.158 90.1631 li
103.98 90.5068 li
105.762 91.2471 li
107.426 91.9297 li
109.057 92.5928 li
110.827 93.3037 li
112.478 93.9609 li
114.268 94.665 li
116.025 95.3491 li
117.664 95.981 li
119.441 96.6577 li
121.1 97.2837 li
122.726 97.8921 li
124.491 98.5439 li
126.138 99.1465 li
127.923 99.7939 li
129.675 100.423 li
131.309 101.003 li
133.081 101.627 li
134.736 102.204 li
136.528 102.822 li
138.288 103.424 li
139.93 103.979 li
141.71 104.577 li
143.372 105.13 li
145.002 105.666 li
146.77 106.244 li
148.419 106.777 li
150.207 107.351 li
151.962 107.908 li
153.599 108.424 li
155.374 108.979 li
157.032 109.492 li
158.656 109.991 li
160.419 110.528 li
162.064 111.025 li
163.847 111.559 li
165.512 112.054 li
167.145 112.536 li
168.915 113.054 li
170.567 113.533 li
172.358 114.049 li
174.116 114.551 li
175.756 115.016 li
177.535 115.517 li
179.195 115.979 li
180.822 116.432 li
182.588 116.918 li
184.236 117.368 li
184.265 117.376 li
184.293 117.384 li
184.351 117.4 li
184.466 117.431 li
184.696 117.493 li
185.156 117.618 li
185.184 117.626 li
185.213 117.634 li
185.271 117.648 li
185.386 117.681 li
185.615 117.743 li
185.645 117.751 li
185.673 117.758 li
185.73 117.773 li
185.845 117.805 li
185.874 117.813 li
185.903 117.821 li
185.96 117.836 li
185.989 117.844 li
186.018 117.852 li
186.047 117.859 li
186.075 117.867 li
18.5981 22.5869 mo
18.624 22.6138 li
18.6489 22.6401 li
18.7012 22.6929 li
18.8032 22.7988 li
19.0088 23.0098 li
19.4199 23.4297 li
20.2422 24.2637 li
22.0239 26.0469 li
23.687 27.6797 li
25.3188 29.2529 li
27.0879 30.9307 li
28.7402 32.4697 li
30.5293 34.1108 li
32.2861 35.6958 li
33.9248 37.1528 li
35.7021 38.71 li
37.3608 40.145 li
38.9883 41.5342 li
40.752 43.022 li
42.3989 44.395 li
44.1841 45.8657 li
45.936 47.2949 li
47.5698 48.6138 li
49.3428 50.0317 li
50.9971 51.3438 li
52.79 52.7539 li
54.5498 54.127 li
56.1909 55.3989 li
57.9722 56.769 li
59.6338 58.04 li
61.2632 59.2798 li
63.0313 60.6182 li
64.6802 61.8608 li
66.4683 63.2031 li
68.2231 64.5151 li
69.8599 65.7349 li
71.6362 67.0547 li
73.293 68.2842 li
74.918 69.4858 li
76.6802 70.7891 li
78.3252 72.0039 li
80.1079 73.3188 li
81.7729 74.5469 li
83.4063 75.75 li
85.1763 77.0557 li
86.8291 78.2759 li
88.6191 79.5981 li
90.3779 80.8989 li
92.0181 82.1128 li
93.7959 83.4331 li
95.4561 84.668 li
97.084 85.8799 li
98.8501 87.1997 li
100.497 88.4341 li
100.526 88.4561 li
100.555 88.4771 li
100.612 88.521 li
100.727 88.6069 li
100.957 88.7788 li
101.417 89.125 li
101.446 89.146 li
101.474 89.168 li
101.532 89.2109 li
101.647 89.2979 li
101.877 89.4707 li
101.906 89.4917 li
101.934 89.5137 li
101.992 89.5571 li
102.107 89.644 li
102.135 89.665 li
102.164 89.687 li
102.222 89.73 li
102.25 89.752 li
102.279 89.7729 li
102.308 89.7949 li
102.337 89.8169 li
.627649 3.09944e-5 1 3.09944e-5 cmyk
@
186.075 111.426 mo
186.102 111.433 li
186.128 111.441 li
186.181 111.457 li
186.287 111.488 li
186.499 111.551 li
186.922 111.676 li
187.769 111.925 li
189.605 112.462 li
191.319 112.959 li
193 113.441 li
194.823 113.96 li
196.524 114.441 li
198.368 114.956 li
200.178 115.458 li
201.867 115.922 li
203.698 116.421 li
205.407 116.883 li
207.083 117.332 li
208.901 117.814 li
210.598 118.263 li
212.438 118.743 li
214.242 119.211 li
215.926 119.643 li
217.752 120.109 li
219.456 120.54 li
221.303 121.003 li
223.116 121.453 li
224.808 121.871 li
226.642 122.319 li
228.354 122.735 li
230.033 123.139 li
231.854 123.574 li
233.554 123.977 li
235.396 124.411 li
237.204 124.833 li
238.891 125.223 li
240.72 125.643 li
242.428 126.033 li
244.101 126.412 li
245.918 126.82 li
247.612 127.198 li
249.45 127.604 li
251.165 127.98 li
252.847 128.348 li
254.671 128.743 li
256.374 129.107 li
258.219 129.502 li
260.03 129.885 li
261.72 130.24 li
263.552 130.623 li
265.262 130.977 li
266.939 131.322 li
268.759 131.693 li
270.456 132.037 li
270.486 132.043 li
270.516 132.049 li
270.575 132.061 li
270.693 132.085 li
270.93 132.133 li
271.404 132.229 li
271.434 132.235 li
271.463 132.241 li
271.522 132.252 li
271.641 132.276 li
271.878 132.324 li
271.907 132.33 li
271.938 132.336 li
271.996 132.348 li
272.115 132.371 li
272.145 132.377 li
272.174 132.383 li
272.233 132.395 li
272.263 132.401 li
272.292 132.407 li
272.322 132.413 li
272.351 132.419 li
102.337 79.5762 mo
102.362 79.5889 li
102.388 79.6011 li
102.439 79.627 li
102.542 79.6768 li
102.748 79.7778 li
103.158 79.98 li
103.98 80.3809 li
105.762 81.2432 li
107.426 82.0371 li
109.057 82.8081 li
110.827 83.6328 li
112.478 84.395 li
114.268 85.2109 li
116.025 86.002 li
117.664 86.731 li
119.441 87.5127 li
121.1 88.2339 li
122.726 88.9341 li
124.491 89.6851 li
126.138 90.3779 li
127.923 91.1201 li
129.675 91.8408 li
131.309 92.5059 li
133.081 93.2197 li
134.736 93.8779 li
136.528 94.585 li
138.288 95.27 li
139.93 95.9028 li
141.71 96.582 li
143.372 97.21 li
145.002 97.8188 li
146.77 98.4727 li
148.419 99.0771 li
150.207 99.7246 li
151.962 100.354 li
153.599 100.936 li
155.374 101.561 li
157.032 102.138 li
158.656 102.698 li
160.419 103.3 li
162.064 103.855 li
163.847 104.454 li
165.512 105.006 li
167.145 105.542 li
168.915 106.119 li
170.567 106.652 li
172.358 107.224 li
174.116 107.78 li
175.756 108.294 li
177.535 108.846 li
179.195 109.357 li
180.822 109.853 li
182.588 110.387 li
184.236 110.88 li
184.265 110.889 li
184.293 110.896 li
184.351 110.914 li
184.466 110.948 li
184.696 111.017 li
185.156 111.153 li
185.184 111.162 li
185.213 111.171 li
185.271 111.188 li
185.386 111.222 li
185.615 111.29 li
185.645 111.298 li
185.673 111.307 li
185.73 111.324 li
185.845 111.358 li
185.874 111.366 li
185.903 111.375 li
185.96 111.392 li
185.989 111.4 li
186.018 111.409 li
186.047 111.417 li
186.075 111.426 li
18.5981 22.5869 mo
18.624 22.6138 li
18.6489 22.6401 li
18.7012 22.6929 li
18.8032 22.7988 li
19.0088 23.0098 li
19.4199 23.4297 li
20.2422 24.2637 li
22.0239 26.0459 li
23.687 27.6768 li
25.3188 29.2461 li
27.0879 30.916 li
28.7402 32.4458 li
30.5293 34.0718 li
32.2861 35.6377 li
33.9248 37.0718 li
35.7021 38.5981 li
37.3608 39.998 li
38.9883 41.3457 li
40.752 42.7827 li
42.3989 44.1001 li
44.1841 45.5029 li
45.936 46.855 li
47.5698 48.0938 li
49.3428 49.415 li
50.9971 50.627 li
52.79 51.916 li
54.5498 53.1602 li
56.1909 54.2998 li
57.9722 55.5161 li
59.6338 56.6309 li
61.2632 57.7051 li
63.0313 58.8521 li
64.6802 59.9028 li
66.4683 61.0229 li
68.2231 62.1021 li
69.8599 63.0918 li
71.6362 64.147 li
73.293 65.1138 li
74.918 66.0469 li
76.6802 67.041 li
78.3252 67.9521 li
80.1079 68.9229 li
81.7729 69.812 li
83.4063 70.6699 li
85.1763 71.583 li
86.8291 72.4199 li
88.6191 73.3101 li
90.3779 74.168 li
92.0181 74.9531 li
93.7959 75.7881 li
95.4561 76.5537 li
97.084 77.29 li
98.8501 78.0737 li
100.497 78.791 li
100.526 78.8037 li
100.555 78.8159 li
100.612 78.8408 li
100.727 78.8896 li
100.957 78.9888 li
101.417 79.186 li
101.446 79.1978 li
101.474 79.21 li
101.532 79.2349 li
101.647 79.2837 li
101.877 79.3809 li
101.906 79.394 li
101.934 79.4058 li
101.992 79.4297 li
102.107 79.479 li
102.135 79.4907 li
102.164 79.5029 li
102.222 79.5269 li
102.25 79.54 li
102.279 79.5518 li
102.308 79.564 li
102.337 79.5762 li
.269902 .816403 3.09944e-5 3.09944e-5 cmyk
@
18.5981 22.5869 mo
18.6758 22.667 li
18.7539 22.7471 li
18.9092 22.9067 li
19.2212 23.2261 li
19.8433 23.8608 li
21.0879 25.1147 li
23.5791 27.5718 li
28.979 32.666 li
34.021 37.1577 li
38.9639 41.3359 li
44.3262 45.6367 li
49.3301 49.4512 li
54.7529 53.3838 li
60.0771 57.0601 li
65.0439 60.334 li
70.4292 63.73 li
75.457 66.7637 li
80.3853 69.6201 li
85.7329 72.5938 li
90.7231 75.2607 li
96.1309 78.041 li
101.441 80.6641 li
106.393 83.0229 li
111.764 85.4907 li
116.777 87.7129 li
122.209 90.04 li
127.542 92.2451 li
132.518 94.2358 li
137.912 96.3262 li
142.948 98.2168 li
147.886 100.016 li
153.242 101.909 li
158.241 103.625 li
163.659 105.43 li
168.977 107.151 li
173.938 108.712 li
179.318 110.359 li
184.34 111.854 li
189.263 113.285 li
194.605 114.797 li
199.59 116.172 li
204.993 117.625 li
210.038 118.949 li
214.985 120.216 li
220.35 121.558 li
225.358 122.782 li
230.784 124.077 li
236.112 125.318 li
241.082 126.451 li
246.47 127.652 li
251.501 128.748 li
256.433 129.802 li
261.784 130.92 li
266.778 131.942 li
266.865 131.96 li
266.952 131.978 li
267.126 132.013 li
267.474 132.083 li
268.171 132.224 li
269.565 132.504 li
269.652 132.521 li
269.739 132.539 li
269.913 132.574 li
270.261 132.644 li
270.958 132.783 li
271.045 132.8 li
271.132 132.817 li
271.306 132.852 li
271.655 132.921 li
271.742 132.938 li
271.829 132.956 li
272.003 132.991 li
272.09 133.008 li
272.177 133.025 li
272.264 133.042 li
272.351 133.06 li
0 0 0 1 cmyk
@
0 lc
69.3491 179.416 mo
69.3491 176.282 li
56.6611 179.416 mo
56.6611 177.535 li
43.9731 179.416 mo
43.9731 177.535 li
31.2861 179.416 mo
31.2861 177.535 li
18.5981 179.416 mo
18.5981 176.282 li
@
%ADOBeginSubsetFont: Times-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /Times-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 50 /two put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/period <1C60D8A8C9B89DB76243241956147685E9D11B558168E06D18275E2
338D279B9913C7A1D115D13271EAC> |-
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F3
5FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90
C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887
D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QJWYKQ+Times-Bold /Times-Bold findfont ct_VMDictPut
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /.notdef /two 205{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
61.2559 193.57 mo
(0.2)sh
120.099 179.416 mo
120.099 176.282 li
107.412 179.416 mo
107.412 177.535 li
94.7241 179.416 mo
94.7241 177.535 li
82.0361 179.416 mo
82.0361 177.535 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7BA8F425ECEAC1D5FB15843FC3AEF325D7DA4AC5B49218
1366F1B4D605798E0A37299E20A2C781E96943F501C8D283CF9274FA8718C41B
B1F2F8D3022028ECD22D73F736D12B17047DF40EDD60B6519E74C55A33C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 
203{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
111.998 193.57 mo
(0.4)sh
170.85 179.416 mo
170.85 176.282 li
158.162 179.416 mo
158.162 177.535 li
145.475 179.416 mo
145.475 177.535 li
132.787 179.416 mo
132.787 177.535 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7BA8F6239473257A8A6F62043E414325CA26487C2B24B19
1B168E0DA687FF84130E464A581CEABD7A1831A83A01C968043ECE2E73D7C0CF
5C7A53E3098E1CA41D075CF1B0FAA4D3D63203DF5A7A1EBF70F4DE9A7FD3C13C
DDAF688040D9BEE80C42C7397D37BC0163DE0936D86331F997A056B7561C404E
F4CCB6BEFB2D969A52553626DC842C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 
/.notdef /six 201{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
162.756 193.57 mo
(0.6)sh
221.601 179.416 mo
221.601 176.282 li
208.913 179.416 mo
208.913 177.535 li
196.225 179.416 mo
196.225 177.535 li
183.538 179.416 mo
183.538 177.535 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7BA8F623D810BCFAA50091BF89AB5BE3357ACF7A8EC11
C35A526108259CA49EFD17EA8971235551BABBA49C018C3375128659D5D7051D
45E4C4ECFE02CC0D35373F3D4B2DC792F4C41BCD9DEAF2AC24EA7A456EB3C155
13EE5D201ACCA4975153635E279761AFF1AF1596B3D3861988A67B17B4B84234
7EAF131C1ABA71797B1264826F04BDED0719803E211C51F417CEBD773552253C
6786889CD2B3EB81707FCE2453D0BD7C65B6D6DB5614A7F2FDB700BE408D6F36
A3C20DDE8F30CA7C808E9263350AB2907E45DC2CA6BBA6B44E98822CA142BAF4
C98107A946AA8711E8E6F4BC5EB9C6DC60704FA7E3779BF270D263AF4819BBE7
93351D4C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 
/.notdef /six /.notdef /eight 199{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
213.5 193.57 mo
(0.8)sh
272.351 179.416 mo
272.351 176.282 li
259.664 179.416 mo
259.664 177.535 li
246.976 179.416 mo
246.976 177.535 li
234.288 179.416 mo
234.288 177.535 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four 
/.notdef /six /.notdef /eight 199{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
264.258 193.57 mo
(1.0)
[6.56641 2.64941 0 ]xsh
13.311 179.416 mo
277.638 179.416 li
@
18.5981 153.277 mo
21.7319 153.277 li
18.5981 158.505 mo
20.478 158.505 li
18.5981 163.732 mo
20.478 163.732 li
18.5981 168.96 mo
20.478 168.96 li
18.5981 174.188 mo
20.478 174.188 li
18.5981 179.416 mo
21.7319 179.416 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7BA8F622456C4991FA35B552AABDBA410C5FE2A289D1C4
B46CC6EA81B6F378E0E9FBB887620926C1C295BED9DF5CC60E1506BC8F14C40D
D7EC5F146AE0B602E11477020F8E0DC1E61B7E5001ACA3564CDADF4245B4EB16
6D458A0663DB06F2579480E048AFCB0FC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four 
/five /six /.notdef /eight 199{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 157.773 mo
(0.5)sh
18.5981 127.139 mo
21.7319 127.139 li
18.5981 132.367 mo
20.478 132.367 li
18.5981 137.595 mo
20.478 137.595 li
18.5981 142.822 mo
20.478 142.822 li
18.5981 148.05 mo
20.478 148.05 li
@
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 131.641 mo
(0.6)sh
18.5981 101.001 mo
21.7319 101.001 li
18.5981 106.229 mo
20.478 106.229 li
18.5981 111.457 mo
20.478 111.457 li
18.5981 116.684 mo
20.478 116.684 li
18.5981 121.912 mo
20.478 121.912 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01EB08904B1DBA8C9FADA482DD5B
D7B85932F4448BE6EA91291DDC2715CACD23> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four 
/five /six /seven /eight 199{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 105.492 mo
(0.7)sh
18.5981 74.8628 mo
21.7319 74.8628 li
18.5981 80.0908 mo
20.478 80.0908 li
18.5981 85.3188 mo
20.478 85.3188 li
18.5981 90.5459 mo
20.478 90.5459 li
18.5981 95.7739 mo
20.478 95.7739 li
@
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 79.3516 mo
(0.8)sh
18.5981 48.7251 mo
21.7319 48.7251 li
18.5981 53.9531 mo
20.478 53.9531 li
18.5981 59.1812 mo
20.478 59.1812 li
18.5981 64.4077 mo
20.478 64.4077 li
18.5981 69.6357 mo
20.478 69.6357 li
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKQ+Times-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7BA8F63126F4A1F6CE00289C1CCAFA389E5E5FA018A9CA
94A9AB8FCD76431E4E0F7BC7A33615EC70702BC420EB4D303A110985122EC77C
7B03EB8C71982B066BE2C1A366D2D1F4CF54461387C6A50BE96E3793F2EC5628
60986B8187C9036DC54CA8C289E1AE1DBD61F35DAC84B3776130ECC3480C8D38
B2E2C8B3A54D553A0E087E1F35341759A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKQ+Times-Bold /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/QJWYKQ+Times-Bold*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
QJWYKQ+Times-Bold nf
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 53.2188 mo
(0.9)sh
18.5981 22.5869 mo
21.7319 22.5869 li
18.5981 27.8149 mo
20.478 27.8149 li
18.5981 33.042 mo
20.478 33.042 li
18.5981 38.27 mo
20.478 38.27 li
18.5981 43.498 mo
20.478 43.498 li
@
QJWYKQ+Times-Bold*1 [12.8 0 0 -12.8 0 0 ]msf
0 27.084 mo
(1.0)sh
18.5981 182.683 mo
18.5981 19.3198 li
@
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF
0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12
CD842E> |-
/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF
91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE58
8EC87D3> |-
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
/x <1C60D8A8C9B74CDDCE74E25740A68E8EC93756D85AEDEDDC715C2E343856
089CBF3B8126FA9B43C70F5E5E660A33AAD5AB29D3CF51EA27446736F5DCED8E
976C7B422ADF6C970DBFFC4BB6364510FCD37FB93596C6B594457047595B6C2E
545BFDEA968F36> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 74{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
13.998 10.0439 mo
(x\(t\))
[5.55615 3.40771 3.97168 0 ]xsh
2 lc
237.842 31.5977 mo
223.832 31.5977 li
223.832 28.9707 li
237.842 28.9707 li
237.842 31.5977 li
cp
3.09944e-5 .993988 1 3.09944e-5 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5F
ADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 49 /one put
dup 61 /equal put
dup 107 /k put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 11{/.notdef}rp /equal 45{/.notdef}rp 
/k 8{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.332 34.543 mo
(k=1)
[5.62793 7.15234 0 ]xsh
237.548 43.3384 mo
223.538 43.3384 li
223.538 40.7114 li
237.548 40.7114 li
237.548 43.3384 li
cp
.883665 .769161 3.09944e-5 3.09944e-5 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887
D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 10{/.notdef}rp /equal 
45{/.notdef}rp /k 8{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.038 46.2842 mo
(k=2)
[5.62793 7.15234 0 ]xsh
237.548 54.7866 mo
223.538 54.7866 li
223.538 52.1597 li
237.548 52.1597 li
237.548 54.7866 li
cp
3.09944e-5 .614282 1 3.09944e-5 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642E6C0751425F2912B774695F4573A7ED10CC8657328CADE6CD5BA
97A6C5BF6C1485B23CC65AC596605B697818C329637772F63BFEC9BF78A14135
7498BBAC8062C44F8B28D5A5EFBE38074FF4A38C9291B6291D33E32B99042454
59FFD3AE6CFBA6472FEF21B7BFBB29FDDBA248755ED07D6E4AD20219> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three 9{/.notdef}rp 
/equal 45{/.notdef}rp /k 8{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.038 57.7324 mo
(k=3)
[5.62793 7.15234 0 ]xsh
237.548 67.1665 mo
223.538 67.1665 li
223.538 64.5396 li
237.548 64.5396 li
237.548 67.1665 li
cp
.627649 3.09944e-5 1 3.09944e-5 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7BA8F425ECEAC1D5FB15843FC3AEF325D7DA4AC5B49218
1366F1B4D605798E0A37299E20A2C781E96943F501C8D283CF9274FA8718C41B
B1F2F8D3022028ECD22D73F736D12B17047DF40EDD60B6519E74C55A33C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three /four 
8{/.notdef}rp /equal 45{/.notdef}rp /k 8{/.notdef}rp /t 3{/.notdef}rp /x 
135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.038 70.1123 mo
(k=4)
[5.62793 7.15234 0 ]xsh
237.548 79.5767 mo
223.538 79.5767 li
223.538 76.9497 li
237.548 76.9497 li
237.548 79.5767 li
cp
.269902 .816403 3.09944e-5 3.09944e-5 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7BA8F622456C4991FA35B552AABDBA410C5FE2A289D1C4
B46CC6EA81B6F378E0E9FBB887620926C1C295BED9DF5CC60E1506BC8F14C40D
D7EC5F146AE0B602E11477020F8E0DC1E61B7E5001ACA3564CDADF4245B4EB16
6D458A0663DB06F2579480E048AFCB0FC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three /four 
/five 7{/.notdef}rp /equal 45{/.notdef}rp /k 8{/.notdef}rp /t 3{/.notdef}rp 
/x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.038 82.5225 mo
(k=5)
[5.62793 7.15234 0 ]xsh
0 lc
103.498 179.416 mo
103.498 164.211 li
@
189.165 179.416 mo
189.165 164.211 li
@
272.148 179.416 mo
272.148 164.211 li
@
23.5981 171.813 mo
98.165 171.813 li
@
100.055 170.993 mo
98.7319 170.594 97.8721 170.226 96.811 169.8 cv
96.811 173.836 li
97.1909 173.655 98.7319 173.042 100.055 172.643 cv
101.47 172.215 102.754 171.922 103.586 171.817 cv
102.754 171.714 101.47 171.421 100.055 170.993 cv
cp
f
21.7085 172.634 mo
23.0313 173.033 23.8911 173.401 24.9521 173.827 cv
24.9521 169.791 li
24.5723 169.972 23.0313 170.585 21.7085 170.984 cv
20.293 171.412 19.0093 171.705 18.1772 171.81 cv
19.0093 171.913 20.293 172.206 21.7085 172.634 cv
cp
f
108.971 171.813 mo
183.538 171.813 li
@
185.428 170.993 mo
184.104 170.594 183.245 170.226 182.185 169.8 cv
182.185 173.836 li
182.563 173.655 184.104 173.042 185.428 172.643 cv
186.843 172.215 188.127 171.922 188.959 171.817 cv
188.127 171.714 186.843 171.421 185.428 170.993 cv
cp
f
107.082 172.634 mo
108.404 173.033 109.264 173.401 110.325 173.827 cv
110.325 169.791 li
109.945 169.972 108.404 170.585 107.082 170.984 cv
105.666 171.412 104.382 171.705 103.55 171.81 cv
104.382 171.913 105.666 172.206 107.082 172.634 cv
cp
f
193.26 171.813 mo
267.827 171.813 li
@
269.717 170.993 mo
268.394 170.594 267.534 170.226 266.474 169.8 cv
266.474 173.836 li
266.853 173.655 268.394 173.042 269.717 172.643 cv
271.132 172.215 272.416 171.922 273.248 171.817 cv
272.416 171.714 271.132 171.421 269.717 170.993 cv
cp
f
191.37 172.634 mo
192.693 173.033 193.553 173.401 194.613 173.827 cv
194.613 169.791 li
194.234 169.972 192.693 170.585 191.37 170.984 cv
189.955 171.412 188.671 171.705 187.839 171.81 cv
188.671 171.913 189.955 172.206 191.37 172.634 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/comma <1C60D8A8C9B89DB7C9B4756630BFB06276234AECCA3BC685A5120ED7
E73C100A605F362E52A669> |-
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F3
5FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90
C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-
/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB5
3E56E1831B0550D2FE4055F5> |-
/bracketleft <1C60D8A8C9B84E0A47DE6E31308F6916774436BCC5E93D8C54
5B626ABEE681FFE94910D73417198132B3D4471A> |-
/bracketright <1C60D8A8C9B84E0A47DE6E31308F69165CD507702C68F7819
0F552E90AD236116C7F7D950D577A4F24AF30262C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 32 /space put
dup 44 /comma put
dup 48 /zero put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp 
/zero /one /two /three /four /five 7{/.notdef}rp /equal 
22{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 13{/.notdef}rp /k 
8{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
46.3984 167.668 mo
([ 0, T ])
[3.40771 2.54395 6.15576 2.48389 2.05225 5.96387 2.54395 0 ]xsh
127.78 168.002 mo
(  [)sh
136.276 168.002 mo
( T, 2T ])
[2.05225 5.24365 2.48389 2.54395 6.15576 5.96387 2.54395 0 ]xsh
206.307 167.943 mo
(  [)sh
214.802 167.943 mo
( 2T)sh
228.746 167.943 mo
(, 3T ])sh
2 lc
237.549 92.8286 mo
223.539 92.8286 li
223.539 90.2017 li
237.549 90.2017 li
237.549 92.8286 li
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QJWYKR+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62D
D7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0
B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F8
9019F8CCCB6FE3AF5C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QJWYKR+MyriadPro-Regular /Encoding get
dup 101 /e put
dup 114 /r put
dup 117 /u put
pop
%ADOEndSubsetFont
/QJWYKR+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp 
/zero /one /two /three /four /five 7{/.notdef}rp /equal 
22{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 
5{/.notdef}rp /k 6{/.notdef}rp /r /.notdef /t /u 2{/.notdef}rp 
/x 135{/.notdef}rp]
QJWYKR+MyriadPro-Regular nf
QJWYKR+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
245.039 94.7783 mo
(True)
[5.42383 3.92383 6.6123 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QJWYKQ+Times-Bold*1 uf
/QJWYKQ+Times-Bold uf
/Times-Bold uf
/QJWYKR+MyriadPro-Regular*1 uf
/QJWYKR+MyriadPro-Regular uf
/MyriadPro-Regular uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Peet Elders) ()
%%Title: (PicardPlot.eps)
%%CreationDate: 11/13/2011 6:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7'2AdP/2'kIUR5^k!INOYJ1qYe^Oui.+N5_*gq8B("j"rq>`PN"Y*^HhQ-\\W1SnXfCgSl:P@4I<1TXmoH4:C6Dm&-Z1*F
%P_Fu`/AY`0&r_MsrcN9\SitK&ZB:1j:dZ<>#m<P0n3`9=DZmnkJJ`bd^E2g/oP3,kejGm;F6gf6@H3[/TDluRhk,EHI7oo5/Csj0
%A/G4'>l%38^"S(HmFdY7^"N'f"<Y3,pOAQ5IfoatTBOC7d:]9D[!%q`@RcCgGW/P-I2-B&]!u@<rN1c!Hj';2UqX.HfjaTX>7P<n
%D@(t@kkDk/)T=K?\dq735BFS@<l;mo6oVqIkYYmtT!RWPj9pBMdG$5q*p=@GH]u)1etcgW5BHjK]S#(cfIbS0cIT$l-]aQrDjGf`
%%KI'us'_(r6t-l)YY?c0MuK#3;\L:jQ9["Fs3!>%K>]P^oEA^/R"^KLH*W+=r.SUQFX.Ul$&uo\U]6e1s,L<P3BZ_QV-)fWQ=75(
%g&KD1@#uN#?gc=jDF$))Wu7E1gr1+ZrI-o((]81W6ugVHE'j[\`4oQ8G+Y2L>JPXP`=A%UDM\^&^spm2IqXQ].7DV:d&Zm:"a)gD
%nqAV<1(=-d/7a9g=X#"Sh^H>RLditI85R)pnp`[P&.eu^,Cku-dfe.P?tPVU.aIcBnl9.2,B7TGPU24eTMbKYP5f"hIp?X&d'm5*
%`V1Em>jbpO6kI*0(;sBYNH4>2S.3P82d*p9/&40'on7ZAIR29[Lu%4Q?geg2$H2kW]ChJ%!Q5.YM1tmAVZ.HL+fVETY[c77.YOV:
%T[2'c0pnfj$NE.*i8;<WSSd!s5joff-PMs-rW1@D_\iPYA\=]9j585-G.QP8rRK!H)YTTlb!,o"#f0ioj/p'n!*g/RYi-)m*r6:9
%3o(,k;,dH%IPf].?akK12<qMH5J9JbCr,D4rEu%PBXfYp0NN`=^V$HBU\/d2(>?u!L1:/MBLXdc`2pr(DSTEZU+GLMmML[b%KCr3
%@K1j\cfrs[ap0[Ap%.SL_tE.&#Ep$bl/c_=>CkBNPTS8%2XE(tl`G[5B/?AcIKlo_nD_O(ljmO6!*R,`q)=3P$f9[Drp@JPljaSD
%[V#Hl.7;S$\,L?UV>\RXi7<E#rAGRGq+&e^E1&9nI/mup'&N[0>5$Y.DLm*JNP^Ic]06>RJKLfg`>IXnIUk$@N:LTm56+LtN%lQF
%bm^If7MpOX%`"\cpiB[Vquu`(^OTVp:^WB;$c76*go>s'<$Z<16CYi8l@2&)!LO(?Tn-Qa87#uf4uJ#fQFk+Z[TWOu2qS;pM._9&
%chQU7aii#I>@%024^Bjo>A,/S=+Jh'Iifp'oAf(.hX4n'I/uk\OeY_LLHIS1r&Th2e)JON'J6sV_l[O\eP(R(-FBHI3E@!U)E2$p
%I9K9M=E@2ipI;L(B(-%!N#d@iLGA1,rRhMGr5"H'L_tX:T.g2o/mqNnWd_?YTFBhG#J`m#IR&L^YSs[<4V5)MM4.JBFPm%[-[nW3
%/9KWb(C1q@@6?)6S(Z3V59'G!jEkWI:!nTrm/?5,IoEshRF-='ko&p.([+m50Z"U-m=u-s(B%u#G2Qec=mn86eTcN40*ceB$kBKU
%JCPM7d)3!7io#7s5IG[@/a_lM2GO?N5^>&j"[<0oUT`V51&TYIqg!Jr/05B'rjB!,MdEJD'#;@;@#\8pqom%gE*rdM!&;k'!Hrkq
%<)9h2La>A(Ikq8:^RYEn&Z>_2J;V)k+Q=KfJ8G0e%b?OU]+b6;Ih=l6ll?Y=X2YKjPM*3>97+?Y#`uS$g`qsPbSItbO$OsH<^Qj.
%rc<YRqS6&2@W+&n%FsC;4;SQC]PEC_L5>,0)!-e]AG^<C1[mXrO(YL*GQipJO`KdL#5Wh8f!N2C5JrdU8P9Y5#g,l@AFt0WA`b`9
%`:,SHLMZuATXX$dXk*MYTl65VUtTPmLu<dH056=LRQ88;&.cX!5<gRS!(%mG=)q4^N@_RGrn3-mJtHf\^lT?3bD_u$()WtWOOb1,
%Z_mjb]I2Ar3uc>R!=d^L5Z$[lU;:fP6E'_5&:.Z2k)UeuBXn?(fFXF>oE[V!%69RQcqbJX+tP&8LZFu+c6)h`$9nDj871$?DbIl9
%Ke2tapJ8X]\c<22?oPm9,D_=#>Ac#/s0=U0OIZs5XT`jdEXNrbS%sn]*A\?,#>n3FHjH<'4Ol`K+U&V@Oc2Y\TKN_^1$-ue&QiN)
%`Zk`]\*t,COY`.;JifL>`'23IJ.SD?LU'2%=WGa=?20=a2+FA@J+8[#!',`p)?H\XXT(G[qp;>eonM[l[mguP?pI<e`mArjlVKnO
%VZ53UPsPKH'AWn7#$cFkS3`(J!_c&g"SL<#5\3/uqm2";kPsY-$_?YacpJKS_[d=bFj4PB6_m]Y[:[V,6I^I;V1D\[m-n7Y@]M+E
%&hcCabo?@$9`A*"s&TO,Ipmd(<sen.$3+'5s&TN!7gZq_htt%)p=#NI-En87'")cI&?SW@CLuQX!s`&i.NA9?9ecBI(itGQRfeU7
%D1`JpNJ58MmTVT)i4l@L97V8S@p]I+A^oKW&8lN!*.]C)6QGKGT`-VDG5t>4WtkoBe,7L*^;'&fhnT*e%rei5<s]D4+$0/hL\6JS
%G^O:Hr+EQBJHk!1G0A)6].M8OmKANclL+Zo"`l"AP'4b-Cb]D_("\?&":G/Grn7;(d+i,dD8gu&eS!N=YbHY^!b:K#[X[rd4/"BV
%^hP]2J`Xt\j*JVc^]&_S<5A"#btr,Z*mX#4.5LEf4o^<=%V@+.KetSV^b[Qgqg_.G@\D03k@BJ!M*gJ@`>g==I@sG3XUI!ArVno'
%5bTmeZ.nsBD\NTZLf#3?qVm!m+!k`M&?#Q1//i0ucq&aL'Wa[nSGI_Eh1-"6e,&[NCFQUMJ,f,jq`eMWY`%3(IubEo@pr^i6A0UH
%;fgSi)Q$o1RWuR25=0s#;$&(L)@c/mZdEr2C33_(J&^FA1gm*;r@p1:5Q?gRnQF.,U\^$33V6)b'd&[h*7&$+"m/dT*cH&4X/Y(F
%^\!Sl.$1BDX`r!N7To*X%$La+\pm+4QLqUM!k-Yt3YOTc1KPeR?t,#V,d$V&AC(S"XQ82_VGc2$(46t]Kk=GkfYCGR%>*n#bcf>H
%F<>EsWUQg<O4"UU&dS[957>;WLr:_@A!dro3q7RP=0Y\Omff3m$U97;H[7O'/M1G[4,b7FY@^-UH@Ah]$;"ESck8tH[W)''1h15T
%1eVa=&dL<7$3`cO82HNuV9`r_lTR,1$t3>RKsV9,.1ft^#RO:7bBsKKs7L8FRGbG9]s]`Dp&:6]:hf!do;jF]Q=20/Bm+6:lGGIC
%g&I_DTk)O*.j6B57C>3P=Vr;+@G#\=ciTsH#[(4I]Boe2c(HkW"T"GKYLlPkB8o]SfuV%UreEDd'a_D[VafBW_o<l\8D2K8Q=0]d
%/T(>K>>&B]g\(lY`GGEAYmf,!X572XG5V_aBs'D3bjVO55aWq_VEYtJq.&)jkK8giS+Th8Y.p@oas"WcHaK4:Gf"JcJ`/AY'Za6)
%RGE$<9V2Y>a"3_Z"tU4,[bNJ2OuXgGW@?I"JS7;^`02P"?iAMf>H52(_D2nX,$6QJ.A'$jWN=8'86ZT@ZOO\[^#/il?k'qUn6Cn`
%Cr+%.5i;')Yl9Pm2DBS3oS8M^JFjQ\Ojs7E4kp,<)Y=jEePMLFId%?$Jg^88BOq(!=]T=C)j].aNI&jDS3oG*.$9%E"\cS#e;K,U
%"ZOF0id\e>ai['t,oUNgK6*18k2Jrj(G\:2>F-1/)ZYu96tn4*Pi>%WF7<CV3--e>'u#Bfk2'=^F<E/hAkSI%E`iBHlO@a8EJ%c+
%QCN_A7)1BK:dI,kpa*UVOja`J2aK8F:6b.j.<MUt1fO?<&1hJt8PVu:!,4fD]C:e68Arn400UBP#iL'b$PLY&bY+GQ&j0L%bkGm/
%1(PE2<5hph>pVISd^GVSj.!m]7N\_diYtB5T!!D*m@%*%YQ?P\hjBP9n[M=k^HM9Y7(KkcFpK&eHT`FVo[^8&<7u/Mb!51mTJATu
%XSOF/K!H\kmfDU,ke]_>fAkP92UenV%VFI,Iq-h@2e&"E7]lK*_>&cN'bJhuW3#['$_%LoHiU3moboV2hjT+JU2SN`cuKP*eTB(6
%O2;)t2FH1c##/Ym+_&gA7=X?eRVhhd:B*59jkL*2&n'sm>[?P&]Y#L'CZZosH!?ZR_06,rE2frAfG:Q6.'f[(,0fOo^m^[n`bV>m
%N+@FqW%G<J#(;6V,;O!?-qB?6$Bkf.'<O\(@\U,,J=("&P99(q#.@%`fSZ8iBJ&r56t9rW9f/40>YQ<]#J+DZ@*iNE=1u")?>Y+c
%`J,86=1U.p_tp#@a1tk_I267>5bLFoEs:8i<W-7Qs(m),Sub8ULK`/`.Bs'qE`,VL2![!:k.;*sB#Ln\5sVHp(M_"Ff.<tTI(8h=
%#5`B87ou4</_A`+XUK%pPp@,/H;"AYECL&VH6f>`Ehss,'%:YDMo@c.o`_/?a>3O#aYU9<@$c#T*rmE<FECKn>i'0DFBU:-p'D(1
%+V3J#G_Ts5hEP$=#Rr[ZV8Gu#BI;)^f1I<^faK1r$.')"lKL=aC9ncVdGn?YBXhMoBaYhrB+$FDUo?^`+VdeN&X$^[g5$>OY$/TF
%I$;m:C*Rm\&B5J^QYR!*07'>$[THpf6,,fp4Kdm>?P81EPd\@i>T#A%OAIA"Kmp)/!>NZ)rWng>l\VeS(1%X$'iD<XJD_Cq]k^X4
%\sV`MX.[FX1Xn3S:^^<b!iX(OG>NNan\2if`Zfi?)O_<TW-Nm#&qXJb1V_Pc:fIPE0B$-UZ`iJs][?o?g@r'A^4&%FYDq\"e++;d
%i93KB,5!eBS/9NXHE&bEgjUbA(L[k&_md!<moq<DU)luN[$nDs271^u)9!dV,8]WA\2Hr5-GikG:=s$L40>G)0Xu[SRHQ44fT)NK
%2SbS]l03ZLNWCnj@;4@_`W.:A7m>FJJ:cfgOnN%\7kei/hpSN@;I'f@[BYrf+q]+!%Q(FI2K0..M^6<bf=:"%>`9'%6u1RQ)&e`k
%OMl&7fbm#XR9$IgM2(RX*&Ms[9JpYTm_nF^rO1VR<!0R`2k+DOb@u@0Z;ulaO2IQYomQ1LppjW8?cCL?V<!%Y'sE,>n'fKu(b$6!
%qreJ,$sjMKS,^T+4N)C=[c__.':oZ&Ao!VQTLn%lXUO*e]$4!mO7dT=8@NWG]At[7o@YL<\E]hA5T%TZDrQngdPh-sR16lU4dkEC
%c=SQ.mF7[8?gWaHi:UmZB468nB_#Z-3`(NR*Job#09>QDR<HmMU5`1,0)h86b_r+X39se[o:DFWd8:gA!?+A0iqHMaQQL^k7^@sE
%U(\V]Vq]u`nj^bMnnlP\anfp:Og;`25bQSBXuGUI_'duU^+u]jZejolFf+96>2`4uqP,&r'DldZLP91#d?0n&^MX^QRt/bSIIMWr
%dlI;H0h:\;ad;;CoQE4\cf(di].gB`0kum@pERoKqE$n,<Cb`]:!2m8g`O.%]k.(p")t,UX4%&6'>Anj9P7BnqpKn:J*W.H5ON-G
%Ln>[m1<csh]'"'2!'/8)fbZoaLn0R=#)H-(QLjje,a7tH%^1Z5/gAOd*^dDcPKm/@=0Dd'/-N<Jo9K(><AK_ApY:Uld<hB%>^[g+
%ajgh;;DRUMK%'93ILSNE+K:OW\MNU6)"_B=-cjW7qn0\9YSF;.2[5u__Zr=-"Z6<oLr!XKLq^B_`<>oanQMmMp,Pq-)agC3<!@5[
%LN"W)"V6ko:$su+YBPiXdEb/jc)/it!3_LonRt1gCfT]9Vq;1$EVBT?d6[D/aI:A'+`ca[2AHY8Kn"iFG5fOQ+8]igKmqp.SIH+$
%+(NQbc?#kFb;StPf'G?oq\b1P>@iHCp(o(>>Bod@p`eNIfjH2V.-?"c^N-ZQYlAmZ]U9IT@i#GbR/Dt4SjmK-@C5^>XCW;m=07j6
%NbXqB4K\,dJ1Rq\p`A7jQi8WZ;DK6ZVf1>Eb=oOZh<b_J6!O^BprV_R<ZY3JXIr#m(+U*U7Q2"G4-@Z!`K,*@nNl.r;9T+`EI$?m
%Ff_L200+$KPKQ`+AtRS;h'"hqd7?i/Xd:eM<>+gr_S*MY/iq!0?\V+Yh^IZ107eHoVau(,'VgQrgW#YNL7dT3GMQ=7q%]u`mMZD$
%<ac+K2%<U<dKTo"jigGr"ZCB_I"'4+hPaN;4>b6>(E)_c;ShZ:`71Y12Q(=NJ0raZ+1Zs,8]L>SH?ZOC?dr''Y1/Gi_;Zn?"B>fc
%n$C?K=`cP<\&EaYNH-C>hlrV<*#][GE*OsT6]l3;gNZ#ia%)G&4:#`Zs1ND`J$u+`G-Q?rBA1h[21SPF$NN'gch`2Bg:WRBbgUfO
%#HrR0Z=.s*b)&l+IV^Zm6%@Kb/.r=DSMDkG!J]<@4&AUHmQ+2$J*.'Ql"fGWB#r-LfeQ@jpI4^eiCtHZ-L(bj7Vo<3&rGu1Z'c=?
%-.3qKol!X/^6C06[n&nG8ITbGa5-3bW-K(Q+[\?"OU:4oh:cWUrH@(!fJ/KF_lHV"gb%A=Xm^"bHQ((TV\A0^%lF*2!V2n$bE?eU
%Y=r``%Z4%Z@jogA0?Z1.N8*id8JeDARn,DWX%9&;^ET]4pG>`g/.:C^-qi(2;$MNMG4/nu;^Vm#l_gSoOcq>B"/:o9m;m3s*0VBB
%jq%7JN&C,uh!7',$j]5T'LB@\'DV3`a%a(`)\.kS6.ed:#bbD`PqXK>(Z)+97sV7!\50>Q#R]bu6A%dc5f.D!ZRu(o#7ZY#Tn0Bt
%W?cRhM7&r5Vutu:dCcA&Y?/2m"DIIu!e9&_;JIERNaA/%AE$HQ"AI6&qZ@A*QP#&^dE#rnI=;]t%)knrBIIYQV\ePHfD[qTP=e:V
%geRd)R0Ko,7(qIaXjNN((,Q6nM$M-cQ$nA!J`]FS4`kr/c!$Ho9B;FfHD(QLN>fM"E"OgLMF^2G)lqC%0o0Ai*">?2.0g>hiXcGN
%jP>s"<]o=7U^Sc,LTu#cGhn0S-D+I84pVe1#K0GC1>L$*YJG?(AQ=ELLRT78i)"G51(Bt(#7jSHBu94p0B)R`aW8?ZBNhnHA"oYS
%%C&"4%K7"Z&f_/uX8PD''=osdQeJI,[aT*O#E1+2reP,d5^Q8k`UE\A]P)H`TNWT(5s3:o!8_L!cfF9Rf;n(+DV"\W(P_Ng)qJj=
%)^D_,C:cQ*>K$Jtg`>U\aZU]pebmAO9OXEp=`JnH8l+T1&Qe35]-EW2m[i;+[G#P"3i)*YSU"E#)sLCa)*m5*O^=2k1iDAX`#jfS
%=2Oi?>UuHC0:hRI;17+3L7Yh<)tm*7M/,[p#Eq:;.[3Ac$Q2dk>th%'B:XH=)\VU7C0:Q:'fs.87<(K1B%nAW:(Y)#?2O)_4u0?P
%d!u2+I-Br3kJ`,;JdeRkSJMs2$Z?L^N9Z+L_iD.K6gi2f%jnmW0kG5DSo<b]g!m!5ObG<K8d+h%cLF1!2XbXN5Ou3ufFBSp#MI/i
%].<c'o=7;e1/TWc&J\28>nt<Va`,LkYP^fb,3>KX!K"ik6"X,W]I`@89]NYffH)SBbbJWC[!W?WdUY?('%T>t]*M3hO`(6HM!i*.
%=6W2g1r#a#3dXQ9nAc)fnn^sgb<[]A^(!9IiRTl6R"V"D2Pj)_O`lB/-bna3.Fk*>cdirrcF."8T[u;>&0.A"k#]+XLG]Qfr:S%8
%^o%\OfE\6<G(/laN_4@4'Ga:\q@1.)S@Z%a%g8IOihPUeJ5]I5H.(Yf0i@`8#uDhbhP]\>=BOtKnt^/4b:)L+caEd9)B%,,fuI^9
%8NFE+#Hk,>mS2j6U%JImErNo@:Oj\]g."Km]0VXZDg[HUgRoDfC4:FXYb)jl5U15[1!ME$k@"5e22*a>&ujW(kQ'b$E@b1R!,l\Z
%j_Sn&,tQ?<CR*/^HS6&EXa,U*mGP0dQGME]_38I`X6$)!km7F=oa2Z]cY*L3ePiaJjg7eA=9Ig+TXRP.5.YV$WOk"ig+`5QfNf]%
%pHfm3DnaB(^,\sCk8S1[M44i&=U*.+18_o+)cDM@An/32"(IcuIi1n*!gbY2(>%U%N1GZ"pqch;N/GJj:'&d21dD-:d0c*u^Pi8*
%.9B`H-?1eUI=P52fkkU_[4XJVF*Ui6)!+92R"o<?a!G]f;a`fN^;A%7]='&73+.93D6J/W3;m]h3Du-3rp7Mr6is$`'s^7.)N=:H
%3VlnRlJ9+*mSBqKhe^U^W3E8:I6\!lYAXCq@MPho-A@$ND'l`.OSjPt/j?2MlP!qs7:,FA/\+'c9d>K[JM-R5K.gW;gd9[MFr#gM
%iZf+Y`#aIXI#VV4JAWJ=8gdN_[X;XHHd@FQ3kih5X#\9a[GC>XJC70V1Qn;m,=ZF`?j1W7cWAuh/nfeuTdE$*-X(9@O1&oWXl@rt
%Xd^C7P%>HWCJV\0E&s*&,>%uI?;,8!J2:Z$\)Zf*<!@%KW7<9(i-'gp;LJf5C\*hYV-gC7>6/je9_61@hU[V3.EmP#5-O=@h+CZ'
%9*l)_TQ3n7p\nefNmI'QpV>AOA;^2#fqgSd=hBb7TXk#+^OPITH>u@pL:7U\P?YW]S>3Sur*aV-.sTW`,S6._1=HRF5>02%b7<;*
%#f:27Q`aG`>OJEA]Ldf=V;+H+-)Fu\DXW4_^&sSqpBf&cqH%,aEhE[[T^XHoA-M@mW6Bl)/C[i_Hrp4t-h<1A82QF=M<nMNoAeEr
%3]F[`%KZP=2DV=DAZ`sCBPns]2:fZ>m!e:K1Q?XQQG1U]Uh2X=[tH!NG[if`U!oFNkNF'RNd^d4DtMVX+DL1tZ+#99d-G;pdtS5C
%:!PMG'nsANLtr<l8l[.<P.V/-e@6b^cP5*$8F-Z9P@+.U,7BbnQ5X"Xb?)Yfk&XGEV'f(#lT;D8M>?<Pod1R.:\pnnknb$/Xe\$D
%/mhn]j0/)#*SiDV.$U]_VEd.IBYFI"25b',MX<VgPXK5*^N:hJV)$OZ^MgSe@C?5&C)0ngidV(nnmb>-N8$E#n79&?bPRl#hK8\S
%B.gIE_4PoGZFJ%s>;sF1rQS/X.jDS.qG9'Rp4[ugpV(ondm5EOb)K]@ggf$MB2C-)SC]^GJ0V\@fjuBGg1Qkp9;'SmDodI?,oo87
%"`Jo#fCnCJD$Kcf`-<_6MA>jV]6$uYf$_cBDjqiP)4q8n`df,$38s!rVjJF$!obupr>TE)6t#d*RpO)"cHhHB6M"p*Pe<]@h%:%T
%aR/KYN>:C.(*/[f.s+$@TX<qDksQ%C&j*Sd,7<0n!LL\A%5G>q^fW)bA/\u:!5.jO4Io#\Y,$u=[uS8%O^CFGK(Zd1PL%'3-KM9l
%6BOR6TL#\V=*mB9XfA0LMtL(Y(g6si?Ct/M?M7'gF^G:Ccu!CGRB]*]%A8/%WWg9@N%/9L^NTp5DJe.0VO"<Bqmj8b=o^nET%JYV
%gg4Ot.TLj!XS#:%L0Z-j:R=#THt1J@)L>i99r2`RJ[QYGPJ_fMIB,sG"Ote2FqI;Q,>WsH&.QOJM25pP7E8?^4&.KH=J`9[qm)F,
%/f'ppKqC$W1l3\('F$tB0"(..OCA&0ZfokW:ZDe"p(3XiFa]bR1k%s-!B&a@h3R:EKZ7%0?A:[qVdj:qL$2H<Bn?2JTBaLg^)\kD
%2W3EkKLHPG`@AA&o"3gI'+WFR(`Kle"a@lP"uP[lp"C_\_0W1g"4Tc3)JXdl_#Bct/;d3%JZa[WdU%HC/cXrS$F+NF@,+?I/LCfs
%-p$=cmMq;50(`Nmr3NGKK!TUq<lM7r57@[,G`e#.-A>.#`,=O']!pn%H=(^Ro9-e`j0g6Nooi=33r-BUjs?2;W?Ei0S\%R;YaJ$=
%";8IfO8Ugf!nYBXGXjP^6+hC&rK9*m4_DVm0ZroY``g.pD\\2p$"3JXY!"OPj"U%_&LF*:E"@3WPlaEIi]bi^Uqth[>Up[1`1r%F
%md_kAp%g;7W>JYi):2/03ZFTM7cB]sc^/;jPq2$pn"WP>JmG5eO+CWO<_H[)qp*@9TUf-MgC!3"cY$XJ7NU@gjnTnuU&R"UC3[D5
%4=rn'16LA\Ufh?n11.'d!;Bi32epd+:BG4D7G;+\'b&j)Y&\a^8LStSnE`>NiT.2C!8JjOD_Y*/E_Iq'.R?buie`k5/E_(2D=5#X
%j>)dZ&O9,UF-5$eSUdU6k.9^j,GO_UB\8>DI9/5:n<30:kH2&lF0j,KnNYgiTf:U=^HZp@R)*3$cBEJ6Ba<$r810omVrHYQ)>h+N
%@.p35RFP]^$?AlGZ:?L/<g;Z^aPac4]=,0N2!j'!&bidKT5pIqRV=uVg*6?%oCPg!%"A"%$ZeX,J%l&U[3=02Oa,ML!i^u^=aQm6
%GKp''KVr%tAtkk(KP-djd@aJifL]8rk9l'Ar<g?[app4e=rHb?::cN"PcRZAQU"X!n$i8Ioac.arIpl5@Ni1O'mcG81QXcVY"JT[
%n8mXgLD)T=ieJlMU2t[n/e#YC;"ic1S4-JD7lPJ@Q!s#L?jka+m=;7@h[84XFHR*I#.tQaR.WS*9KUS3_S<L-l4/'c%cDa]83'!;
%MX(bTRmDFNQiERuY9`H]!(-*<cp:;V(kK`_1d1El.uW2`_@.Qca,d9qUR$nV\S8d'ee/V:,3WH$7a.Nd)Cc0LKod]0AZ4LZ0i9!c
%82hVaH&JBc$hC(q`(1rAM&6$G5G$(KASi3t*M4$N'Hd.NF\IT3jFMgRDC^_;;`NWZ*e;Yb7F$&Z%*-JL.KKXid/J(f$m3nWIlMoM
%Be!mI'`2nembKV%qV3-rQJ-.`Qn/>9caM)@m()V7*Lj].:E&l-$tK.J?D]k+DIG3un"c>k-dSp<UOsdb(0srVM]Jf?=u2HX$8C".
%Y@3#k1LL(&Tj6cKC2pk[4U'S)ZSY9ICeI^TeZpQJ"=7/[gY^HHl#&L`ok+ZGMAZ>h@\;JjdK=`jTEu=rY/L87h^a'a>&C_-1Yes+
%f]YJCdA%t";KjN_s,SWJ4XBNnS64l_\o[AS"8^$4a=qqZ"FTMn1L&_R+t++ATBM-bVMLmJ=V[E<>Bi5?7DF^TBSm1H@5$?oi@%n&
%I*+1XdRMc'r#;T=X):a7-YrX%&EpQO%A'Y<eu1>uhW`^.Y2;,Cg[`=!dL$db^ocFCV9uu^:U#N"6s#&cE&0!aQZTV]a+ENiAUK5b
%VT`dlql<Sd)4>.F<5s*9X-/t<`D#K[6,'hNlOTl9e+o@#TdoQiHtclhad9QUV#NR@f3[sk!So[RYlqO!V-2LRYK5HnBa\"cAmr7)
%<A"6BdOP^[rsN<)Y:NSZ"A9jgI2;f5At/Asg\<<b>sOM0Y8l2ep!0jGJ="h;$Ot,a+@FWqg]X5B5Ed8]=9(,8eJ2J$bB==\$u*ln
%*Ji+P/GakSJNJ:)X76an8]0tN;qSe+.Z`l>75,S5$7s%7khUP9U7\]Vh.dGG-MNq"ocZ-G(`$@kkc=Z'F""F7+cWtYD983^>,Zj)
%e9L94aAB]F?@1K#-0BgY@-(#P^p2$hhA`JWZI\HLcAVG_eTs2dek91Hf;k7olFjhhk+F?C+:+Mm#>JW.T4?E/BL-s>;]CVPD.#a/
%Hd0e##%cMW04k[Z_)5SJ1906_HrF"ILY&UVPS/5$lXckM[!EU_q89E^a1j#'QoWel[;>>__hU'.hW/*;-Jm<9\4O`B__p)7+gW6^
%\+oB1'0<^]$h)FGnuP_dlb1Ar0j()td!L"h_..T+4$jE;itqka"4Tns6=g:Mc,MQq@Q#O[-*"A'ol%"J_.T:_K\6G;/9hE'Kq.((
%mT0q-qL?oephje,USsEh<UjlOGAJZ[J:QIo2ab@n7/e@B"q*PTrhNk_k"^ZF,OX()^eaa]pMP1i\dcGN<&!hZ%gW[eKhppKD'7Bc
%B(P%bBjSN"]'I6sXebHNEo0$6VcG1_"Ke8^?3R",HD@'ceT(QUY^5_!-"!;dZau?ES!tN>\:-hJK;lk7Oskf];m9%p]ZEGqfj2FB
%?[p>P.b5C81dCa1fha^&h(ILu?F09&g<WN%GVT3N]T;13nu:kjMN%D;cD@Y.qlD@>L%fM0T6+WgX,o4%I,qLQ4='g$r<l-URJrGQ
%m\(/=qAR%O4]J[tFd-#>r7Y-i>]SjuCd?=I95^-qVlX^MGY#U-;eq",^jRP$X"QNS7Z4<*jbS&_M33cc")3R>@m8O:'VLKSgrY`0
%(1\lfSqe7:"^Z,N`o(WH!T*5+q4ZDK1'keQZ>[tMD6lP'K.Vk#1(`"Lq%;selQ0'-T9F(o'5O!3nQQT+3#XedLipN*r9dX/X:JIs
%eamBM=2W0eotjihXDkWd+>,#`,HDWgi<#<eG20RE`k<kQb@3-'M3TK$CMAG:XW-A@_cPG?`d+J5[G)p`j+ip]erhn!,HG0g"]huj
%#8*<F<*PR-e6B6WNN`K`*YdZLIUt]daZ@B*gn.Y<2t4O(STo%(lb0:"'0MDHG.Rfk.(&p+BOUjK5,YHi!\7_nN&]W(7uGoo.b7qk
%qah02q)[HDrD:P'Y^WlZ;]:p$W"/PVk=kk]0C*@Th7&;e;?L_0lKWTf(/\I.BXk$i-]5<";\eV0E>c@p53*g9YS+qJXK%--G2Jrc
%=@0%s2qXs`dc8lIqH+hGM4;'UV$4(m2Tj!K07=!`XBi"3@Dun>`1c(6lNq&QI*@L(XD^\)?ASh.<nH21bOaU^0UiEL@3t3^0t`lF
%JQTi/]eB!^>$-,>A'nthA$+GAC-LOD&[;Bo'#^pL5XZ9$]bIOO26ae"M0>`WeA/YJREhp\krkb%g_XE]e&9t;+8f%hX;0`kB2=Ce
%02U?3J@HZ,^Gr;*.93IQhA;Y.f%5l@p.>]Cgh.hf4Eis]iBC6)+7%;8:rW8k\@gG33fbr\<=pbB1b%FF'[c5XK'HGWm`URt/5B3H
%hgpeT'.Z=hg$Q?JlGH=uXUJ-Ec666_hVr6GC%l0q0a(V=^In%',?HN<ep.\dC+0_oIRTP2_FiLFNj;p]1u7]p[K*RYp6TUMJ('e@
%567j"<e2"2:#TMJE/:tP[mD_(&D(96nPGk4GZ?@E*f35B\HoJ:'NgdZpPm]u4!Is\[0Y<O;D-i%]rr8gMQD(<=>/FZ2AR!Xe8r;U
%`CauK<[tR!6EGhA.mV!A?NM<6SUA9X&6Gu++u;p/c0N"(;Xr7/`@>BbVh&9q.oF`A%=hlq?>.%_"L3s6HqG(c,7jg][8ISpolU##
%Dt(%[n*<d:0:f#9n"JlBa9)+e`C0Urqr"kXqe9P!s3Z;LHATTd6rReR/S)7rDa1?CRST?RLZ5^HWN.A>?_/LWI"MskMBcFS\XiHC
%fB_S,k#4gXfC4P_kOnC&YPn)Fo^::ZqDiaV,XgC*cuT=Og9:5t4^.G+d.bYXii.lMAFRRmf7*\D2h'>,RZ.K'H:/u"P(C%7l]'fs
%Xle*BD6s5iHtp("F!1k;^)1F6lhfb5Ismt(KN<uO0/]B5'3%,uGUar,4)t-sPW.5;iP[a16-g2Y=AON]BTkGppFAu$%6GW)nm+=A
%-Z`F?oeh4f='PKb]@DpfXgT8F<,/</>C3O*q'_8REk'>g2Z\jf]8E5/je(?<S:D,&$U?_JSs6Y`F%P'RRU48]HKd=6`(42<m)[ku
%c;6XthA&Jgs$"$"'E5Vh%QQn,*92\R.qA[:)!H`7.?iUdX@/1ih.pC%c;<TDq5JqQqgktDC]W4.08l<M2V-=,gTr5-HY)-)n5r<k
%KGBp?#][`HPR]Y)\s<u>)58BY7lK+eKYmG=9k;e)$u9PAFJRb0&mKlR/.hVU)s_(?n'f44r!EU.CoVQoKs&D(#1i4/%bB'N=;rd_
%/#9U=5f$:D:?cP&IF=hY6g[<n'qg[3L3AH%C9QSpO7:97).B[0^SuC-*$LXM>"sil=$0so,Vn:G\H,1U%H9<7Vbj[Tm>+$L=S_du
%Xb()beB(S]'N'Fg#q0;"8Pd/Iq31E]E^E<IMckVgSn(kL+Do3acE>h*g^im'&&SMRKN]Or!<2..phGGaps-ig^rEc+.e\ZXX_HPZ
%X]fEA6^3-i20<mar^guIUGcbD.tW)?1$E9H(H7Jqh,'=<F?8`[deOjWk=QkY9.HJ-!J<,>kK3_2]e%NlP0u$e\DdF3makp?&CFIh
%<FjXk-1pGZoK8<Ypubp$gYk3EOAJ+%.+EKs?&.q5:VW)0?$E[g#-Ml[Fj1LB1r;e+V\-oa/ksP5>c=i(IgPE[jWL7"X@k4qF%FYB
%oEu`]1eB>`B^GXsTCb)EA]4;(kLX8'P:[fn?QsQJUVZkNlT::+qkX7$7+-.nk%O%@F1ui31'2Kb)SMddP";:`8(&]M63X2"'#q+%
%Kl@T$CIYlV7Rfb=drHm*2gmT#XR24T!$1cjI!I2goX2"-;1J$HaQLnm?`u_Cm]n]m+g/48EVrUDE8Jb_#:HH-1qlren_T)WhbG+o
%93Pl_#V/V)/jZU2Ge[4aE@db,;[X[mn)6Xf'/g$T0M7%YYT@BBDM*G11oH3JPF#R[':@7/ToGZ'c8mr1\\%T/(`EX@e=gI2@TBb]
%Pb<][a%($hraj2'?\$+J(8/t<)c/VQ'MtDu=>Sr&IlNRH2C_[NUOW)^WB$dTNA.ClGZH-<n%CSa</<q&Znt'eTDa*W)[)[7[Qsl`
%T$eUUJ%Bg\m9=5ge&"2#fS5Vb9?G791G+;M-.8(W.<7KkqjP[[RZoY#8%8>0$I4XQ8I"#>m>a$'p7sq[$#X$p\YQf=]2/'qNqQ-S
%4YgI3Q&r,GdAP!JY]r<e"Uq;+hpsS<LSBHna):OInUNWInL?fG/=V9c)43]6."K;SRfDGWniQ1L)K@s8O_5sYF]P4?:)PD,eC'_D
%BA^=lP_kO9?T?JS(:s\#9suk+(EsJr='_\?;cZ8R-F(;8Qfk.qfD?pIcY_tD5^+,`%'.Ta[^3YE:e,71RO+'?Zu7-b7i$QhF&)JE
%Sk[3D<%UQnRP3cShHr2gVTOQ.W9=Oske57i(\&)#fsa#',)a:#<B-$nEne@aQ;hs,)9'6!ES]H.fXO%"-0<3(@'RK0,lR[P-eh!B
%BSA[".`_YBZu"5;M:P#hA:H9*qnuX.B"E,B.$0>37qb.)BPQ"ji,e4g*>fU>*ap2ad_7Y+F]%%0'7O\hUm7&Q'f2J?%T^s%id"Xa
%(u'O%$5p[l;&Z$gL?f>8_"OEl,S$egdjoYu]b%I<hV)Crh5Rs;h'oYP.TUlR3k!]J/>20r)on\=<I(rG4.)`YF9l-l*S7mY0aQi4
%[:`KRhl?tj9E]C&<Om)kO@oV<&J["0T];\1#j4Z+4/:<TLBg-G1[L4XM)rHb9fZd^L(sLoBKFn*+;*Tiose<CD)7e$,Q`W:`uT*p
%d6XU*d"q'S!pRXHA.1&)Y<ft'bSK>Jo'`($S!r-V<i&#I@q]Q];U=d3;of4,#51S83bHZ0k/\?g[&^G8n#[V+)St@kB37*^RTq?a
%_sXMe)i7FkfHr?q`ie\X6G4Q4`i[sVP\T[n;%S5a,5!=kduL4ufRtY<&L]s@BpcH=4j@W8Q]u*b49>]\]AuO,O8(Zo"fT34"GR+)
%fmW/R7Li*l:fRip[o^glAO:'M'/Yr,BQ;1NW]:-Sh/,rPd%(s+h_64Iou$QDk)=F*p=>0'adp\/]>LNpT"Ymn'Ucujo:um""E`V]
%MGT83/"k!C)@o`HnpidV0m94L'q$c`J+i-1+L<4M#`=`1hrq14A+]qt\b,Qhl;"&(Y#21+1.=p:@Hpml27[E3Q-$a^"2>j(h=cIM
%E/bjB(T<E<MC]3^>i9#S#,'Lj-DVRs(XV&lK$]t;dg`8$o,0H*iQQ"-\&5!A"E]lM;tr9_cl&VuKQ<)Y>QdSMh.0_KO5_c'>.5KL
%\[AfmZ`]oPgOW<_>_K4t^,&OY^:E-H3R:_Yei2EE^;"O%@Y7TOBWc))Wbt_u!bg<bY*ou)@i#qJ1[S:Z9:Wl>a-@4B3SnRtfh7^\
%J0G7<*C/`rIn_=R$_.VrhsH_Ij;S2an)5?"Q<%ll+DBpFEha3jjf"DXi9+%@Iu[ON9E,m"_AnXd*IWno;3!aWD>gE&UL?&HK6'-t
%[)#<7"urfiR`b.S[0C72\-SH/$_1u1@jlBZGcY)$J2F?W2(51ZW!;GcrMZb:?]F'lVY-^W*5*iEZ%LGo-.N<X,#.0Tj(X\+//';m
%^rThbULR2:MIrp7(1%JY*U)7HVN"uRS2<+.1<gZP!7Y72qQ?%<X[=p$QE\SEe7Rnt`mfmtgP1D4_RGkHF^W4\U/*hN[/i;4BUpS0
%eUZJ"is)U!RSo&2CMKl>O46"doMadLirT<`^2^#A9bWGdHd:,I!)7\+#D\&XDZ;t8A?C<X@*4!W'o1Am<KPP(T2u/mTP<%!0L8"Z
%%hRD\Yn`ta/X("E]#_B4eL+dN^r`NFe/](Q;)4:(q`'ag/&&C=rb])M@![$(R^IMCc$@J-\=RB`nm+eDQ;/pme$%lFi(k4N[@C$8
%X?nMrKmN"CiT5I`[<rcql/KhHI/:6u;Q'#[E^$sM/`27Y\p.[ET*A?!QL@/HFRd.e55eYK+WpR1E^'GFOD&8UkL6Wrj2,u;Qh0In
%nu3J8"prZ1"aG51:!Zolo3T$GWTu,VhP^;P1$DY5hu1<Qaa<EL/QV+-+.^E`(Ec`h,+&`LkEQgu_:-Hn'ES[prDY\]UftsbHkb,3
%K&/FfPh'$++I.>P:^<FTQC$hJ+uK-bI&9F/Tj"rU>rSXmAXG`]hP\&eLqI`#9;bQh`HrE,JhdG#g8*@MHrQ=V3pMRE#%_%pkEfjC
%KjCnTn8P_Ri4>8PdbkN<B>UglMSPnOmc6cf_?G,bbSeRkoX9/nDNn#OSW63J\6C,4:-]aSNf",r"bKX`_QmEh'@>eH?EX7"<kkTq
%\fW/jMotT>A'\7=CT(UiYBr-6oK&Xo0-mr&VoA]:]sK];Z(7a5CX\2!#(Q@k.eBUO$s@=Q*4kA<`mrHHN+s-'8`rQD,A1PIRBJ&=
%Aoo%jn0/RA);!b2%X+6'Q9;#7YW>9Cn9uFjdd38ZIHKZg)YI(U]Jgdl/LdHd>'"psWi".A-HD2m,Ur6p)Lkf*ao&!f2c2)a3<YdC
%1B.YK;hS^X,b!"Rb/(u[8[lToVMH%,PJ>8oSSY4%PXg(DRQ30JS(nn3)=hQL1Y-8B\u1(P!^M%pab<>1B!Xk!56gF9g\JN@lf@PT
%BJ"_<Cu-752pobtR?33A0KdAZca=Tf2-720kU\#_r>KjiTqf=a@'Q8b'QAmt9A1*-nakhsDc!P`gVq^=Ln6a3LSTD`$[4Fc3=Abs
%g[qCQ<2n&>h2%aT#KD?PHmpJ;%;YXt!_BXKX.ZTQ&%9qN[l;Gr>8*L%l?6@m^fZ\A`Lknf85;43<;EY"/4dS^o#uGt4ub*>Ze$S@
%^HmQr#=WQQqR!`3%FggVW=FgBkbQ-u%ZT>dqQtIh8DlNepWMU:eal1I!nZtcbL=quQ;t9=Rg\bZ)6Er`Z=Z0YHGdc,_"^Itai.bY
%d2R@S[p_FiG(da13De7I6uQHrgj\lb@b`#$.sQ%*Aq,jAdO&LV2TF95<H6t80smno_,S(X<L1Y%So:\;Vf4jpa,D/Nbe,I4*2-lq
%e..N>Bs>RRL6V=5,!]OT%`8]a1\G]7ABg&/-N7[)<),V=\;X->nX(+N#F,!(PG"sML4pq&#NQ#&c&u'M\eW&G"4BpeJKe]mZ!__>
%V#rdPmFk>$+O,\gBI,g4Y;4F;O5N]sH!7hiB<KJ59=o)4UNU4P1@Nk+fE3YqZuZJu>+):\T6@Zc]Sh9=k*)@J1/Ei:aGTT7?(!($
%fa,QBkH<%@cooD,CmB;*VO+AD:Eu_-\B;HIDbX_K.(=CCo?h\rk;"\u$/C!pV5i'[-M?r_<9g<b'R3cQ>l>2pOkX]hV'-uOpl4;m
%M_Ul'lbMFl&>0]FBZ9CQHImM3pVnZ5Yg-$+J>QYnT\0!<Y/fsBIm&D@N7Xh60rg"`Eb^FDL\bklreY!@K'5=G4hd:C#%p`/Bs,LC
%K@Zf`W=EWkqK`9Zh4nTO.sBRi!A^o$%:*3IkT"`5*cWq"X#3707PUD2UVJ]"]-0#u%9u7B@diMP]?5E>YgTVUYL1S(h&"j`5%g5k
%nl!)3im9YAKP%6ceRXdnGo8`t[/gE.YKp#jqg,Chg"3PEa`;N>V\dIhSuYEUebh_bq[p'GgqheF6.`CVLdUd#lmT:<!`s\>eg'tc
%=^RqlgJ=+Mjf-A/^S*(E6;iE3Q7I'SU:gH8q-/aINf8*%>*N[RpH5Q+:PbnTFa8I0;4]Q@?sNVU<)K5j4O$i;?Z,=cAA-I\9do7r
%n$LR4'mA;]4k#O4#a@I:X;Q[JOa7;Vki?A3SmpC6I&99"RUUp`SZ&((+C&B#nh@/"eBiad)A?-&M@r.;C`s7eWi-;F-,ZeU<4SHe
%#BYSH40a*5O'hA\q1@.d$1t=UC91eH%SdL_K(1[B%so8p8]/a(X&`$q.0omg.naC(_Q;H*S`W,XlHgB6]TM&>-r`cDE*%o%0<'1i
%]`9[)C""TEo6I0+,K&eA:m4EF(7r/e$slF&Y#TZ>VH7s8@o2MNIV>\i(LK="<kjAm=@[ZP@G-r/Co8\nK,8V;=I#^rn9/\XXNIi\
%Y$S@T+S)(HYoci%&J#d^_cPGc9<+mirFT$q`s/rVQ9=%XRTSOF]2P8I$@R4Z#1i11=;gfmC":.:9n.KDZJ[l29ZQo\TMO?R3-0#5
%V3uM?h/]@C%N;h)VW"T5?D5h%"<!YKgrCjB=S;<K;4+;07)uRnib:.g>MNrM(1e])=)QeSpsI0+RGROIZ_qnFGTQ]p7E&$\nTUXo
%9plUef!N%82is*$35j#3XOld;p$"e_!mDObf/"MWb8Y)2Rk2jtQ!T,U-?mh\c$JZ';@D5"J$Ya'#\EllE0/3mAW@e)na-\G$#_k[
%PnQ'r?`J=k]"'].K0hH'<i`H#i)`KMT2'q3fYY?I@Q)7@p1]9Kc<Jq6l9(Qb$iAGJM"5\0QGPgC[pUj&o(9d_[4o<uK)^[]I;2c1
%MNmmW'_\MW17r`,]!1W?-%/0iTCso*=UY,V(:4np3*Tg`>#h2_XJ#_(qp_A43'_lB_EO5&/o`Z6S:uB[gT0Khlr0tM]21Rms0TX,
%H(V83%&d)3qp`j@r;cB0Kmd]WW(aT[6XcT$Pi3(q`u"HKJ\")o^mqg:cQpn5/aS[QicD?L68V&fd=>n#(&"Wo_FQHNcW/Vq<n/Q`
%F0<Bo4TN_:M/o97>M/+>fkcch:hM9Eds#fX<nO=ZZ#[k$4p-4SY/3@[Ec@oP3=G`V$d-aqfV`=fm\c#ZDM:jZ&ZJQLi"LOW$h:s=
%6dD4M^=-n0<?o3,NA=_eB=R<)oQP&>*2hWP-h#ND@EdlT>Pp<O%[3]o+&4;J:6L:RT8Kn]@?M.uB(!Xgl^">BVM0W>prYb;.rii,
%$*o(i\\D9FBs28o@A?>mHLTs&q70?.S+!tkdUe$,>t0\,L7p`2er9%s48JG3/coTBdX:ECJ#^@tn,C(s"t.+^mm=FTbZ%<o+\//?
%j[75[s#YNtr8iD@d<S,VbOjnG#!kfJr]_X](oFa7F^o[rhoV5b+eg!GG-"$ERPMHne/;Q-BY?,5"f?&t!ib@=M1StGkta0j3Nc'=
%0jOeB4=Kj%^.hQ_S)L<dV43q;@VZ2:9jZRe;W;$H*<-&_q92h")AYD`0c,W$,cbK]_hpst+rl`=c/(D1s0D*Y2"eTl39!8MWg2.i
%&Zf!^>C`SLig\,tV-3mrB2#^J0$UC\4\gVdf8e&s:l+@X.)QS9!cf0aJ4W!RD=$bK@h=ab/E9XAX%c-p4J:+D5r5.W`lU'nC1$/<
%0'oskH+Y;NG-61a45:m.G1O+51=N&]a@?!Mc&L6+eB?QH3GfZM"ig4U#7nr1IT[b1f;fV*!0sHCE3n\\*#*,8l82F+b0CH6/MeaX
%p5X8Z^(BmX)ZrCR9clM$coI+@5_)VDi>Y(F0#e:\@?$&=`PM`e6ISXnB!^-mP-"bC!d"2p1`a4na1ZsNb+X%Phg+Yge!FcPlg`n[
%s3sbcajkm='k6`ldAZiW(m(_[-3G&#!BS-3Ihu@8gc5Y9F78"?Uc-@`Fipu`r`s3oMu0cO-",`h5I8D>_\0$u'/s_HQA*G>+#Okd
%I'rFD=lT`?:BULWoos2u=WuoFWdVu^Y?J?;@Q2FLTHf(rno-MhFH-E$Y9Jfqdp"U2UpDMU?V#l29s^,mhBI2XotB(V[TF7FbHpon
%,P^XG@5.+%]Q_VaE0Rb07Q!JOLT7i+X#75k<8oSBo'Z&'BKGngg0%=eGlPd"/X8'<_IrI'_/-iQ\TM04Hr^^5_b*cHja1AY($H=1
%(Oe?<mP`haHBgq.0\sVpSn?E')mD@Y$4$ei1WA]DI>;-`M5[C^Vh'uUp&-5dVeVnf&5tkc;g#S&c;kn6JX0%)nB3LCF)GFVl04OC
%_Fs_.*I)!hNbr$F$i6ZG)5aJT>?>*dhDNO=Xg9J_3L^SG8m,H->7spD_@jbPeanJgFfVR6$,\DjY10]L'dERHH%]*aGO)fHK7#4B
%IPmZ`].u%noFm*1L]%-9qt57[[7"S-dl@Wa:NNY]s-2.)EH,ZcDQKaALe&5diJ%QfnC@1]E;QJ3&(gttF:&UQerVf@;MjWF=I&Q0
%=23_MLKGdFJI9OF7/k[b7!q[$Dci7UaLQ4*cW^!l+aA@(/,ebeBU&_#(*`;`Se.>mM;i/N;Yu9WVu6P/\c666Kse+.q&^4#`!XjF
%m%es(1#28`p#@P"XEDFT7rPIDRj)h\9J'ME?IT/NM6@9BN>*q:hQCielaOLa06b'Fgf[@%A9M>O)i<R-UY[dsq%X=pof/$gPpZ1c
%o]"&R-Pc<PQ^ug:/]I*&hQkgm\K61`fg[P9V&rCY/rN>kc'cItd`N@+h(m3V2coSs/\sL<@[a1=+H]Z[gmTW+Eb1]>3Gp1@:Z8E5
%m0Da_l':W&*Mdt.H(8*R:Z<J4JC9)43I-9;g^T2/%S-]Nm?>k8h3bB=4=CFCo]\^@J0t6inpu4h#=&"#(_pue=Zm9s+hG7VQ!u+G
%/N/$N/1<;%]"/sMMJ_sIgVVW=U?iVVO";#(a&bZO]pJSJ1UTqV3;JA9_ua5j7Pb[#8D0QBG:aK!L*_[H8#.G6Wj!c=e:XnI@Ed?*
%)1".ORW]1.WHal+P^!/?]AhdN4D5%jraeUk+JFEMkou!.bD"3gHg%^-:HL)1nTZ3+_(p",=)i/>^g)go7PoAn`kA",0Ids3%&%R7
%W&a59.''<L%P;AS_OFGej62ut%$-0'UseS%92u[SP3SMLX:;1EBfSOZ?/?r3Lm1fiBa<38?CS&K'b)SYBjBn07V$*@\W-NMM,GMg
%*3ju&oY)nr!&UI/K_A&foq6H800VUPBL^N?#7PZl#P9:9)-n\5(t%QL(::b)AhC>$TfKh4d;1t??N#k?P/IH_s3Q@+VBjQ*4ea,1
%I:u3Hd+G!4nUa!,n[O`MZh9-!S*9(!7'lQBZCG,NDUC(.1g?$^-,:L)P%_9FnNp.<F[Sfqfm6'Q8KV6$W7!'DasCKR'DH0i>j&Z!
%nA=64FXLKraH,J%^8t-CIe^N-/%j6@V!`Vs'cP3$1L4&&BA<C0QPIZf_8#BC_S$Z&^ZVmhhA5m5/h<0?+&KH-VR=XN`]Z)U=Ot7S
%:pVk<cjL@[b-j*UiM#e@<bJu4O<:"hD23nCp?Gn-GX)bg.2O&J-N5!_>,bkRW#n?(ES->an8N<3A@ER/,.@fS_GkZ1*g4I_$crS:
%-XCtqT5K6ToeTitW.3QqIK\qd$P2oOV<#1>"sR4=_F+:<8K%B#$P12X5d_`=)!a<S_F+8Fm3TXkHf:[tD22lJYX_uDW1VI\Z$4p0
%S3X!B%_beBS`dNP;#dsk^&56i/j.XM#8a6JcSE$":u<AO:V/g]_F+:V%ZfX,Pm\,qTkK0&%__@.)[b)GAqKcS/j.X=_D1]I(EVk.
%jbkn]`![+M8qU]a*=CZWW>?UJfAljILDP;MVAsm?U&L(L6jfH-iM$6fL[sPP_M*dA.GgS7HhrGO8_r,20-k1PSTNhara)"7l['`-
%M'WsUiO2)e>MnQq4Of.,@IB`(;pQDni9r*W\`A@n]C#*L;A*1%_F+:XB%>Df@kKmn8bW2hfnISrqF=h9W2A.be"alib)p7Gk&NY]
%rln"N*pW3"9@=GJ]C8WB\=0aPW2ZqFiShW7fZ.9BW!Yuf:9UEF4Of.,Tm+Gnre6,_>u<!d2J9Si:j>A#[_iJp>/D.04EToGG'Jg:
%e%P6IhtU(/[%f69eEU0*%*)(6/j)6F3b\N06[^@bH_0356[]4;ih1W*O"Lm-MU)/.%o4V(Qeuu-UQK*8*-^A8ZLCJ8gS$`,q7uYO
%^$niWHVC<f::fpk5D`!u&qA&XLPiW>gifVkZm.1c4>PK5k_4ehIF$@p4;97j<Gsr]1.?3__F%&+OCm@AIc7!7`<b#J=Y;fnTqp"S
%iLr5)rUeJN00IbVeKntt$l9tR,228t*qHY:IbWh1`QF;Z*pW%uod')Q/j.Y8'i<Q(cWJ2#51td9_)Yi<.OVPpBB7f=LuDa@p3bJM
%#TMk%bDRd,M?k']1i`EUqdpub!77/J;O4STk31`fcmBWFY!nL']N&'f#P2c+?E7pEGg3s+_9]4mfBS:>1!CZ'9g4&M*S-][,\XU+
%M5&P.DEV1&GjF47]81+UaZCj:I]cE47,_Pf+H!EjROEW6QALc;pI*LUfls1ir\fG)\Tb;BU315^&Zr69Q?`BHN//;IC.c.ga^=%=
%;nXMa;hI4&fpLBIc`OB<Hr[g0inO-J6[U8-:54&`g)2g?).qO/XhsGagNW@+P9'N%p#qF>_R$g#lXhng\)'>^DlAJeDl9(+05p7=
%onr8UD,g#j_>`8J7k`WIU"A*Q2XSW,"<DXnFc#fIrDE&RlF%cg/aaf6_"1`tfr+kI0tVp%Sq)-;=Bb:\S1S2NpEKA\]-%bn[i':2
%h2-eDY"C?8%PV90nU9kVVRlbGh7(9EGb%AOM.6@i8<g:.9nnYAN_jSn:p/MqhtatLWm47B+^$5kp_id8I1(P:]%B*S)6Xfq)("`0
%P,"bUNPS%tlS7XqNX@(;T>_h`3>@4[nJ.gjqq$kYiU(!h]&,"8Eso/lD-FW%>7XUa$1B,;J2`J-?jA!Ed:4,NhPR&]^,!lSS^#Yj
%?[M4Rk@Re;PUdL0X^*SEMI4[')HbhO&@=j.Ts+QHq=g-j]2m&##7J<C3KY:2gP&E5GdH?1#*.WT6=gt970Y6s"2B0/=&)*Zi%I:Q
%9u"=0dOE'TI0<G$RquunpQL7p)0?-ir?OiB8">&?GDQjO68+qg+/D'`!C2:/!L6_^o$<1WnKjjAH>3@ESIcl6nX&613*)pkFXc\n
%abO[5&UUM@'qZXj)uNb2@l<3u2$eH$SNCd2>Ah:/B*n]a!>2YtE<)Ff2f.ISIj-E4[Ghqo%5ba@PC]@l51BpFj9*+[&Q!q?i6M[X
%m9mGT<.!`EF6L:13K`2ipq%7tRfH0C]]HA@)a5<;+<(bXDs<j7S=>7kNU.j8'pWa8:`kRga^&/*B+!Q\q%6j8:k7[r\Bfg62uJ%>
%cXi\b\)4`1UpeCP1TOTa^7\ZQ^:S]YTq0*H/:Ca314\37!J0(@V:.T+H\CYLK@T6kK&</IOBru1;WPcgqNijAoEimZjhfb?="p!S
%-pn$^"g!ufTMO?:%jiI,Jrhl7r:=PC%%!&`%\n4>!!(>)n>H8.mZ-VY]MAji)5,Bi4fA'fP@1X\h8A@P(?.g4+g*)*=M>4PJ-4Zf
%APZQ0p0;Rgmu$*p,(#gjD[mn+lp1:2iop#cZIRu/[8gaunnqrT$/BYDLa0/6NQ:DFV*Jh6[Hde/%*L9m8=DgLiSQ\h[.rAG",7En
%VJO^G1b<Po4#-VkmD%j8psWND8]*D,C$R-U!@W+Ra=g!rjI^S'54%R\4E3:mh7s:J<7M%/J4gquQoB^`nA-nG'4Ht3SW#NS+pkI1
%jIMe/F:F-mkcMYJe:@IU]TdKpo?9`dY<Wd6Tg9,+)DtD,c=AC$)oaMuU]I&M\:d./nb'55AX%3Vr*03,!q]ToiklFJN\(laO'k2R
%;'kGB;j-te4?S2V;5+-#mrFOA9pQN)HLVg1<gV1QH^"`0;%+=hOK]ASnXd;LNX45p#S=jmSBXF)3IE))[#kmGRD8uRa\%fi]NFV5
%+5DQpE&0F:;[@_7d&p'*AoWZSdU,)OT$=/W4>#N\W5\XJFh_1e`NoCek]o9^3CgKg4%4F(e5uGn6On$>@Dp>o([npe@FIj]=&"!=
%5^S!k_XKnQ@)-B^'<70cM0,G-!J#n.,7LA?r`LY?j1NaNDNKe0"Hg;>O/&BCgD*R;"Z'Q[X*1fp-*$QC)Y"2;C%!M?otALd()sO&
%0dM/lLQuZ56VpOVDZUg.Fe6`?H%QHUSroI<VI>(f;H<a=I!JBHh^Y79iTLQqPo\tOH5(f3,i+1WRH]G-cDDQ-VXa2Xk-E-7>gP's
%$=,@n(ilBn^c$OdjME3N##Ci)]aS@i#".=F];3M"#N4mtd+3qt5-u#*c-]**>XW^RG:2>^/[B=P8L/&<-M73ramE9"@-C7f`-YXe
%?nFct,RpW$!AggF=LY)=1<Dg/,JhljpaSBnrjp7`rNj<c:Cb9&MKI21=eaV%H464c+%.(Q);=6DQMJ%f+b/=/K<[[rH)q(1IYIa,
%A>;haYLB-?e3mt,#\m&X!gQQt_V+A$6]>BbFVI>DP7c4CEKr(<0/Ik4a7\;[3Uso;a[(>S"q93/.-E?^UV7i,mPQeVARZjFGmNKP
%;Julk8g%Q2Uu9R)L+3<iPJm6APTi9`pCor=Ti*7d%YUL[X%X"q$=K/l1EY,<_aq:R7[Y8mdLm1`hf$!Rf5Qode=_BR4a_o2aTDGs
%cLpXVi/X)M+N\Z8gf0;1`35?-^jgL1AC4p)VP%&$Ij9[dXL?Ke-s:3H\'&%='"n%IL$`5XB2`4U:+61hXIoROc<[=THl<t37o>:K
%2^#7Uo\8J=10#Mf2lf'YgoXj[6@R<Bp9Ieb!$LLKOC&$]dqNDdaA0W,Ae%t"$s<2<eoY<3[d\;&%G5RU8RQl,4^_H@367/0UU$F,
%+9(Ykr<f2?!cJp*D.V*\A@LSb-E,%]&<$>u__CN5@H3sK2s<mK'p9[+AJ^(XKr8JS\RUr>mspT>\mN:aJ^9jHeGCWWC9Ri4!K14*
%A8##kh!D*RWtirJOF7B5F7IE\Z$&qH8EI32Hk;-*[&gS\KZM<.^<<-]'HI9XI9mV"'Y:VISu$soOCqe'o@!gdm+r[PHZF5laQ_WK
%d,CN%%!XhO8ONfB2>9#onO2lgc<^TZNCX2rct[ZA>taCCb5JK>)T@hO0G-:G>au@$M[C$r)?h.#+Uu:,Lc"66*N0umOr=0AIs7u0
%IfU,^7L,>tpKaQs4L=HCK,M1PB&*!IK_8Qc:mqA0ML`;Tic#_9!1,#4]Pbs/E9j\9rFNf**hH:8ime:L02Gjj^/G4;!ViLco>lIo
%C948i.tC)*#&+-n*WV7bhiKsLSU4UR"U.Za;2'"iYjk9Z$D<Nt0KUL#Y=9mMCa!m%8qDC-4qf^b83]-T>UTBIL)b_N_,hH.JUiLa
%KK,J\(!0&)*mtHOFOl8'iW4_9`'jmWYa;1i:=dq`&t?aZ31KjAMb?\!c4$&4ECi,ad4PBt!m'i\jtsF"l8QU,@OG,8c*(ZBK*O^k
%W%$[^dfVTs!%BqQ:S##hr;fhh\fAApcabb=-5d03?r4lN+Gl8Y4N>=dmt?u,MN]eAX[`fBG7%P^,u(@B4U26Ib!5sk.;9JJ-UtO$
%3nlVEgPM87T+coHcUHQ:#=5h0mp*<QY"41t/rTDOSu:qsbIh%j:I/V\TbM];./,F:*<Ej3')l#^Q\,T;khp(2R<Z7JHN2SAjqe<f
%1`PCf<:G,SjFIudhC[RaJSl'bmCE[CY4r(12TaCJ"5:.KIR!L@bOmVY3q1^*iIfF-#N*<[$9P<9a&o]JbWP%Eo<jI`"h^kI1>omY
%5sFCJ[IYifk`,B*fI>ap"a:d2K/A;ZZP:e#N=8>6fbTdMGYbMZ(P_0@L-._RrAQ1)p5YXYFr,2?)]/88ihNt^(C]Bh(R"D*""0Vj
%;1bn%DdaiYK.!*ElK3,Pi=Rs/JBcc'P+LPrOn@`23?dIIjYfNg+K=gP$#RsZp*-h=0DB/3#X.+nTP(NMG6]oZ1JTVUnN4#r8]8F"
%g]=%5/B3N]B7R%_E8&WdlSh(WNEg&Qf[=a-`UD_?i"V`LmI8LSECYt/'*m$UgEu40qfln>B/1>nT"G@=K[V%d8&#%0m#Z^?fk_n)
%^VH1Q]l=@#]en"L6@2p`1n;/JPV`4>1Pn^Ll)?nFa[,AU"h+`P=@6VN*(BuA\>hb-)aHBXX$fhBM-,W,31f&$:+D?F"_qF_]]"Am
%:ohHhIi<4=I_/I/J?[9/L@2Nl'YY_7JAMm7Up(6oqMY5K.*s9`r4u'`j"l$261S\9%]2'k(64F`\d7Jpb?(o1%P9;B54cmV71?q@
%lf:K.F3Q;ncJ4DK^n!O>2Vl5C%XkK(gj/PNIF%O(F)/5UcL>8iHAG5BieE[47>JCG<$^]]Q?.!M>24/[r>V-o!>jk@091Ak%\Fj9
%'(2;WkFq:,Egm#c9t6g6RJ:<(IkE&T_):r"m@.`-g^A"(YO`@GC?tL@(n]MSU[!6_Y;4>"<C!9-@RE=@5>2]eicLlD;]*f0@hM],
%DdV6&p%'_.m;3urhDW63oQ?=\`\JtSH0D0o!#imu5<u<Xn&V?n#bj[=;]b"u+48k/.4jW4h838AGQsp0E3&gb!RKW&VZX@\2?^u$
%!B4X8K'5Zq_3],Mi/SX9H=`-,]!")o=4rGVj]<1287$Y[:_MW2(/nX$rfRrTa'MN@,:n8TWUGUt#2n8d?g6.0^Rt\]318o!WM5LN
%mgAX-`C#<!9KIII'CY_i`<2&%QBq!(b8Mlu!>MC$hOc>rh*-,S<^[^ZY#%5L<.@pLdX-&+-AU2(IhEsPSjJ$Z;ktpDE:sAf2o#YE
%UlG$!VbTr@_Afs6ch=h#E2)7AUOW&&,&VuCq+'9u0j:l-DKr3pAFnQc5Ur'KpFB"91h[]Nhgp&"3"ZGtiqE6;JABs!1?:-+LZ_)h
%GkcZmH5q>Gp'AS^=5sDp=it$!L'/HY+C[M\.SqAGo7e?`C2h-.f7DHC,u2)1;J5d3,'fX&.Xat&>bgg69/*^iN,8=!@^k`b"l0T0
%[8+EI<J'RPHdWf95FO>B=r'E'qTZ^g_;(,2O\RZq6gOlH499X]nC/ZJXP&kp?eO-d@'^/NVTAH_52akH_HgEsI<]RIm7@anS@ndB
%n@qBM"F9_`j=.;Wipa;X_.'@;,[\>[+'u/mF18ft7Q$"GNC4RMmR+Q&,r*M'!Ol1RSpbYk=ft*.8d@/?m*27__JpQ`GM/EQYh;sX
%&j.#$J@UI]aqr(`k(=Dj.*td7.tD"6=8^OP4/OJUJ.?sZDbpGK3roLh"M@TVnB[9."Qf7[6RZLkf=;(;-Y7NH;(Rf#fX!gJYZ73:
%%CG:2W?aaiTMoHd%=F\5b_04fp9CXV_Bm+f5L[c7"`3V4g/qr<:TuTV_8rq@XI]DF@]E'r_uT5GAkW00lGRbb20j-b5WI*$<58&+
%dG;uDq2/J!1BJmAZ7Xu^??GTs%ta#tc_TE=m5U.Lb,<R[X)'1Cbgl9W9N7&$r6h*6W8!iAoW>oCg!I0Q9p\'$#!Z@e@:t#m/\sW^
%6O3N,^0,<h$ACD$eC"n^SO2.+7#=(504I9]57HdaH'7%@3Db+G0KT+7YQs%:QZs(dbH<7QAW*,M+L;A\cg$a3jEi)La%1O]b"Z8H
%"I!@V>lWfpTIN!q9Mt>Q<*_"U/HbTkS]G&$[X_je`=`6TA>37b3:Rb5ShI'D%RS0Vn:$:i'4'sGaXod`n)&)@G*&#:Dhbo.#Xa,p
%-P^+gbQ\47f&97BVSF9ldX3@ff$Qnpbu7F^+gBkrrU<nm2"(V`iW1>5JiBuK:YI=CZ7$jYY(9t*T<cP[\j2%u9DkkL0lfC!EQ03I
%cL"M&%-:GU$(24P*1XGrk8U+Z&Y<o@"#Ac;'/rduD,Qf')&(C7,]$3aaI%e'Lr/<LJ;f=u%'S5W$-8Ki`c).38HB\Bd?k=@o(o*_
%1*5]HiuG""?7d&tL!?Rt)&(C7'Xg(X+CcT6K,FI'J.,fS"J[]eSrlKPGT%b4]bcb:TY)rVJ.,9!cZ(Za=6=B$*d5j[H'fB_7ICrP
%Zr7&^-7$mUIbgGL+L;M]mIeE"IR"+8NpC^M(UGj0!2(,F4']6=1dJakf3S60H)I%u-u?A2_'Aq'Wq5D<BYJ!(-1f[)jNtLi$Gcau
%AoIaH`:Im3$,HW`@;4j3A6p?!5jqa&/oe'N8!e1mS.l<c\V9Vkhj'U=2+IbQqn'<?\MXe3p^+/YQf0&`P!kV^ke_<?Ok'Z#pK9"G
%5&I-8mU2^s/=T0OM?8s6\&BcI&!`4VE!u)i)X6tTO8r0W\fh*bp,!j(kkbkt$1O8*h]*7?P%"CIO8rYJnMc4+KJQR+hN37=+.DXb
%nFu..^c]3U80[e]Z/ZG2UV<_apYTGV,82*(^u&k&McG"7\'dK!U6VlPM%:j=!)OmB;rXQ;](D0$0Y&eY/"L^H2gM^q$V)Mt).L.l
%T[u^:"(hVt_%mC5N39LOoD45mKaUo\XAju6LGQpg2$8gdCj3<iULp0]hig7!?r<+;dQN1<#o5Ct,29srO'khK.MmF:1n?1"A5X_j
%#R8cjJcuq/BaC")=B4g6@/<c@d7D)&,A.9<lGj_p`,c/Z$T%(g(qGWke&.,2N):iB71SUR&lFQ_E)hQK$r)ae"pg0W+R+_Y1/M#9
%nKAZQKMa:J$5EHFA1&1t;9ps>Pa9+\TDW6865bGIcXmIlQ[-?CLb*#9oB>,,fuW.V?gii(Ma%UGT\uQtaJ'4g4ta?Y2R4aSIQ0I"
%BK!.%d$t_R1`KTIftT6T>hnqN*!MClpB-7a**e0Pk>a2%Ett;Edrd>hhR'(*/W`Xfd;1OGZTogbWnCjuAjN1Pb\S.N$F>F6?a^8n
%?RZhZN@Sf\'HQO0ikS'AeYL#MYpf([>6M)GRthpt&ZQC5!-&eCA>%ErJ`9A$W;J%ZerMA&k2<M\7>&Z*9_G-'5In:Oht,daU=mU3
%B+#[u>VmC&j@/6o_*t\m7?e+(HuRJLA5R;cNsdQAm`X-S6l#rI:_m:]p4A2HJ(L$$U=q0\d!9\EK8LKC8JVQO'b:X$W^I(d`YB!k
%.\a/<H<_%pGsTR<Qc9b/o&W>4ZBT.?A><uI\4(3PmZ/-'1.L-T:K#JL$Af"0"1,WAQc_N:lIYd$,$4%N=?sS^B[lYa$70.-D*FD%
%SD+cT$RH.,CRY,$B?BOm2RJS&p%RQk8_kf_7#er+[gSi@e%>Ungb-eP>^D`VDO:CEgb+O4^!j,<+/[['g`!;dP2!sX)tDV=PM68f
%M!83CL2XJ@]=<4hSDJs?]7e?]hj*7)]UON'aXnbZi"F@V\Qu@?_*8r1deJn)5)(SZQ@NF&H#F4LH=h=**NFH@[gO*.\%p\na`80G
%naRAnl(_F5gqf2(q#9>0&T?X7mIWau-c]G1BZMU_EcSerau&.?bK98i]KD0?/gn\DA8]o2l03:0.:!4^3)odj%(I$lmQ`BsZ8g>_
%3ntt>2t@K"MTgB7q#2s2I8o#Onn*FME$XE-%`k38!9qT_Eki)$q,@F++hTg8^1Qu2c%<7gYh;>Wr3O3fa6a2*2ioOZ#PA6n3gNQ*
%[p*XKCVi1P8f&K/J]dU[N"0Ua8t/A9(60P#b#ES:f0+;&+<UfJWGoc/Jt.(!Vce15i<N:9!.N+R@s>a=&HdG?0lkY<U%l]<g*&p$
%3HJ"K\EGg_>h"Q\nd*:H:'r=eU*Em]rDsh@":EEX^%'H,,+m(O%i;LDW9#p&e40dX7F$P8G9Krgd-ObM\'t4A82qW]=bCm;6.8*]
%2-/Wo:i-fSh%'qd;'?,kUW=N)X(Ijm4m-YQZpS]"?Sb-uN,=Taq;Wg1q6b8KO)[TsCa47RTF8L%4Ct!(gB,D`ck"jmQZJTr)8N4p
%@Mno"H9;(gD>rkRAp<;o5:2iE:B,UJq/m>J&%)mGP=Vo`\\1q*hn1tZ0>`]`>ti=X0o6;*h]/$("cij=\^ZXdP+;1jQf#s0P[e45
%#4`^G6L'Br;`9D!q5rG3&k)NdW'lr#m<+-\VS6t=&HX&=+Pe$cimMW`VH@8j,9.4e(mWhl'$1S/oO(WAWpDVLbl&ilEUKqt+B+^C
%4Sp\(R;=J_M@3B[<coW7j#gO43%j.25AmU3@_7\1-+^^ur(cbG4.t4NE-b<aaLuqo`;QIM343qllpO^GU*sIh"hGDV0e\l@fGNca
%S5.h1^qrRY)!;M-JK5`/!#_;d$*+CNit^M.df^NCb=ZB'mr9d[Sqp7Aeh"%#Xt'iKj`Vt=EY%Gl5\B]r&!NST.&XOu7h4Erk`HL=
%<`Ns.TEH+2XDm^8iiJU^!)5*3X_k&<Pp<$<.DbIASh%Xl1glA>*CBL%llWjZR=jM@CT!LJ.cXWmOl5#&V$]Rm.+TdW=n?ZjMii)W
%q9T,P1qVKb7a<6K7KAMCMU6:"n>cm"aFCo(qg>J::Mf?Z-/Kt`.&t#-W%]Qc,KmlgQS[o^Y#,;E"G-VG,!a7j(X#V^*,0gCA9plo
%1j9A!of=0H_*;Z"c%g(K[G<^3i7H*pM73tB7tSPJZ5n,;>L1F>FE\;BF1E7lgJ@QQ\@(*I9pU)R?-<o@AD3a1[p6$+S7]=#9ePd%
%aj"keBcOZD`:ms\o?Y!4,q,2[(]V(/nU:]iO_9(2:jrTi?]I=P!i]ff$9tcqFaPctlcMa:"MWqqJMV%GJNPX"aZCtZ^-`rmVnUBr
%N#Gn7mPWl&.jc;\4h5cV6(o]H&hGFa.d@HDli5eC[2gh2qgs<=B$'M%"n)90nC=a2g9slBGkeu(UEu=fB3Oa'Vn0'Ke"\hPr6BH0
%Ii-If%iFZRH<6")_8-s.$j6tH0cM*B)i*q8-3c@U?hUsIh5.-7\t?5FHgpI2+X&Z9W4USpWF#"mP$7k]g+s9qiPK<B<Acd3E`h:g
%eE<t0U2+*VDqL'(-gZig@S"QrYqf*1l+*+>ch]h(Er*8+GN&H]n`,U#cc,2.ar`+8M"gWsZ`3qZG8rd;h&eAE48p[6q=NKCZ,Xu.
%"243DgHAp9r@^?]=2k48(iEW+j[6>-^-]O^=[9%;p&6t]@\nR:2AuKNOC,[=hMWI_j&/gST0Jj_n:.1_Ir_^gkmd[Erd+6cA:qSL
%<QC:;`^+ilkR;ZY$Ko%ekq-J>SpaJoo%bW+o'%[aM4Dh/lfYSII-sFCl*PoB-MX4?$9@'!]_:n$+)_$^=Utf7^%+taq%*N')>_6f
%E[&OhE[Kjn0#QA%s7Q04LZ,F$^UfB7XBA1l?9nV>K$3-N\X1c["oZ1lTROmX(Z2n'qONO_s%6&Ij8f5,?@06c9TT#"/E$.!$kBLC
%7IYC@ppY6nkqQ!.JU\%43;rFWd3sF9,6Rnu<K[bT`jGpH5%7-PVVlKTlNhCBF(sY_>l$X6EfJYp]C!C6ptB!_\*h7sT'.[!4.grj
%&Hqtdqur[+j>-LKYCD.'i1JH;Ab^,>qa!&R5,?Hsad2mDHBru-"iL7tSs/cn6T`]Vei5C>k/"d(M)4F8qI(s8?Ut]Cd6tJ".oXUF
%h>b(UWYiD@,&Bfn8L=#>q,bk2TjQ^5l"*pLZ,2S:75pco6CRb:G4icEo,l]4\*X^0c[WJ(qAoIN`VC&%e9g>)o'%^ShgTtI^0S*+
%P6Dllj4@o0Mc[[D`ZJQTs):3Y[6JWQ#gUT0pA!I-p)dPPMOb;Cp3f0m&,u&9If4B&q7$**a5DCr8'0Q^?%#)9bCu"'g(A%j[ibZ7
%]u6t:ann;-"#KqUh"T*l?grIgQH+K\11:V8#=VolYRWmi`b(bArRi:e]DJd;rpu]LY&fK[.f81-Oq@X1c@9g+c)9HCF46nNcCO77
%T3d$5E%?b+roG*6r9jIVDVk=JZ40%m@m\L3Jc4[L(f2,GpcM:25l/kTc^,H[$mlW">5??7Rc4&gh>H$B,5pe"Y;m\3ZGlGA5=PGu
%R;r,\miUI%]pj&c>Bb<5gpBKAS'HJOAfpRNlp.V@EW3k@++>SLit)128+TK(aNDi0o_2:^Vd/0U$EE23^51eg`'8YFhJMuER'sVT
%CY.YaVn/'fGN&5F0lWK3pZ'51!Lo!0H$RBhkf9l;+Q*4g]GrV!!am!5HXt1`oZ5?9Vcd_]k)\StZ#Cs[nsA1pbW(&Qs5#\Y^ZJ9Y
%*aJ'+TV'JNs/epqrq,=ta80Cj>TD1:pOCuua2=tWipX&Kh,a)4*CG=opYU7EU`a_Z+<M*6Gs34>kolWgs822YQg1m;>s;Tc;X+36
%IJ1k`hW%BQIt.LqLW:3k?MaWJ9:%8<oDXZ'G9:+=I.,qTp\t'Q/!',ro&/BBT9%kh^3'1j]@X2;q9$B4O7(jd^*$s*SV#Vp_i(c4
%T4Gq5eT0c`pAPREr9%^2h7iHNqod_!V_c='hL\`1ZQ.#8]nmuMg<1<3r]U5IDr9r$0%c/M07<EBQ'X/8O$_IOF4SVV8*d-A2p6iC
%DdN@reOT;UkjH1!Nj<BeoAp?EIf-*f5&<Hs]mT>3Qb0;ZDPmI(hW+W]drB9Qe[I0GFbeMi_>+P<4(](CZT7=;\W0f4M4#_4Z\YI!
%Er<ltZ`&K;"Wt'qAD=?$csmiPqE^/!]\m98LV<UPO'+T6b7pRhbTadiP=gP#o7Y(]hssa%/+Uf>ilf!M_\G''q#qkCa=$I#,kPOV
%<ua`t^<jb4q1ZGXI$'17o#ZbM"^^!CML;_h9%^e<_\G26^MD.3EOb#e?38lfKXqu.4\Oui#77[/4Pa.,YFjbrTd(NaE4WB/c>o!X
%ZV@>Z91VSQGn(IU1ECr+/>9Bi,fCJ\l-9o&b<\Hb]][bCc4W1]5sk42e".k-Q@jjNp`tPlSL&BDK7nL*SF.r%ZQ(64o^#)#4O6;[
%)GR\f4S^P%;g.0=K7s*13V<tHc[1\md<)D:YFHn\Q@jjN<X1NFodlfCF@,Ph:32`J=Ul'*3lS'j(XAX^SNm&q+UpN'i?#abYaNfM
%3m0fU7jjk-FRiR$B/rNHaNhBme['qSEf^hqk5"H8C^17eSTq0_M.[-cjWL8Gc*XAiT5tnOFS,4s]B6GQc>o#.bd?P;qklYLkig-d
%.W*KE3m0fUoU+fgO_6aHW6_hLSL&BDK7o8VrD]WV3CmhaUn;[ncm_%ri^#nd9)<7/jLGd6R[!HJSL&C3K7rkBfm.?:EH,?V4Lp:o
%qW-L#@DT_Ti?FV*N,hCbZ#T/+BPa_ePbMcmF7]u'nNn;gMU8m/NRu/JjXg<,:/;/EXN1?g-3!>W2ub4"nMfoqd*^Xp$h!!2ljp;%
%fte'bT!K!VLN<`X]NYaeICPdHE<!'/ljn/jCdV4_>r`;SqL;Upm,L)i7UD@63'NqoA+0Hm#!V+g7RqpoQl!Q0-2<QDpOIkqp7$-4
%V`<D.YP2)Troc)1591]ar%>YQp8cinpsWMeJg7;cX(-5.htc1Dr`/B5kN:B&RC0*:b522irH%![O_SfEZRU>5q]"_T]?niQUSXrF
%*qr6kVmG"Sq'C(hJ$W@jPA9^R1$.dUd`7^??gk]Y_5s+b?C#='Q`gX(osZZt_YIR,ra9`F$Zj,KK=;s,^>);]lK0t-)`*4!G<QVu
%q9&\p+@#hqof##UjLt/oDokf6I`=OV"K-.OK3R3fEC*%&[D1RnQf6LKTCn\/^RbDin'_u\)<T;qn*g7n@TLTq_JegYDK<PR'_Ku7
%[Z4[?Jb7OO[X*i($_k*7\(1/r$_k+:2f;9!g*u9gT+Ikd:+cTF\))IVG7HqOI#aj=pO<*q[q<C@DuK4_rU1h7^]!VJ1^Equs2WMO
%pigSq4tO_tBDNnV]hV2n<Gm6OcQ?ML[rUf_ji9Smq>S[ch`lF3qshF^hdGfOO03tPmE4r<a1_-tCAn%i=/f!`(,`!SS`fe"/bJ\d
%d7`p&1B-ss^Q)WHm2'm*$@_r4rj?h>T1HZK[2.N&TOWk-Ldo(iFR?i(?4+`&U7_F)m!%Rd?cR.&o'o5j?iSXsh`[\<F?@7I?#e.3
%Vs8ITfAd+Okf;VN@=)Bj(K0g>/F?]`Rs''YQ46f;0t:eS[@LOU)Ja4l;[@.iluM`<NMTo_Q??84hR-0<pT(pk2I13;(J@l<$P#Pg
%_AWfoRU]Q3BpY@E?tJMfZA.YI`Q](M/m#g-]\g\ml5C&[PP#$*g=<Y"RkMCD[s)&"1fg)=gTK*"qhIEm+m/Gr"3lae2sp1]`OLA7
%..h5kVVSONFYe3gmHFCh]BFH3g%79olH?KD2X`t*lh?3HfDK5_ic<\<jCk.8%2O-DD6?TQ=6nud.FYc^oHi%YY?Phr/^^boO_G,U
%/J`N7DP!?&>h2HCO'=QF.fHjuW/S^$?>#tAh3']!:r4i%Slt&*q.52T?&WRc`X2,:@!UqYVUL4+`G]Wc9<G!a]1,\oY,<3:k]0o%
%\q]#R[MUU(obc2a$_)Jp1n8.5O4ncRXHt/b=k]s9-.8mI$m#_]\e,?DU%-nhJqXtDEgo^9TnQ3j)_JF#2H\aOk75Tc\&:.'Fu@jq
%Q-1e8[CD/@[aqVsSL;OcI]_gIZ?s?#QYCK;2,m/&`(dRleqq^'bWG["CDds\C)oQZf?36!5"!e`2+FU>DBPD7EBTRXHgF@22HVs*
%8Y?f!b50@ROtCB"U.IuDZB'-f2>XOgrO*unRU8"3Ul\3,CQ):hEU1Z.d.2Y7j[cEtYJ4n4U`/5rBZ9%(R+M!e&m!+d=Aml7N=q5-
%ek'+)f9.92%Nc!4=4bd3E<?'2@kGXD@iET$[iVYF;r2BR<Mh2ef(qIke8oDn&p'bUb8Uk2Ie,9clG^>@IAG.[9Xj[r,-eVA[V87K
%G5GO->KO8^`mT#6<LO/g%bDOlK\"`G$=YNoc*cZKE/KoSKT0XjD/is'7*)O=/tc"PMf*Ai7'a?5jr2@E`GN1VZE'e2`lRA<d9hqi
%)-nk4^';]^je,m+6Y(%-6o)?p.c%II,Tt6E#fr+]/S),g0f$>WHG(UA?(l,>!qDi5=?S>Nkf`CO:TMg-4FUPYa@+J!Qh;TEm+P'k
%7!;Y2CQV9$FXt6u.$=>cf!c#(dC!\XaQts4gOKlq)m#3J[`)oO;BJsW$*.5fcR!;5R6ZV1/fMOuTKn%homi2ZGjUFWI*e3`@Nj-T
%#;fd7LL^$?i(E(O8t$ZEdX;W/bWLssN^:Rr)-gY=@%eGeTU;VKK-u.75Z*8XM+`#;UHUJ)9!r/>:?P$SUub6B?Z$1t!%!R]*MQe5
%\g_-?e)L+[4=7t!UL'+F86%`>"/#*#Os[U$e[Q9IWfXNgNlMKu9;sTF83W/-Oul3EcT7-j=b:Rt(Z0oo#>)R[8[n06$^l52+L2P_
%=9P]^*13!:6=$VndRn6l/a7DEhNIi(J9_Hpm!CtU^m##fN.h5ZLBA#[N#6_9&p,Y7RM?Q#-UE[dV1WkeKruc1PB2l0)a49cS.+e=
%jSZ`=0dOhR2N]%*Z.,BT2^Vuj8`@W&q^pdJKERBk\B-=:8YlU"KJ0PT!Qi93Mk.q'BI"re82cdOE6pH9=o(nM9J-l7E'mOj&#+28
%K1@#9r"])'rLRO;["=Qn+-I$P*#]>j$4j)]/TteIlp/-@$'jA/T*]d;]jRPKmk.=OkduW6M#p0;o\f&`RmDu!`MX$-hM6i97"9[r
%f`qm<3>sIB;YT2$E/-R,SFht6Rlg\^-&k.6T@cFB-jc6hQQf/W56`)HLBirm8(MqR&U?8hTgoSNRHmY(7Go&Z'bZH#2O+FT9dj1O
%rUT<d7#EZa>@3Z^h9[MnOG8""]h97/MB3\hVJXbEPV1XYa3YnO0*4I134,LMQP?5%"BV$s&=Qmu%g];8]$PsmFh&KHRtKr/*Cn+;
%2@qb`KCkXa9</Ja?/64=WUuMK)5;_Za?@XMp'NF36!Bq>/.E3rAEe2tD$L59h(hO\W[UI@?TXWc+p';@$igKIQPZs6=cZX&i8PWM
%$*,-M+MK.S/k6!O5DF8\[>%A10]mGK*ou8,7-h<5D$^Ep0-)U%@?!K?Jqn5MUX,c$-83X`Lh4b;C3FlQ(h1k$C`o]4##k-en5,rO
%8`o/pPOJeY2Z@Rsk%GbX^"U(o&hFr'UKej0s&1M_X(8&/YK@I\N&"'`I@K"I\Dd%*ISZQrnnaK9N<blcIVWtHlb5V0h*Yq`NsP)B
%3"c4.HB8/1$\Q07$@?c?4a2\b]U*aM'@JT@%4lQ$2Ip]n_4^b.OAGXlYU7'-0ANSU1'-TsFIr>&DAGCK_C1Z-i&Q=A=lJJ"8:q^P
%9D99(CDK>A2qYrP#"Wf?*^hM;P@B'eRpeSM`=[8&@"pKS&-<YGKg8Z=Hguf(MB0TnDGeu-K@,DC`5i'!:Qe/G"FstEn&6@YQsg^n
%7gpC@n&2D$T>RS^5uKTiAHlk2&#\'Bk<mPI%_A18dQ7MhqCB$#0aX$K?30;:SoX=Yak+WCH;S3lN.&Q^d\J:r:N*b_UlY+epG7\W
%AG:XmMe004`Qka+a!B##-P%EEO6&l_&)5V_r*smQ!BM=H61/#.V2H;tC&W.j$mV]<,bc)qd=<MT.e&O6KE*@J6u\8/2.\JagkLm&
%O?Pm@T.BU9L6Ls*6hVg8@Ts<0=tO#R_+Aefnr,i^gB(CmMWd!I#VV_oo-0H2@F1A?'Y)7AkDnL9QIOM.r+)8^*Mi-U/P-KWaHJ1@
%A)BF\?cX@L9X"+X)7sGo"I'DtT/o5Z!3G`7!0RQTTVs2fUchW]p$311?QU>+91:J:>tG)C%6>JO?NYqgV.Lj+#mQaU'au_l%dJ![
%-JDr7UJD6&NWhs'c7[H@,m!/UP5TS/`I)'t,\]7m11U0%Z=nQ7$dViXa)`"/3utE=?@?Oe^C]-8!]%m5?lH6*ZL?hi/;\t:PKQ=Y
%HdWOH17[%l073lLO=M^W;-49NE]^55+Ku!Z[p'UO8JCiaW>W]BQa'`#Jn2sr+X$#]huY,,+FDghThedFAFT:unUNjGA.fJF"%7I9
%K<Ui<9QM61KV-U5<'gE)je]:V9W$J(e.\nf_QoMB!YWI<;!)5&#pbC`&0QUBn_L_<(%&4f1JIL[UI%S;(cnTV!cj'^,J[`+Y^jVI
%!Kr-"Q]leB.FB!nBtY<8-1]OLM4fe#SP5_QmMR8TcI`h<To99Lo&?HsfR9Kt8cA$g)K]7fGh>B-q"L=Tl%UR:?7%HW6FHqMr(M>&
%4/:4-'7hTg2BYH0nL8u09]j'1._-=FUmq8#j:.8SndKLXNBo4<Rm8>R"H;?_/MS>fmpgu>>U![ZGPAtSO=k%i<KX6@%!l#gQsqpp
%@Df_bGXA!\i2lXC==H7!#+_hT0InDC!S6N+,-)nf;[2_G(,gF]ZuVFt%;%GFa995g:LUIXA2Z"J7^8=HYOEJ5<(RC'W,%qL*l;5#
%(5IqTVo:8q6k(JjPX2V%P/QI(+4i_1>W+>K(C&DEJ8Zh(SiR+_mlUsqj8e._3[7fjoJo166h['b=_c"Dl3P@)D[^2UQG*Je[Ih"p
%JpCnN^OVU7T\L/fJrTl!MD6uVAJ@B\&-6420]pF+eFUah&BPIW3O5/L_K[J2C(S`N"53SP=R9e,4q)#uk3U/9\N"oIj2-6egeY1\
%)!&*N?l/_Lo&9gTF&9)lb@@bEGoq8WMd2jd@B?&N`F>KQou*M]"r=aO`'.\57KJ-=>[<*eF?2_kZE_2Q0T>[N!rL?:4cs/9&jQ.E
%o%*uS;MS6(@8u'f!bEeRLG>)PLuI@O]Po*G,\t&EV"?^#(fCsmdgHNEVrKU&n'Sa9*i.bA'$@UniNb:h%g0.3<#D?[A2WK\UnL9I
%i>\%/%5ieLs0ZrIBuKLLd0UUHK(oUTqDO]pNoIr'UJ?#0_t^;aKe9Yk5."UfZ6PA?*Tk<?YWtBO;\5#4,5G%p:,i4]j[6_-EOdrm
%:WgMp!Y+9Z&#dfgd<patFg<Qg:D2Ap(6.Jj(1$4.Ns>4i)d3-"(=@nb(1Ku?qCpI\8r`"$%#Y4*nbe&E;unkL%r4(]UMg`m#i).+
%25H<.[l@G)dSJ=?>"h/3(pEn((=X_9KPXb3?8-Xh&:)u)AgCkD8jb8m8q[IAN00\!'dH4"FKfrK!$I(M5[N2Z3^HADkUK\t(U+g4
%)9u&ZLdkFJ<DnSU>OGm8b1k=4amq&]ks;Nf=YPuo,Ej:IcJJpFYlHge#FOQU=WAlHn-rl6Tqp:t1CC3Ekr=)cBit4*#KW*"6.g#p
%F9B`BApuInj/NN!]-FkrI2Gu!!$mJ%/ll;pOu35/D_9*$O_9G]cY6CV'`2kYdaSb$>@tj#a;pZ"\Q?Cn?r.]]=M)6R9U-*?S6j!=
%*+1CNH+UY50+EhgDBp)J().*,if[t-!G*E?VC&pbC3Ls"^fZOi^bEPmAt$'(OP_XOf?Z]+Qc0P%Vb_"i16T^HBhMb@N;RLB;p3Au
%%:D#s5_+%))i,UjTN^a9i'J:p>qn*P!+mCZ!J8!t/.QJ&dN.Gq&nkm&E0f*&/GD_2@*821b(2L%dVZoFSA&C<G4MV`)10Xc>fV_2
%XP#\4]ck(HE"IXfT+#;300"Sa4"eeZ5do$$.,Qm*pV^i?B4*/D4sGFU2/P:V)Ou1+T<+7;Chgk$i3H=!.0A6:T)cH3;$5^``<Im0
%++UH,4.$J9?DiYgMh+G)GQt4/L6G2oJf#gC3Wh0NnKdU5D1HR>3k,U&b1E1Mk#ONF%BM9%BGa602qV%$N^^4,Z_5lO90oh!=HVi'
%@kI$F/10D?^#-V?$jTn@\'m!':2[MLRm7HuDSX%G,D0ETfu@HNjIRd`#7/(]$`5Nf2dcrIQ]iOS]KH(=G^1o"*,^9Y/-fSQ2BW[#
%nf_&ii@UIehh!`(_ct]6G]c.U1l8O?K8A#g&]4W6B3A(^Ygro8QcoII:263Gi@UNMa+9(Z2ul>#4pRCt6.]'0iO5E3',rY%_g@8(
%YlU29GgG:XD]*"H!R)q`4`lB<IuDh*laBp>gFim0\fP1Kr5%Gb4-aY5CeXO':6U)-dim5rG,;tU[f/s.$JXZpaPF\t,EK\`X?H\a
%g'WM_C#pqV"RFJ=-Cl,4fMmO(i5sa2]D](!D8N/eYb$HW`e(N\B>o1+mRk:4>HuSI^`f*Ma:?'jBcu/?fd\0k@@53c0RLg6h5\;M
%T9hpL\?3Is0JBi13'ITf+G#W^[>o&8#CE<!$c9p_!+_g3D&0o":MKo0`G3n/#$&L.dL7hp/aF8I(=N8[P;*S]E>qiV%`MkR=WMRr
%-+/dL8MF^IedPK^UoJSU6>9s\/D\A8?na9Z*Uo6Z.7qRllC2J02F*6a1FoY-5bjJBc&c\f5Z@Z`h&/W)V]5"!4,Ic2bf/6;W>g`i
%"AugjUhP8dl8&]Ne>7uC5`VCWYhF`_<pn7'DjVPn<:pUh!..Ui&hZnp,d+=?[hu4+]deL::n;YT;<[@mnc<6d$0$/(?I9.%JM;h)
%C[14g3rJ&OJs^arj,dlum1>nqq#PNU3J4WG#imNh<[9Ga$'PAt?CYdB4AH)SD08FgB71p^dmSQhpF<n5B&Z2A7WJDY'd'a.Mib2K
%r055\eRX%5[;6CW[>SF<Und#9"k44n12D<&Q=[=CPjS\e[Z%,kgp-(la?/@NIqI*a!7MP`9U<kbC@M@c>aES?fDrlg/l<u+$!ENS
%#S0o=;mgG+k2\NOHb1R,7`Vf?h-(HVWJKb'5)I`m=uM4u<Gnb,/ANGg>af5PKV18?eac'eY8DT$NMI4U*]fVSL-fk?cGM.LV)Kr4
%pR=b]`?dYn(AVK4jTN@G\)i_f0I8)")(dorG@rlSnHk:KY2%K=):F+qY)Ad$:"Mm;oZach"($g8"tRel58'X>A0gZ`1=*'NKA?Hg
%Z-o[.QiN9E-Y40gD,bCU>t-+$=bNs*_Mea.Uf^qqYKQtiQ_gC@Ag$dj=eJfb&Wo_\#qT8M&RG,R):[r1JEW4SeERGRRk"H?49LEM
%15oD.&O<1-U5IH5+>L@HjKeoI_!*W&:b+@6De]oMQ4f0B$[5OCJP_VNPbUVkJBjK0\(548cm?4/<hnX<Ru!UoMDRHTk*CtS9-ZR]
%J-92d9#DmOV-,EC0@M%?P@L[f_e7PsqkI#ci=ih1$u),a2m-_VBm;V/RW5'E)F!d5(C%9D_ttK&g)j%S)W'p.20Mr6G^SU*,t=kg
%CM%?bXTi4N^PuD+a#QlrC9[toc?i,Xd:s-2l0Hbqb;ENJ:#%93V:TLm@W@c4Yi.jf8g)_82@/r57*huG_a19Cn64(kK?C9]M%Y'T
%!0iF1#2+M3kaJpGg"S.PbV]E"WVo+nXP2d+prBq<+u`#7LkFGC&iVqik7$W4J-"k4:F0;@-&mS8,\^XM>M_h[B,=Knkt?jh8_D5F
%q&ZYLl(9_+,?H1^g.c>h;/2OY*F,,jF$Tqo6(+.V0NeFqC@0YOB@',8^k-\6:dbbF&/#D_O^*K#7UWd'?m+*/"rD]-/Y<%lbit+N
%E61B80$8%S\-#r0%-DBPnjl\i:tH6e?mH6_9_L3-DL;HucXt\q&BGc1Il%o0\A/.5rR"T[K</IOE`U$:&6J5<\!?GBB=W%`_F']r
%h,_FG>QnlYR+CaLUUVS;Dd()39SXt'KN7P]qL`!'s+JR?OF+&0-EH/mp&p-NpIA9*"&.1HXcb%iW"c]njT3Gj55V*PbC_(",lWK4
%o:SK`M3>NLeN<ghW+4pO8Gjm!@BK2b^mn/$/a,LSa@K9mMB5NIQ=L%IklDX7Au\Br%t<I7qYeeil2g)p6,BRIBP!2l0J2Sk37:^#
%Xp7bPLML0+0Qh!/Y_R:n-!"oK4e+nb6$9<riJ_$@YHZFr:9$b*bC6JY!N>gR<nme=AG3UG#>)=+Uq;od!+aA`5O*SLr)r*U(&.e$
%P!!Cm500]T19n7*L\#>WoMTIPpbPRkO;7QkeD+?1nj,l"9h`*&b'X2,bC"gpA%\H!Hn`T5G*5fKKg#K(aHh:l;l^\Y_ISHYM1C<!
%/'*QT*L-O'XIT0F.9>hrSDFU7;fr6(dLHK!PWo4,%'YQC@'Jh>!fWFFOuPf6TIWUM9WP1k%I<b>9o'cW#0U\j^l;l$k5hk\GjPTt
%TGW<oH>?qJ9X30@SX(gNP`R)ARWTjCBcRR+qkV@7F(VM(+m.X&/kJkN8_OT1bF*\MC[ZN]K9"-X3*2$SnK?EF$jsVR.`N\2"\[A9
%:&ZfDT&c)5:Jt#.8j,aDR5Ln68?p7#H3/M!jdm^i,Sn)I;GZ428@p>B`66Z!1/E;D>h[Ml-fh`eh_eu:/=g2'Y;/n2Of24@8_3H_
%.J%(Z'M%:W)"-G*4Ri^MG"`QF8H5tcc(H>R5g<A=#rV5U1nOI_Q?U2pU\GiSmf[W>H&C^SKWZgCe%??tFXNJt_P(6aZdQ2o"LPdq
%)L3\B[[u&AC#TG>\=L.uQ?WHiYG=nP#o::q:bD3j":>A=(t?cn-r^jFb<1>K(GspMR3r$WJSgSN68r!3G,/Ohc/$f%1eE8rOIS1X
%6pp`8_I`d"_@>HV>b=Jd8I8A@c*3!9%@3+e`a.&lL5?r<'J(4Yd<^G?oLR8qfK,o!4:$R%9!=URK2RmD,^bo5F".*j&R'Vt;];@k
%)Jc_Yb\*%sjGOX4b%JQ\8SQF^Tsi/o6(rrIJQ]$=N6hW.7aY3`ZiFic>R;u@nK>\]\_LiGIcdtMnMEHF=#$?/Ag0Y=/@R*_l?!fG
%BI$TUZQ,\b`?*Lm/;H>4jk#aB!iVoFdTO@2&TQ0#=Q.FOV!<%;Ec'Q=FZQ3"ct^OQciTMk@@baHkcKT?)qiRc)a;GbeWaO6c2om`
%Zd)_T$g*oui[ZnpTHCAdfdqYkb@\:qDXO1(!/cc>FI&CuC88,n4W7>"F;B3b><3-ieOoY%cXMYu@Q)5=_-p1FdeGBe=@=DAT*:!=
%emYJ_fNU)Y9B[pM=.5566>$>J=HBajCah#Kc":shUpuW2Ac_L+-uNV&f_4`h:g%a0(9LY:/dn=_7k'W*;ncqVSkrS*['ir$/@Y_L
%#cC'+r"157N5u&;Jf!:$M(JE:,tLml;HX"ER8GFA/rJ1!$'b[,6mGaPAH=XN9Xu]6,IIj:U1>$)-:IQ[b^qWK[!Y3^/2#n?RnZBs
%=*RMp<E1$',/jo3B5u=.(;`EF/V$m^UP)\B:rK>56E>G];IQAS(7YuE3/u=;j'f*j10X%=\8%:/]kGcPL.Z.\bhfJr++`IG+Y'7o
%!2cV^=@-^&FC>dD9IMK;*i#At-nTU4N*6fcMqnuKjZGkD!S!hNA[L+8YBeK"]P7G4JO)GC9NdoA9]2Wk-;%srre(keD#<B]i@ptU
%%IcKq7GO"WT@L24.5@M"OB/,r8k`nQ=J@NJ7=BsT`l!]q%q./.lqK5n<H'[b`F*h@])nVD?lYLdij"3:Wf%08#(osK$),>rL<o.P
%)r-\pn&XdLPgEl99,Nr(l@h1qUYRm9T*[(RMmAO5BQZ"T!uLLq]TqmkTuCF/ee3WO0O(SMBQ6UXelrKT"ji.aPgKO\;)ff-_!n;/
%X+XM,3YFsh/_#u!TRIGU'r7=XS2"1M]&6%H'f0$$QaCGQ(p/Zn$^jN)BVFureEUGKi,f8?Vh>h#W0XaGRKbuiLAE%"#ZMRM&6c#%
%Pq;8fBU.0#qgKm!$>L5Cj;O^\?sGUC(41%!-)Gu)$<4EbdeGB[\KRdtK?k`kc`/"Fc[lh/Kr;q'&SUj>`b1th9e4>EcRRt-)kFsU
%XIFWQ!1J-h5)Tk/+bbm$_DWOI>Od?m6A_`G0F"4NU/c[Q645-E<oFmhKeeM9SXMiX@;?G]P7BneDQU-=b%D<^6=TFe74,s%k-GEC
%C-*0.F;D;7Oi]NF/91u]m@H08[JFgg=h/7*B!>DdAbAC?(nJW7P<o?iSV=@>X%6,L.ncc5I\O0Yl;<BZjg+ru;'OQd/-Z@"`PMok
%O#V`Dc2q+T!(c?*JDuk'3Xbga.$pfI<gH??"e!U:(m5UoFZ'W#+.%10Mnh"PZ;,!49@^gQAhiL>h%[%tJ?i[=Z!"kqpDn&c5Y6hM
%F;>[N/lq'ZFd/YQFO4.j[49Jc/:aJ;#G&g[3Gh,r0kf*C?'PN89ge,sbp(UTZbu=W+Y!6*XbHbh,IJ$(WM0O52k3p6)QT:UOq?04
%e7qTUc(nAL_K8MJ<YD$87;@gJ'<.h8_Sg14Y:(Ku>..k\b\Djk%r&/CKgZTVV6P8T[Ap&(c)d4r!R.WGdFo.A[A%q#7VW)GZ`0>7
%N?'t_YLRr*jF0O6/Y0r7YDB=7'12FD@]OT`H+tQ3o#OfL`7F#F%UpsV1k3>d/JLMtXh.D9$b!h$8ISq+=mGjV[7I)C(H?*16)m\e
%(0iIdShjQ.'Pd6*ZnKAK<;:%C<e,/91dWLs6=e\c5P&&%fNp1_f>=Hjb9Q>[(AP3Q2[Ns-)0;R[<h%O^N7M0%#*mV?jOU<-)8)7g
%VR-T37:'EO/2-+m4<"\J?41-Z%6L`s0Pp<eJ8#dfdTV>"XBX*YYN9h$*8JlQ(3Fbl-nOMg]O]qMaLi9Rh53Ye/RV2%)R5!M;$Jo.
%M(PNAP\;X1Z,J^DboY0KQ;;qK.E9:A5X0GEl,4?gQ5=&L(;R!SRLi]=#!(1Y/RX$kW!1D)Cp;3$JH44G9r#.ERSq'bK*A2QF]&_>
%'se&tDtC?'C(9n3c><;R4(uPJp@?Ym-6]f[2!$VkbC^Y9NJ0Esjl>tRPh5K"QP]"$?H\C=jhY_@ca>0CYjkni8[S1]H*&O6+F...
%0b2^][#bNfWEYO^jf2l]>*>1%?0gi)=pm1Si['XbPI-G>U'._IBecg%Cm)/e@Nc],=csQ"QY,"MBTeYh@s)LOQG[SXbDP&[bn'L]
%\HPfGnVQ"8)XT=q$f$qV/IZB00c<0RXTnZ">Ss<G>-W_tA%#S*!e*?i>OY(Wi,CAS/bQe#p(Od_0[5:O0P7B)^,=2bB!rUAL.(9k
%f`K9n*AV47>>T"APVHAORWc$6DIg(@Qo\`c)D]_:Q?EqJe]&(QKA"*T-!b"7>Dm*$%UuJBrS0eW_(kPe'p'&4E#"$#cphh[s0a,N
%B1?\h=h!?D=prWR=>,<X_H'`2g!En1-QNT:TX<9*Z4dJHKb[E@Pt$$NJ?j[A+LV7sh$Z]//V%9*DfoLse6s<Npi^*S?l1=hS_1g9
%@a3S<4It-a%EGp$ehXOXN7\2D)pp(="YbT=Z*a^5SqGYsQj/DtR4Wr/PGuNoDoPLoAnq^$@ho5`k=81IK>_52$Xd-(iLSX'Qq'(s
%[0=oj6D_*j`al^SFD>UU)epe@:*MBc6Z/EIYF$mG^#`F?Adb7>[bX_l[ZHcKgNsgE"YbuXR$lV/3S[)!=(etG;-_L/X3B-MVe%<`
%"ibf?0O+$VA>Lc\`?(99d?q&TBm0MECphZ0&6mD&H(0VlAL+u!@LIg_=]n41d56uH2L$f5M44C>`)c+XG/#60+@k2=.&[e`flBsp
%YuUDR@?&p>(A8][(9VV^cAgGUd5G/b?AgMF7L$+t/Z:FL/af"4I=aM`"d6'D%BfqumiYC6SuGpPH!3<3,#4*K!mRX4+W7NgR]k48
%U)%Z.-eY/FfP8*7B"oOu(>EtG,.87+UP[W,\q@Y&&R3d`=XR[Zg5^%aYuM"A1l*_/e4=><0jA4*&2T]UN1/$DZSfJmTXM'fQ4OTs
%D6`1L1mBb"]Vf<S0FgQJ2e3lW(+aDRi#^A`BKd=-6#@>S_#6rD'l<p1esT]QhM=Y#/I"/%>+bsDW\^S*J>2!-[Dg(XnRA'B!p7P+
%4It.L:q,[-e.t<YN0Grl[M[LWFHkLrc@!mHWQo;\S$jR,e.uu]f/@nX%)u#5(-lN3?[[u%5JFT]>6(]:FinM$/4N]`@Z)shD^Dgl
%C9jHD>7?7K]Z%fi)/5RmfOE2:[Yo8g^b.9ofQ-qpT(eko>?0AS?$6cfMCQdU+1h1TDfb=-]EfU[Yu-'fQk9JjarPc\WJ#JfPVaai
%%\6FJ;JC/sm[Ng!O%RCt3B/?Z12/;jPP*)Q;fFpbL9j/OnO=lSZuX1W`5#B1&/]QZ2mP5qB(Q9#`47YQNNrjA75!j1GG/5=J>n'E
%NgZOkL=V(+P1!S@&2^r(*C2V-`l8*c_AB*:6J3JQ]tbg@`Iq<#rl&C=%ImK89CjJZfY1M1&pDAapY2(2?uXfh:B0/iUI0?YX"E7,
%RK$K"q(KF;+R1S_fNHcuc@dK>_3F@J'3JP'kgZhX-2T3N;eN$$0KLJ-Pqoh)e/7%_'75Q@XW_DWB<:Gn=L=DD%7t"%C*5f7-;HdE
%QC\@,T2uTi0(JkmG-B9CcuMjt]obG3`--I`=aIZGbp\p`[5T&?]N5qD)>.O-85->&Xm?W/)atrpc.I#rJUjl^/cVhS)5W833OKL"
%fCcA?CWX!pCqQ#P2N<uD=LPP\CV(M]Nc5D-NMeSOC#LDqI1n*[]JV[)?*b^O>#K?GA?1Ri@%,C+^]=56g!m^OI*,3K=AZj$QbN9=
%loQO)jjYAigE&]A0_<KmR?Lia]/ng?XTUNK=>aZMnV-DR1"\Nsb+SP&!6J4QV,:4=\SfBj.L<WS)KoGj?)">?nZpO`TV/pIq7a*H
%K9i%nH']1PC<JkLnQ*:23bO>Pp"kA]9T*k51kR6F?LompTc^/5jQK!]NY$t*EsugWF6qa9@kM!(L7(\bCARM8FEe)ro@R3+.9$N7
%c0FTB?YA5_/ef2[BtHB&,7q`*SG:+hd'l4[R2Uq?i:,8<9Y)NjQ'^*$)a*gp7O2BlG_!ak2V%b'K?JZjVYQ)U>[7@WS]Rp4irQ;$
%o,E50k-3%oM?0l+&,gb[-hZG_4rg-VN\=[dI.,o.&+;^!!I=V/m0EBg4hQ.1^BM.;o:sA+2W4="0B'bI3_m^;*Uu.7GE6&[a02(!
%rp!,_3fV&L=@l;$iuRXo(i_?X'=]*A>^D+uWpp)@NBuj7gn#Gqn:Z?sG[YNn(uX'Oc9KXjSNLM_V.'+AmcOROD[(Zln&%=HT"oJY
%<'Q\nQqcMt>R$8=pF;`;(uX)e/Gs*iL<WD#ONtO=BKZKDOc:mSV?:'^L<BkE3k$t_h%XUlh7'r^!7*Q"n_"/i5@mhMQeL"r<G;&+
%d'F291!`QAE8;?sWQiKolu6hO=Zp+G^p=JQHF=uD_FSrk+J=6c>m(hfVAGeFbfQk2p;l%O!rbU:'s2Ni%sg>XhP*?bhO5Wf\u]'B
%Z>I\F4jDQWV*YD]F5JTsDCX#A.5m:*='`M/K$X8+b&8U7VLIYKCR\X%U$X@Aaj-HGk)lm[DHcmc_fJb-[S;ZJ>c+A*9abBE?TLW`
%)H[08F("<P.m$45X6a@Z]j)SI)m@8TM?bgo'kl?$H/>Ob7/a9Xf$:kN9rej\LSN&GgRH"oloE+0Gu8'EN_ihP`XZfSJBO,1qumcp
%BXi0QHu?Js\]q.RQ[L3YV@">#-)YDG@5Xb`53J$9hd-dHH/Y'7`>Z+3V9o)$1iq,Xqphd:P,;EEj"iPmB\PASSoZVD<Tp))'[F"c
%a&Kn<[8!::WrJ>M`CX+gMl(\rB_tOq1I3^>DON.@]P8q!gsg@(GO'u'``P+baL:&$($^#bSBLYC_tf8"rmMj_8cAO8I_^S9kP:?$
%?$XcIb@e2brUJtk:O+?LN^;P>PXomb('r?<E$ib\*mIj_]Ka68cWKU^G$aXb'Y4!,E*W@jZOXgnG-aR1T5Fq+mYJjra._t2M[dF+
%/ijJi`h5TK-OAlDd$=1=Ep8G=\G02s+[>]D4FL<1Vn>/qa<B.p^V)t_g[dnH.B[%M6u]a4RHMBW^])\4_k6MrTjXA-1r$ake*@6!
%s)I_/-\LI=B7BfCrLhWPri&ePT/$a:95HHl'UhM-A#"tseh;D+3%f[B;)m7@pm"\no'ha9.B"b%;br>pV_iE9DfdJ#j0'u96*O?^
%-9/7R`RYjni2Z/tr*Ra&m`o4m"e>AYTVl>oRgXCFm,1\/YPU]`,D";%+B"_;`[*3WFgm5qm"$2<IH"p<!"66n#[EQYr\2c%61Wms
%;4`e./X+%oS0&/ub>+p]GC;[J_"YqF*R2er-oq'oLt@gkEMc844VNDP)@SC9,ZpNtRPQA:\=d6@<T%\M_cN`$^([Q_o-jKB[e?AT
%/ghlbG7gPS_Rm*oXr$)eIOPm8^l+tdpC8f40NeH.^jc+fZG1?rf6%&6;7EM@kZo_;AjN_on.'E=H:kj]nt$4A6p..Hq;s.!$`@SX
%+kGmY^@-]"ptgE]39!PgSH&?6^[^&jAQT?7U_`-2SN&dYh)]8%T"FYM-K_@q+$P!q>^X:RTB&dOIGj$u>i/f^^0dB+Hk[6,?VFCj
%&#r!+WD.frNWWiNpEOUbM>6j&q'XOK,!fc0EaNAN:Uff!J*Ot>rHu$kde%DMj)h>N-D/S4+<4"BBE,!"*,K2qlEgN[Xo$][S1B7l
%XD.B<I!]=TcMkVQ]/%W[Urm`'q`Oa'E6Nc9bBm(=m%<_'BE-J>1&Lc3:fLoij:>M5L6.ctI[1-tX=+%J),L6O-^jjeDuEncr=c*l
%\Q^FTd!=oK@br@,N!$$MNOb"!-d/^<I#]8bNLXWFB)nSWf4I5$+L+TrT=9.-5isop-dZHha%LDg\BXs9p3l(!SJX/46l^@36hbS2
%>:2V769koSdsc2`%uV:6l*LBYNVdq^e34#Jk?3ijoQoATc?bFncFf%)(7_(%)CYg<XIm9_lN-^3n9!5WpQ'?PT_2d<HIrJD>.%KT
%GsgQ;`iMZ7@m@GIRe<^n^7UIcGOg&pjS#^*b?9>Sj?.YP`9DP,n"7jp4..?TkgZrpoOO]gN&Nnf+ag<]NFdUF=j<GM3uk>b-aVM;
%m.uZLVo^V4W@WgjT)anPT@L.U-SnCk26="]OX@m*C\cP.&+<i>rU5)o04#p^gn/NB^\@QagY_Jg4[+2Vr_L$'f=g5!%j+"3q=`//
%I\]1Khg^%B-[O4Sj.H>Mk[-SoO^2qogj>Yu4aQAm!!EO`?2~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 0 1516 a Fy(Fig.)26 b(1.)78 b(The)27 b(Solution)f(map)h
Fq(f)35 b Fy(and)27 b(the)g(functions)g Fo(G)1540 1488
y Ff(k)1540 1539 y(i)1597 1516 y Fy(for)g Fo(k)18 b Fk(=)e
Fy(1)p Fp(;)8 b Fy(2)p Fp(;)g Fy(3)p Fp(;)g Fy(4)p Fp(;)g
Fy(5)28 b(and)g Fo(i)16 b Fk(=)h Fy(1)p Fp(;)8 b Fy(2)p
Fp(;)g Fy(3)27 b(for)f(the)h(system)37 b(\001)-35 b Fo(x)p
Fk(\()n Fo(t)5 b Fk(\))17 b(=)g Fm(\000)p Fo(x)p Fk(\()n
Fo(t)5 b Fk(\))3453 1488 y Fd(3)3486 1516 y Fy(.)26 b(The)h(interv)n
(al)0 1608 y(of)f(con)m(v)o(er)o(gence)j(of)d(the)h(Picard)f(Iteration)
g(is)g Fo(T)f Fk(=)1417 1578 y Fd(1)p 1417 1590 30 3
v 1417 1633 a(3)1456 1608 y Fy(.)p Black 0 2045 a Fs(Q)p
Fz(.)35 b(Gi)n(v)o(en)e Fs(T)i Ft(<)23 b Fz(min)o Fn(f)811
2005 y Fy(2)p Fo(K)t(r)p 811 2022 123 4 v 845 2079 a(Q)943
2045 y Ft(;)993 2005 y Fy(1)p 991 2022 42 4 v 991 2079
a Fo(L)1043 2045 y Fn(g)p Fz(,)35 b(let)f Fs(z)22 b Fv(=)h
Fz(0)34 b(and)h(de\002ne)1518 2319 y Fs(G)1590 2278 y
Fo(k)1590 2344 y Fy(0)1632 2319 y Fv(\()n Fs(t)7 b Ft(;)k
Fs(x)p Fv(\))20 b Fz(:)p Fv(=)j(\()p Fs(P)2074 2278 y
Fo(k)2112 2319 y Fs(z)p Fv(\)\()n Fs(t)7 b Ft(;)k Fs(x)p
Fv(\))0 2593 y Fz(and)35 b(for)g Fs(i)22 b Ft(>)g Fz(0,)35
b(de\002ne)g(the)g(functions)e Fs(G)1501 2608 y Fo(i)1561
2593 y Fz(recursi)n(v)o(ely)h(as)1322 2867 y Fs(G)1394
2826 y Fo(k)1394 2893 y(i)p Fk(+)p Fy(1)1514 2867 y Fv(\()n
Fs(t)7 b Ft(;)k Fs(x)p Fv(\))20 b Fz(:)p Fv(=)j(\()p
Fs(P)1956 2826 y Fo(k)1994 2867 y Fs(z)p Fv(\)\()n Fs(t)7
b Ft(;)k Fs(G)2255 2826 y Fo(k)2255 2892 y(i)2291 2867
y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))p Ft(:)0
3142 y Fz(The)29 b Fs(G)256 3105 y Fo(k)256 3171 y(i)324
3142 y Fz(are)h(Picard)g(iterations)f Fs(P)1221 3105
y Fo(k)1259 3142 y Fs(z)p Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p
Fv(\))28 b Fz(de\002ned)i(on)f(each)h(sub-interv)n(al)d(where)j(we)g
(substitute)d(the)i(initial)0 3315 y(condition)k Fs(x)23
b Fn(7!)f Fs(G)672 3279 y Fo(k)672 3345 y(i)p Fm(\000)p
Fy(1)792 3315 y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))p
Fz(.)33 b(De\002ne)j(the)e(concatenation)g(of)h(these)g
Fs(G)2519 3279 y Fo(k)2519 3344 y(i)2592 3315 y Fz(as)661
3589 y Fs(G)733 3548 y Fo(k)772 3589 y Fv(\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\))20 b Fz(:)p Fv(=)j Fs(G)1186 3548
y Fo(k)1186 3614 y(i)1224 3589 y Fv(\()n Fs(t)d Fn(\000)14
b Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))99 b Fn(8)f Fs(t)28
b Fn(2)22 b Fv([)p Fs(iT)6 b Ft(;)11 b Fs(iT)25 b Fv(+)14
b Fs(T)g Fv(])99 b Fz(and)35 b Fs(i)21 b Fv(=)i Fz(1)p
Ft(;)11 b Fn(\001)g(\001)g(\001)21 b Ft(;)11 b Fw(\245)p
Ft(:)100 3863 y Fz(If)38 b Fs(f)g Fz(is)23 b(polynomial,)e(then)h(the)i
Fs(G)1274 3827 y Fo(k)1274 3892 y(i)1335 3863 y Fz(are)g(polynomials)d
(for)j(an)o(y)e Fs(i)p Ft(;)11 b Fs(k)25 b Fz(and)e Fs(G)2676
3827 y Fo(k)2738 3863 y Fz(is)g(continuously)e(dif)n(ferentiable)0
4037 y(in)34 b Fs(x)i Fz(for)f(an)o(y)f Fs(k)r Fz(.)h(The)g(follo)n
(wing)d(lemma)i(pro)o(vides)g(se)n(v)o(eral)g(properties)g(for)h(the)g
(functions)f Fs(G)3450 4001 y Fo(k)3488 4037 y Fz(.)p
Black 100 4210 a Fs(Lemma)h(9:)p Black 50 w Fz(Gi)n(v)o(en)24
b Fu(d)30 b Ft(>)19 b Fz(0,)25 b(suppose)g(that)g(the)g(solution)f(map)
i Fu(f)11 b Fv(\()n Fs(t)c Ft(;)k Fs(x)p Fv(\))24 b Fz(e)o(xists)g(on)g
Fs(t)f Fn(2)c Fv([)p Fz(0)p Ft(;)11 b Fu(d)h Fv(])25
b Fz(and)g(on)h Fs(x)18 b Fn(2)g Fs(B)3840 4225 y Fo(r)3875
4210 y Fz(.)0 4383 y(Further)41 b(suppose)f(that)g Fn(k)o
Fu(f)11 b Fv(\()n Fs(t)c Ft(;)k Fs(a)p Ft(;)g Fs(x)p
Fv(\))p Fn(k)24 b(\024)h Fs(K)17 b Fn(k)p Fs(x)p Fn(k)41
b Fz(for)g(an)o(y)f Fs(x)26 b Fn(2)g Fs(B)2288 4398 y
Fo(r)2322 4383 y Fz(.)41 b(Suppose)f(that)55 b Fs(f)g
Fz(is)40 b(Lipschitz)g(on)g Fs(B)3774 4399 y Fy(4)p Fo(K)t(r)0
4557 y Fz(with)32 b(f)o(actor)g Fs(L)i Fz(and)e(bounded)g(with)f(bound)
h Fs(Q)p Fz(.)g(Choose)h Fs(T)h Ft(<)21 b Fz(min)o Fn(f)2468
4517 y Fy(2)p Fo(K)t(r)p 2468 4534 123 4 v 2502 4591
a(Q)2600 4557 y Ft(;)2651 4517 y Fy(1)p 2649 4534 42
4 v 2649 4591 a Fo(L)2700 4557 y Fn(g)33 b Fz(and)f(inte)o(ger)g
Fs(N)27 b Ft(>)22 b Fu(d)12 b Ft(=)p Fs(T)h Fz(.)32 b(Then)0
4730 y(let)i Fs(G)206 4694 y Fo(k)280 4730 y Fz(and)h
Fs(G)531 4694 y Fo(k)531 4759 y(i)604 4730 y Fz(be)g(de\002ned)g(as)g
(abo)o(v)o(e.)100 4903 y(De\002ne)g(the)g(function)1178
5077 y Fs(c)p Fv(\()p Fs(k)r Fv(\))22 b(=)1467 4970 y
Fo(N)t Fm(\000)p Fy(1)1491 5098 y Fh(\345)1484 5180 y
Fo(i)p Fk(=)p Fy(0)1628 4966 y Fj(\020)1688 5077 y Fs(e)1732
5036 y Fo(T)9 b(L)1843 5077 y Fv(+)14 b Fs(K)6 b Fv(\()p
Fs(T)13 b(L)p Fv(\))2207 5036 y Fo(k)2246 4966 y Fj(\021)2305
4991 y Fo(i)2341 5077 y Fs(K)2413 5036 y Fy(2)2454 5077
y Fv(\()p Fs(T)g(L)p Fv(\))2655 5036 y Fo(k)2694 5077
y Ft(:)p Black 0 5556 a FF(December)25 b(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black 3834 -150 a FF(10)p Black
0 116 a Fz(F)o(or)35 b(an)o(y)f Fs(k)j Fz(suf)n(\002ciently)c(lar)n(ge)
j(so)e(that)g Fs(c)p Fv(\()p Fs(k)r Fv(\))22 b Ft(<)h
Fs(K)6 b Fz(,)34 b(then)h(for)g(an)o(y)f Fs(x)23 b Fn(2)f
Fs(B)2622 131 y Fo(r)2657 116 y Fz(,)1240 390 y(sup)1197
484 y Fo(s)p Fm(2)p Fk([)p Fy(0)p Fp(;)p Fq(d)9 b Fk(])1432
275 y Fj(\015)1432 335 y(\015)1432 395 y(\015)1488 390
y Fs(G)1560 349 y Fo(k)1598 390 y Fv(\()p Fs(s)p Ft(;)i
Fs(x)p Fv(\))j Fn(\000)g Fu(f)d Fv(\()p Fs(s)p Ft(;)g
Fs(x)p Fv(\))2166 275 y Fj(\015)2166 335 y(\015)2166
395 y(\015)2242 390 y Fn(\024)23 b Fs(c)p Fv(\()p Fs(k)r
Fv(\))11 b Fn(k)o Fs(x)p Fn(k)h Ft(:)1080 b Fz(\(7\))199
682 y Fs(Pr)l(oof:)48 b Fz(Suppose)g Fs(x)30 b Fn(2)g
Fs(B)1121 697 y Fo(r)1156 682 y Fz(.)48 b(By)h(assumption,)e(the)h
(conditions)f(of)h(Lemma)g(7)h(are)g(satis\002ed)f(using)0
855 y Fs(r)41 819 y Fm(0)88 855 y Fv(=)22 b Fz(2)p Fs(K)6
b(r)r Fz(.)35 b(Let)g Fs(z)p Fv(\()n Fs(t)7 b Ft(;)k
Fs(x)p Fv(\))20 b(=)j Fz(0.)34 b(De\002ne)i(the)e(con)l(v)o(er)n(gence)
h(rate)g Fs(d)28 b Fv(=)22 b Fs(T)13 b(L)23 b Ft(<)g
Fz(1.)34 b(By)h(Lemma)g(7,)198 1129 y(sup)152 1224 y
Fo(s)p Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)9 b Fk(])393
1015 y Fj(\015)393 1075 y(\015)393 1134 y(\015)448 1129
y Fs(G)520 1088 y Fo(k)520 1155 y Fy(0)561 1129 y Fv(\()p
Fs(s)p Ft(;)i Fs(x)p Fv(\))j Fn(\000)g Fu(f)d Fv(\()p
Fs(s)p Ft(;)g Fs(x)p Fv(\))1129 1015 y Fj(\015)1129 1075
y(\015)1129 1134 y(\015)1205 1129 y Fv(=)68 b Fz(sup)1305
1224 y Fo(s)p Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)9 b Fk(])1545
1015 y Fj(\015)1545 1075 y(\015)1545 1134 y(\015)1601
1129 y Fv(\()p Fs(P)1701 1088 y Fo(k)1739 1129 y Fs(z)p
Fv(\)\()p Fs(s)p Ft(;)i Fs(x)p Fv(\))j Fn(\000)g Fu(f)d
Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))2385 1015 y Fj(\015)2385
1075 y(\015)2385 1134 y(\015)2460 1129 y Fn(\024)23 b
Fs(d)2615 1088 y Fo(k)2710 1129 y Fz(sup)2664 1224 y
Fo(s)p Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)9 b Fk(])2905
1129 y Fn(k)p Fu(f)i Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p
Fn(k)21 b(\024)h Fs(K)6 b(d)3515 1088 y Fo(k)3565 1129
y Fn(k)p Fs(x)p Fn(k)11 b Ft(:)0 1428 y Fz(Thus)34 b(Equation)g(\(7\))h
(is)f(satis\002ed)h(on)f(the)h(interv)n(al)e Fv([)p Fz(0)p
Ft(;)11 b Fs(T)h Fv(])p Fz(.)35 b(W)-8 b(e)35 b(proceed)g(by)g
(induction.)e(De\002ne)1373 1718 y Fs(c)1417 1733 y Fo(i)1442
1718 y Fv(\()p Fs(k)r Fv(\))22 b(=)1742 1612 y Fo(i)1701
1740 y Fh(\345)1698 1822 y Fo(j)r Fk(=)p Fy(1)1817 1718
y Fv(\()p Fs(e)1900 1677 y Fo(d)1959 1718 y Fv(+)14 b
Fs(K)6 b(d)2177 1677 y Fo(k)2215 1718 y Fv(\))2265 1677
y Fo(j)2292 1718 y Fs(K)2364 1677 y Fy(2)2406 1718 y
Fs(d)2461 1677 y Fo(k)2499 1718 y Ft(:)0 2036 y Fz(and)35
b(suppose)f(that)719 1951 y Fj(\015)719 2011 y(\015)774
2036 y Fs(G)846 2000 y Fo(k)899 2036 y Fn(\000)14 b Fu(f)1053
1951 y Fj(\015)1053 2011 y(\015)1108 2074 y Fl(\245)1188
2036 y Fn(\024)22 b Fs(c)1331 2052 y Fo(i)p Fm(\000)p
Fy(1)1452 2036 y Fv(\()p Fs(k)r Fv(\))11 b Fn(k)o Fs(x)p
Fn(k)35 b Fz(on)g(interv)n(al)e Fv([)p Fs(iT)27 b Fn(\000)14
b Fs(T)6 b Ft(;)11 b Fs(iT)h Fv(])p Fz(.)34 b(Then)736
2310 y(sup)611 2404 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t Fp(;)p
Fo(iT)7 b Fk(+)p Fo(T)i Fk(])1010 2196 y Fj(\015)1010
2255 y(\015)1010 2315 y(\015)1065 2310 y Fs(G)1137 2269
y Fo(k)1176 2310 y Fv(\()p Fs(s)p Ft(;)i Fs(x)p Fv(\))j
Fn(\000)g Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))1744
2196 y Fj(\015)1744 2255 y(\015)1744 2315 y(\015)1820
2310 y Fv(=)148 b Fz(sup)1920 2404 y Fo(s)p Fm(2)p Fk([)p
Fo(iT)t Fp(;)p Fo(iT)7 b Fk(+)p Fo(T)i Fk(])2319 2196
y Fj(\015)2319 2255 y(\015)2319 2315 y(\015)2374 2310
y Fs(G)2446 2269 y Fo(k)2446 2335 y(i)2485 2310 y Fv(\()p
Fs(s)14 b Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))j
Fn(\000)g Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))3247
2196 y Fj(\015)3247 2255 y(\015)3247 2315 y(\015)722
2598 y Fv(=)147 b Fz(sup)821 2692 y Fo(s)p Fm(2)p Fk([)p
Fo(iT)t Fp(;)p Fo(iT)8 b Fk(+)p Fo(T)h Fk(])1220 2483
y Fj(\015)1220 2543 y(\015)1220 2603 y(\015)1276 2598
y Fs(P)1337 2557 y Fo(k)1375 2598 y Fs(z)p Fv(\()p Fs(s)14
b Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)1797 2557 y Fo(k)1797
2623 y(i)p Fm(\000)p Fy(1)1916 2598 y Fv(\()p Fs(T)6
b Ft(;)11 b Fs(x)p Fv(\)\))j Fn(\000)g Fu(f)d Fv(\()p
Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fu(f)g Fv(\()p Fs(iT)6
b Ft(;)11 b Fs(x)p Fv(\)\))3008 2483 y Fj(\015)3008 2543
y(\015)3008 2603 y(\015)722 2885 y Fn(\024)147 b Fz(sup)821
2979 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t Fp(;)p Fo(iT)8 b
Fk(+)p Fo(T)h Fk(])1220 2771 y Fj(\015)1220 2830 y(\015)1220
2890 y(\015)1276 2885 y Fs(P)1337 2844 y Fo(k)1375 2885
y Fs(z)p Fv(\()p Fs(s)14 b Fn(\000)g Fs(iT)6 b Ft(;)11
b Fs(G)1797 2844 y Fo(k)1797 2911 y(i)p Fm(\000)p Fy(1)1916
2885 y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))j Fn(\000)g
Fu(f)d Fv(\()p Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)2728
2844 y Fo(k)2728 2911 y(i)p Fm(\000)p Fy(1)2846 2885
y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))3107 2771
y Fj(\015)3107 2830 y(\015)3107 2890 y(\015)813 3173
y Fv(+)139 b Fz(sup)904 3267 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t
Fp(;)p Fo(iT)8 b Fk(+)p Fo(T)h Fk(])1303 3058 y Fj(\015)1303
3118 y(\015)1303 3178 y(\015)1359 3173 y Fu(f)i Fv(\()p
Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)1805 3132 y
Fo(k)1805 3198 y(i)p Fm(\000)p Fy(1)1924 3173 y Fv(\()p
Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))j Fn(\000)g Fu(f)d
Fv(\()p Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fu(f)g Fv(\()p
Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\)\))3016 3058 y Fj(\015)3016
3118 y(\015)3016 3178 y(\015)0 3464 y Fz(W)-8 b(e)35
b(treat)g(these)g(\002nal)g(tw)o(o)f(terms)g(separately)-6
b(.)34 b(First)h(note)f(that)450 3624 y Fj(\015)450 3684
y(\015)450 3744 y(\015)505 3739 y Fs(G)577 3698 y Fo(k)577
3764 y(i)p Fm(\000)p Fy(1)697 3739 y Fv(\()p Fs(T)6 b
Ft(;)11 b Fs(x)p Fv(\))919 3624 y Fj(\015)919 3684 y(\015)919
3744 y(\015)996 3739 y Fn(\024)23 b(k)o Fu(f)11 b Fv(\()p
Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))p Fn(k)i Fv(+)1612 3624
y Fj(\015)1612 3684 y(\015)1612 3744 y(\015)1667 3739
y Fu(f)e Fv(\()p Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))j Fn(\000)g
Fs(G)2157 3698 y Fo(k)2157 3764 y(i)p Fm(\000)p Fy(1)2277
3739 y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\))2499 3624
y Fj(\015)2499 3684 y(\015)2499 3744 y(\015)2575 3739
y Fn(\024)23 b Fs(K)17 b Fn(k)p Fs(x)p Fn(k)d Fv(+)g
Fs(c)3051 3754 y Fo(i)p Fm(\000)p Fy(1)3172 3739 y Fv(\()p
Fs(k)r Fv(\))d Fn(k)o Fs(x)p Fn(k)996 3968 y(\024)23
b Fv(\()p Fs(K)c Fv(+)14 b Fs(c)1355 3984 y Fo(i)p Fm(\000)p
Fy(1)1476 3968 y Fv(\()p Fs(k)r Fv(\)\))d Fn(k)o Fs(x)p
Fn(k)g Ft(:)0 4242 y Fz(Since)32 b Fs(c)297 4258 y Fo(i)p
Fm(\000)p Fy(1)418 4242 y Fv(\()p Fs(k)r Fv(\))20 b Fn(\024)h
Fs(c)p Fv(\()p Fs(k)r Fv(\))g Ft(<)g Fs(K)38 b Fz(and)32
b Fs(x)21 b Fn(2)g Fs(B)1440 4257 y Fo(r)1475 4242 y
Fz(,)32 b(we)g(ha)n(v)o(e)1897 4158 y Fj(\015)1897 4217
y(\015)1952 4242 y Fs(G)2024 4206 y Fo(k)2024 4273 y(i)p
Fm(\000)p Fy(1)2145 4242 y Fv(\()p Fs(T)6 b Ft(;)11 b
Fs(x)p Fv(\))2367 4158 y Fj(\015)2367 4217 y(\015)2442
4242 y Fn(\024)21 b Fv(\()p Fs(K)d Fv(+)13 b Fs(K)6 b(c)2869
4258 y Fo(i)p Fm(\000)p Fy(1)2990 4242 y Fv(\()p Fs(k)r
Fv(\)\))11 b Fn(k)n Fs(x)p Fn(k)22 b(\024)f Fz(2)p Fs(K)6
b(r)r Fz(.)32 b(Hence)894 4517 y(sup)770 4611 y Fo(s)p
Fm(2)p Fk([)p Fo(iT)t Fp(;)p Fo(iT)7 b Fk(+)p Fo(T)i
Fk(])1169 4402 y Fj(\015)1169 4462 y(\015)1169 4522 y(\015)1224
4517 y Fs(P)1285 4475 y Fo(k)1323 4517 y Fs(z)p Fv(\()p
Fs(s)14 b Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)1745 4475
y Fo(k)1745 4542 y(i)p Fm(\000)p Fy(1)1864 4517 y Fv(\()p
Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))j Fn(\000)g Fu(f)d
Fv(\()p Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)2676
4475 y Fo(k)2676 4542 y(i)p Fm(\000)p Fy(1)2794 4517
y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))3055 4402
y Fj(\015)3055 4462 y(\015)3055 4522 y(\015)781 4804
y Fn(\024)147 b Fz(sup)880 4898 y Fo(s)p Fm(2)p Fk([)p
Fo(iT)t Fp(;)p Fo(iT)7 b Fk(+)p Fo(T)j Fk(])1279 4804
y Fs(d)1334 4763 y Fo(k)1384 4690 y Fj(\015)1384 4749
y(\015)1384 4809 y(\015)1439 4804 y Fu(f)h Fv(\()p Fs(s)j
Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)1885 4763 y Fo(k)1885
4830 y(i)p Fm(\000)p Fy(1)2004 4804 y Fv(\()p Fs(T)6
b Ft(;)11 b Fs(x)p Fv(\)\))2265 4690 y Fj(\015)2265 4749
y(\015)2265 4809 y(\015)2341 4804 y Fn(\024)23 b Fs(K)6
b(d)2568 4763 y Fo(k)2618 4690 y Fj(\015)2618 4749 y(\015)2618
4809 y(\015)2673 4804 y Fs(G)2745 4763 y Fo(k)2745 4830
y(i)p Fm(\000)p Fy(1)2865 4804 y Fv(\()p Fs(T)g Ft(;)11
b Fs(x)p Fv(\))3087 4690 y Fj(\015)3087 4749 y(\015)3087
4809 y(\015)781 5092 y Fn(\024)22 b Fs(K)6 b(d)1007 5051
y Fo(k)1046 5092 y Fv(\()p Fs(K)19 b Fv(+)14 b Fs(c)1305
5107 y Fo(i)p Fm(\000)p Fy(1)1426 5092 y Fv(\()p Fs(k)r
Fv(\)\))d Fn(k)o Fs(x)p Fn(k)g Ft(:)p Black 0 5556 a
FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black eop end
%%Page: 11 11
TeXDict begin 11 10 bop Black 3834 -150 a FF(11)p Black
100 116 a Fz(No)n(w)-6 b(,)36 b(if)h Fs(x)24 b Fn(2)g
Fs(B)664 131 y Fo(r)699 116 y Fz(,)37 b Fn(k)p Fu(f)11
b Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fn(k)23 b(\024)h
Fs(K)6 b(r)39 b Fz(and)e(since)1821 31 y Fj(\015)1821
91 y(\015)1877 116 y Fs(G)1949 79 y Fo(k)1949 146 y(i)p
Fm(\000)p Fy(1)2069 116 y Fv(\()p Fs(T)6 b Ft(;)11 b
Fs(x)p Fv(\))2291 31 y Fj(\015)2291 91 y(\015)2369 116
y Fn(\024)24 b Fz(2)p Fs(K)6 b(r)39 b Fz(and)52 b Fs(f)g
Fz(is)37 b(Lipschitz)f(on)h Fs(B)3656 131 y Fy(4)p Fo(K)t(r)3782
116 y Fz(,)h(it)0 289 y(is)c(well-kno)n(wn)g(that)843
563 y(sup)718 657 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t Fp(;)p
Fo(iT)7 b Fk(+)p Fo(T)j Fk(])1117 449 y Fj(\015)1117
508 y(\015)1117 568 y(\015)1173 563 y Fu(f)h Fv(\()p
Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(G)1619 522 y
Fo(k)1619 589 y(i)p Fm(\000)p Fy(1)1737 563 y Fv(\()p
Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))j Fn(\000)g Fu(f)d
Fv(\()p Fs(s)j Fn(\000)g Fs(iT)6 b Ft(;)11 b Fu(f)g Fv(\()p
Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\)\))2829 449 y Fj(\015)2829
508 y(\015)2829 568 y(\015)729 851 y Fn(\024)148 b Fz(sup)829
945 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t Fp(;)p Fo(iT)7 b Fk(+)p
Fo(T)i Fk(])1228 851 y Fs(e)1272 810 y Fo(L)p Fk(\()p
Fo(s)p Fm(\000)p Fo(iT)g Fk(\))1546 736 y Fj(\015)1546
796 y(\015)1546 856 y(\015)1601 851 y Fs(G)1673 810 y
Fo(k)1673 876 y(i)p Fm(\000)p Fy(1)1794 851 y Fv(\()p
Fs(T)d Ft(;)11 b Fs(x)p Fv(\))j Fn(\000)g Fu(f)d Fv(\()p
Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))2434 736 y Fj(\015)2434
796 y(\015)2434 856 y(\015)2509 851 y Fn(\024)23 b Fs(e)2653
810 y Fo(T)9 b(L)2750 851 y Fs(c)2794 866 y Fo(i)p Fm(\000)p
Fy(1)2914 851 y Fv(\()p Fs(k)r Fv(\))i Fn(k)p Fs(x)p
Fn(k)100 1142 y Fz(Combining,)33 b(we)i(conclude)f(that)435
1417 y(sup)310 1511 y Fo(s)p Fm(2)p Fk([)p Fo(iT)t Fp(;)p
Fo(iT)7 b Fk(+)p Fo(T)i Fk(])709 1302 y Fj(\015)709 1362
y(\015)709 1422 y(\015)764 1417 y Fs(G)836 1375 y Fo(k)836
1441 y(i)875 1417 y Fv(\()p Fs(s)14 b Fn(\000)g Fs(iT)6
b Ft(;)11 b Fs(x)p Fv(\))j Fn(\000)g Fu(f)d Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))1637 1302 y Fj(\015)1637 1362 y(\015)1637
1422 y(\015)1713 1417 y Fn(\024)22 b Fs(e)1856 1375 y
Fo(T)9 b(L)1953 1417 y Fs(c)1997 1432 y Fo(i)p Fm(\000)p
Fy(1)2118 1417 y Fv(\()p Fs(k)r Fv(\))i Fn(k)o Fs(x)p
Fn(k)j Fv(+)g Fs(K)6 b(d)2628 1375 y Fo(k)2667 1417 y
Fv(\()p Fs(K)19 b Fv(+)14 b Fs(c)2926 1432 y Fo(i)p Fm(\000)p
Fy(1)3047 1417 y Fv(\()p Fs(k)r Fv(\)\))d Fn(k)o Fs(x)p
Fn(k)1713 1704 y Fv(=)22 b(\(\()p Fs(e)1934 1663 y Fo(d)1993
1704 y Fv(+)14 b Fs(K)6 b(d)2211 1663 y Fo(k)2250 1704
y Fv(\))p Fs(c)2333 1720 y Fo(i)p Fm(\000)p Fy(1)2453
1704 y Fv(\()p Fs(k)r Fv(\))14 b(+)g Fs(K)2754 1663 y
Fy(2)2795 1704 y Fs(d)2850 1663 y Fo(k)2888 1704 y Fv(\))d
Fn(k)p Fs(x)p Fn(k)22 b Fv(=)h Fs(c)3248 1719 y Fo(i)3273
1704 y Fv(\()p Fs(k)r Fv(\))11 b Fn(k)o Fs(x)p Fn(k)g
Ft(:)0 1978 y Fz(Since)35 b Fs(c)300 1993 y Fo(i)325
1978 y Fv(\()p Fs(k)r Fv(\))22 b Fn(\024)g Fs(c)p Fv(\()p
Fs(k)r Fv(\))p Fz(,)35 b(and)f Fu(d)h Ft(<)22 b Fs(N)6
b(T)14 b Fz(,)35 b(by)f(induction,)f(we)i(conclude)g(that)1240
2253 y(sup)1197 2347 y Fo(s)p Fm(2)p Fk([)p Fy(0)p Fp(;)p
Fq(d)9 b Fk(])1432 2138 y Fj(\015)1432 2198 y(\015)1432
2258 y(\015)1488 2253 y Fs(G)1560 2211 y Fo(k)1598 2253
y Fv(\()p Fs(s)p Ft(;)i Fs(x)p Fv(\))j Fn(\000)g Fu(f)d
Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))2166 2138 y Fj(\015)2166
2198 y(\015)2166 2258 y(\015)2242 2253 y Fn(\024)23 b
Fs(c)p Fv(\()p Fs(k)r Fv(\))11 b Fn(k)o Fs(x)p Fn(k)h
Ft(:)p 3842 2535 59 59 v 0 2865 a Fs(B.)50 b(Derivative)34
b(Inequality)g(Lemma)100 3070 y Fz(In)39 b(this)f(critical)h(lemma,)f
(we)i(sho)n(w)e(that)g(the)h(Picard)h(iteration)e(approximately)g
(retains)h(the)g(dif)n(feren-)0 3243 y(tiability)33 b(properties)h(of)g
(the)h(solution)d(map.)j(The)f(proof)h(is)f(based)g(on)g(induction,)f
(with)h(a)h(k)o(e)o(y)f(step)g(based)0 3416 y(on)d(an)g(approach)h(in)e
([34])i(\(Proof)f(of)h(Thm)e(4.14\).)h(This)f(lemma)h(is)f(then)h
(adapted)g(to)g(the)g(e)o(xtended)f(Picard)0 3590 y(iteration)k
(introduced)g(in)g(the)h(pre)n(vious)e(section.)p Black
100 3763 a Fs(Lemma)i(10:)p Black 49 w Fz(Suppose)j(that)f(the)h
(conditions)e(of)i(Lemma)g(7)f(are)i(satis\002ed.)f(Then)f(for)h(an)o
(y)g Fs(x)24 b Fn(2)g Fs(B)3683 3778 y Fo(r)3756 3763
y Fz(and)0 3936 y(an)o(y)34 b Fs(k)24 b Fn(\025)f Fz(0,)860
4214 y(sup)815 4308 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p
Fo(T)j Fk(])1052 4069 y Fj(\015)1052 4129 y(\015)1052
4189 y(\015)1052 4249 y(\015)1140 4146 y Fu(\266)p 1118
4191 107 4 v 1118 4282 a(\266)k Fs(x)1234 4214 y Fv(\()p
Fs(P)1334 4173 y Fo(k)1372 4214 y Fs(z)p Fv(\)\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\))1644 4173 y Fo(T)1712 4214 y Fs(f)j
Fv(\()p Fs(x)p Fv(\))g Fn(\000)2007 4146 y Fu(\266)p
1991 4191 94 4 v 1991 4282 a(\266)c Fs(t)2094 4214 y
Fv(\()p Fs(P)2194 4173 y Fo(k)2232 4214 y Fs(z)p Fv(\)\()n
Fs(t)d Ft(;)k Fs(x)p Fv(\))2504 4069 y Fj(\015)2504 4129
y(\015)2504 4189 y(\015)2504 4249 y(\015)2580 4214 y
Fn(\024)2689 4146 y Fv(\()p Fs(T)i(L)p Fv(\))2890 4110
y Fo(k)p 2689 4191 240 4 v 2775 4282 a Fs(T)2950 4214
y Fn(k)p Fs(x)p Fn(k)199 4506 y Fs(Pr)l(oof:)34 b Fz(Be)o(gin)g(with)g
(the)h(identity)e(for)i Fs(k)24 b Fn(\025)f Fz(1)516
4780 y Fv(\()p Fs(P)616 4739 y Fo(k)654 4780 y Fs(z)p
Fv(\)\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))20 b(=)j Fs(x)14
b Fv(+)1195 4656 y Fi(Z)1283 4685 y Fo(t)1245 4859 y
Fy(0)1339 4780 y Fs(f)g Fv(\(\()p Fs(P)1520 4739 y Fo(k)q
Fm(\000)p Fy(1)1653 4780 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\)\))p Fs(d)5 b(s)21 b Fv(=)h Fs(x)14 b Fv(+)2333
4656 y Fi(Z)2423 4685 y Fy(0)2384 4859 y Fm(\000)n Fo(t)2496
4780 y Fs(f)g Fv(\(\()p Fs(P)2677 4739 y Fo(k)q Fm(\000)p
Fy(1)2810 4780 y Fs(z)p Fv(\)\()p Fs(s)g Fv(+)e Fs(t)7
b Ft(;)k Fs(x)p Fv(\)\))p Fs(d)5 b(s)p Ft(:)p Black 0
5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black
eop end
%%Page: 12 12
TeXDict begin 12 11 bop Black 3834 -150 a FF(12)p Black
0 116 a Fz(Then,)35 b(by)f(dif)n(ferentiating)f(the)i(right-hand)f
(side,)g(we)h(get)310 322 y Fu(\266)p 294 367 94 4 v
294 458 a(\266)10 b Fs(t)398 390 y Fv(\()p Fs(P)498 349
y Fo(k)536 390 y Fs(z)p Fv(\)\()n Fs(t)d Ft(;)k Fs(x)p
Fv(\))20 b(=)38 b Fs(f)14 b Fv(\(\()p Fs(P)1124 349 y
Fo(k)q Fm(\000)p Fy(1)1257 390 y Fs(z)p Fv(\)\()p Fz(0)p
Ft(;)d Fs(x)p Fv(\)\))j(+)1690 265 y Fi(Z)1778 294 y
Fy(0)1738 468 y Fm(\000)n Fo(t)1835 390 y Fw(\321)h Fs(f)f
Fv(\(\()p Fs(P)2102 349 y Fo(k)q Fm(\000)p Fy(1)2236
390 y Fs(z)p Fv(\)\()p Fs(s)g Fv(+)e Fs(t)7 b Ft(;)k
Fs(x)p Fv(\)\))2691 349 y Fo(T)2778 322 y Fu(\266)p 2753
367 112 4 v 2753 458 a(\266)h Fz(1)2875 390 y Fv(\()p
Fs(P)2975 349 y Fo(k)q Fm(\000)p Fy(1)3108 390 y Fs(z)p
Fv(\)\()p Fs(s)i Fv(+)e Fs(t)7 b Ft(;)k Fs(x)p Fv(\))p
Fs(d)5 b(s)828 659 y Fv(=)38 b Fs(f)14 b Fv(\(\()p Fs(P)1124
618 y Fo(k)q Fm(\000)p Fy(1)1257 659 y Fs(z)p Fv(\)\()p
Fz(0)p Ft(;)d Fs(x)p Fv(\)\))j(+)1690 535 y Fi(Z)1776
564 y Fo(t)1738 738 y Fy(0)1817 659 y Fw(\321)h Fs(f)f
Fv(\(\()p Fs(P)2084 618 y Fo(k)q Fm(\000)p Fy(1)2217
659 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d Fs(x)p Fv(\)\))2534
618 y Fo(T)2617 592 y Fu(\266)p 2598 636 101 4 v 2598
728 a(\266)h Fs(s)2708 659 y Fv(\()p Fs(P)2808 618 y
Fo(k)q Fm(\000)p Fy(1)2942 659 y Fs(z)p Fv(\)\()p Fs(s)p
Ft(;)f Fs(x)p Fv(\))p Fs(d)5 b(s)828 924 y Fv(=)38 b
Fs(f)14 b Fv(\()p Fs(x)p Fv(\))g(+)1212 799 y Fi(Z)1299
828 y Fo(t)1261 1002 y Fy(0)1340 924 y Fw(\321)h Fs(f)f
Fv(\(\()p Fs(P)1607 883 y Fo(k)q Fm(\000)p Fy(1)1741
924 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d Fs(x)p Fv(\)\))2058
883 y Fo(T)2141 856 y Fu(\266)p 2121 901 V 2121 992 a(\266)h
Fs(s)2231 924 y Fv(\()p Fs(P)2331 883 y Fo(k)q Fm(\000)p
Fy(1)2465 924 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)f Fs(x)p
Fv(\))p Fs(d)5 b(s)p Ft(;)0 1198 y Fz(and)754 1405 y
Fu(\266)p 732 1449 107 4 v 732 1541 a(\266)12 b Fs(x)848
1472 y Fv(\()p Fs(P)948 1431 y Fo(k)986 1472 y Fs(z)p
Fv(\)\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))20 b(=)j Fs(I)c
Fv(+)1521 1348 y Fi(Z)1608 1377 y Fo(t)1571 1551 y Fy(0)1650
1472 y Fw(\321)c Fs(f)f Fv(\(\()p Fs(P)1917 1431 y Fo(k)q
Fm(\000)p Fy(1)2050 1472 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\)\))2367 1431 y Fo(T)2453 1405 y Fu(\266)p
2430 1449 V 2430 1541 a(\266)h Fs(x)2547 1472 y Fv(\()p
Fs(P)2647 1431 y Fo(k)q Fm(\000)p Fy(1)2780 1472 y Fs(z)p
Fv(\)\()p Fs(s)p Ft(;)f Fs(x)p Fv(\))p Fs(d)5 b(s)p Ft(:)0
1747 y Fz(No)n(w)34 b(de\002ne)h(for)g Fs(k)25 b Fn(\025)d
Fz(1,)1026 2021 y Fs(y)1070 2038 y Fo(k)1109 2021 y Fv(\()n
Fs(t)7 b Ft(;)k Fs(x)p Fv(\))21 b Fz(:)p Fv(=)1483 1953
y Fu(\266)p 1461 1998 V 1461 2089 a(\266)12 b Fs(x)1577
2021 y Fv(\()p Fs(P)1677 1980 y Fo(k)1715 2021 y Fs(z)p
Fv(\)\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))1987 1980 y Fo(T)2055
2021 y Fs(f)j Fv(\()p Fs(x)p Fv(\))g Fn(\000)2350 1953
y Fu(\266)p 2334 1998 94 4 v 2334 2089 a(\266)c Fs(t)2438
2021 y Fv(\()p Fs(P)2538 1980 y Fo(k)2576 2021 y Fs(z)p
Fv(\)\()n Fs(t)d Ft(;)k Fs(x)p Fv(\))p Ft(:)0 2295 y
Fz(F)o(or)35 b Fs(k)24 b Fn(\025)e Fz(2,)35 b(we)g(ha)n(v)o(e)416
2569 y Fs(y)460 2586 y Fo(k)499 2569 y Fv(\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\))20 b Fz(:)p Fv(=)873 2502 y Fu(\266)p
851 2546 107 4 v 851 2638 a(\266)12 b Fs(x)967 2569 y
Fv(\()p Fs(P)1067 2528 y Fo(k)1105 2569 y Fs(z)p Fv(\)\()n
Fs(t)7 b Ft(;)k Fs(x)p Fv(\))1377 2528 y Fo(T)1445 2569
y Fs(f)j Fv(\()p Fs(x)p Fv(\))g Fn(\000)1740 2502 y Fu(\266)p
1724 2546 94 4 v 1724 2638 a(\266)c Fs(t)1827 2569 y
Fv(\()p Fs(P)1927 2528 y Fo(k)1965 2569 y Fs(z)p Fv(\)\()n
Fs(t)d Ft(;)k Fs(x)p Fv(\))713 2825 y(=)23 b Fn(\000)901
2700 y Fi(Z)989 2729 y Fo(t)951 2903 y Fy(0)1030 2825
y Fw(\321)15 b Fs(f)f Fv(\(\()p Fs(P)1297 2783 y Fo(k)q
Fm(\000)p Fy(1)1430 2825 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\)\))1747 2783 y Fo(T)1827 2757 y Fu(\266)p
1811 2802 V 1811 2893 a(\266)f Fs(t)1914 2825 y Fv(\()p
Fs(P)2014 2783 y Fo(k)q Fm(\000)p Fy(1)2148 2825 y Fs(z)p
Fv(\)\()p Fs(s)p Ft(;)h Fs(x)p Fv(\))p Fs(d)5 b(s)805
3089 y Fv(+)896 2965 y Fi(Z)983 2993 y Fo(t)946 3167
y Fy(0)1025 3089 y Fw(\321)15 b Fs(f)f Fv(\(\()p Fs(P)1292
3048 y Fo(k)q Fm(\000)p Fy(1)1425 3089 y Fs(z)p Fv(\)\()p
Fs(s)p Ft(;)d Fs(x)p Fv(\)\))1742 3048 y Fo(T)1828 3022
y Fu(\266)p 1805 3066 107 4 v 1805 3157 a(\266)h Fs(x)1921
3089 y Fv(\()p Fs(P)2021 3048 y Fo(k)q Fm(\000)p Fy(1)2155
3089 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)f Fs(x)p Fv(\))k
Fs(f)f Fv(\()p Fs(x)p Fv(\))p Fs(d)5 b(s)713 3356 y Fv(=)813
3232 y Fi(Z)900 3261 y Fo(t)863 3435 y Fy(0)942 3356
y Fw(\321)15 b Fs(f)f Fv(\(\()p Fs(P)1209 3315 y Fo(k)q
Fm(\000)p Fy(1)1342 3356 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\)\))1659 3315 y Fo(T)1724 3216 y Fj(\024)1808
3289 y Fu(\266)p 1786 3333 V 1786 3425 a(\266)h Fs(x)1902
3356 y Fv(\()p Fs(P)2002 3315 y Fo(k)q Fm(\000)p Fy(1)2136
3356 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)f Fs(x)p Fv(\))k
Fs(f)f Fv(\()p Fs(x)p Fv(\))g Fn(\000)2726 3289 y Fu(\266)p
2706 3333 101 4 v 2706 3425 a(\266)e Fs(s)2817 3356 y
Fv(\()p Fs(P)2917 3315 y Fo(k)q Fm(\000)p Fy(1)3050 3356
y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)f Fs(x)p Fv(\))3328 3216
y Fj(\025)3390 3356 y Fs(d)5 b(s)713 3630 y Fv(=)813
3506 y Fi(Z)900 3535 y Fo(t)863 3709 y Fy(0)942 3630
y Fw(\321)15 b Fs(f)f Fv(\(\()p Fs(P)1209 3589 y Fo(k)q
Fm(\000)p Fy(1)1342 3630 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\)\))1659 3589 y Fo(T)1712 3630 y Fs(y)1756
3648 y Fo(k)q Fm(\000)p Fy(1)1891 3630 y Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))p Fs(d)5 b(s)p Ft(:)0 3905 y Fz(This)34
b(means)g(that)h(since)f Fv(\()p Fs(P)1025 3869 y Fo(k)q
Fm(\000)p Fy(1)1159 3905 y Fs(z)p Fv(\)\()n Fs(t)7 b
Ft(;)k Fs(x)p Fv(\))20 b Fn(2)i Fs(B)1600 3920 y Fy(2)p
Fo(r)1673 3905 y Fz(,)34 b(by)h(induction)679 4179 y(sup)673
4273 y Fk([)p Fy(0)p Fp(;)p Fo(T)9 b Fk(])834 4179 y
Fn(k)p Fs(y)928 4196 y Fo(k)967 4179 y Fv(\()n Fs(t)e
Fv(\))p Fn(k)20 b(\024)j Fs(T)67 b Fz(sup)1325 4273 y
Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)j Fk(])1562
4064 y Fj(\015)1562 4124 y(\015)1562 4184 y(\015)1617
4179 y Fw(\321)15 b Fs(f)f Fv(\(\()p Fs(P)1884 4138 y
Fo(k)q Fm(\000)p Fy(1)2018 4179 y Fs(z)p Fv(\)\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\)\))2329 4064 y Fj(\015)2329 4124
y(\015)2329 4184 y(\015)2436 4179 y Fz(sup)2391 4273
y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)j Fk(])2628
4179 y Fn(k)p Fs(y)2722 4196 y Fo(k)q Fm(\000)p Fy(1)2856
4179 y Fv(\()n Fs(t)f Ft(;)k Fs(x)p Fv(\))p Fn(k)1148
4466 y(\024)23 b Fs(T)13 b(L)55 b Fz(sup)1380 4561 y
Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)k Fk(])1618
4466 y Fn(k)p Fs(y)1712 4484 y Fo(k)q Fm(\000)p Fy(1)1846
4466 y Fv(\()n Fs(t)e Ft(;)k Fs(x)p Fv(\))p Fn(k)20 b(\024)j
Fv(\()p Fs(T)13 b(L)p Fv(\))2411 4425 y Fk(\()p Fo(k)q
Fm(\000)p Fy(1)p Fk(\))2657 4466 y Fz(sup)2612 4561 y
Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)k Fk(])2849
4466 y Fn(k)p Fs(y)2943 4482 y Fy(1)2985 4466 y Fv(\()n
Fs(t)e Ft(;)k Fs(x)p Fv(\))p Fn(k)0 4765 y Fz(F)o(or)35
b Fs(k)24 b Fv(=)e Fz(1,)35 b Fv(\()p Fs(Pz)p Fv(\)\()n
Fs(t)7 b Ft(;)k Fs(x)p Fv(\))20 b(=)i Fs(x)p Fz(,)35
b(so)g Fs(y)1212 4781 y Fy(1)1254 4765 y Fv(\()n Fs(t)7
b Fv(\))20 b(=)38 b Fs(f)14 b Fv(\()p Fs(x)p Fv(\))34
b Fz(and)h(sup)2016 4790 y Fk([)p Fy(0)p Fp(;)p Fo(T)8
b Fk(])2181 4765 y Fn(k)p Fs(y)2275 4781 y Fy(1)2317
4765 y Fv(\()n Fs(t)f Fv(\))p Fn(k)20 b(\024)j Fs(L)11
b Fn(k)p Fs(x)p Fn(k)p Fz(.)35 b(Thus)1442 5065 y(sup)1397
5159 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p Fo(T)j Fk(])1634
5065 y Fn(k)p Fs(y)1728 5082 y Fo(k)1767 5065 y Fv(\()n
Fs(t)f Fv(\))p Fn(k)20 b(\024)2058 4997 y Fv(\()p Fs(T)12
b(L)p Fv(\))2258 4961 y Fo(k)p 2058 5042 240 4 v 2143
5133 a Fs(T)2318 5065 y Fn(k)p Fs(x)p Fn(k)f Ft(:)p Black
0 5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black
eop end
%%Page: 13 13
TeXDict begin 13 12 bop Black 3834 -150 a FF(13)p Black
3842 116 59 59 v 100 289 a Fz(W)-8 b(e)35 b(no)n(w)f(adapt)g(this)g
(lemma)g(to)h(the)f(e)o(xtended)g(Picard)i(iteration.)p
Black 100 462 a Fs(Lemma)f(11:)p Black 49 w Fz(Suppose)g(that)f(the)h
(conditions)e(of)i(Lemma)f(9)h(are)g(satis\002ed.)f(Then)h(for)g(an)o
(y)f Fs(x)23 b Fn(2)f Fs(B)3642 477 y Fo(r)3677 462 y
Fz(,)754 740 y(sup)709 834 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p
Fp(;)p Fo(T)k Fk(])946 595 y Fj(\015)946 655 y(\015)946
715 y(\015)946 775 y(\015)1034 672 y Fu(\266)p 1012 717
107 4 v 1012 808 a(\266)j Fs(x)1128 740 y(G)1200 699
y Fo(k)1238 740 y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))1432
699 y Fo(T)1501 740 y Fs(f)j Fv(\()p Fs(x)p Fv(\))g Fn(\000)1796
672 y Fu(\266)p 1780 717 94 4 v 1780 808 a(\266)c Fs(t)1883
740 y(G)1955 699 y Fo(k)1994 740 y Fv(\()n Fs(t)d Ft(;)k
Fs(x)p Fv(\))2188 595 y Fj(\015)2188 655 y(\015)2188
715 y(\015)2188 775 y(\015)2264 740 y Fn(\024)2373 672
y Fv(\()p Fs(T)i(L)p Fv(\))2574 636 y Fo(k)p 2373 717
240 4 v 2459 808 a Fs(T)2623 740 y Fv(\()p Fs(K)19 b
Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r Fv(\)\))d Fn(k)p Fs(x)p
Fn(k)199 1032 y Fs(Pr)l(oof:)34 b Fz(Recall)h(that)668
1306 y Fs(G)740 1265 y Fo(k)779 1306 y Fv(\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\))20 b Fz(:)p Fv(=)i Fs(G)1192 1321
y Fo(i)1217 1306 y Fv(\()n Fs(t)e Fn(\000)14 b Fs(iT)6
b Ft(;)11 b Fs(x)p Fv(\))99 b Fn(8)f Fs(t)28 b Fn(2)22
b Fv([)p Fs(iT)6 b Ft(;)11 b Fs(iT)26 b Fv(+)14 b Fs(T)f
Fv(])99 b Fz(and)35 b Fs(i)22 b Fv(=)g Fz(1)p Ft(;)11
b Fn(\001)g(\001)g(\001)21 b Ft(;)11 b Fw(\245)p Ft(:)0
1580 y Fz(and)35 b Fs(G)251 1544 y Fo(k)251 1611 y(i)p
Fk(+)p Fy(1)371 1580 y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p
Fv(\))21 b(=)h Fs(P)746 1544 y Fo(k)785 1580 y Fs(z)p
Fv(\()n Fs(t)7 b Ft(;)k Fs(G)1007 1544 y Fo(k)1007 1609
y(i)1043 1580 y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))34
b Fz(where)h Fs(z)22 b Fv(=)h Fz(0.)34 b(Then)h(for)e
Fs(t)28 b Fn(2)22 b Fv([)p Fs(iT)6 b Ft(;)11 b Fs(iT)26
b Fv(+)14 b Fs(T)f Fv(])p Fz(,)406 1718 y Fj(\015)406
1777 y(\015)406 1837 y(\015)406 1897 y(\015)493 1795
y Fu(\266)p 471 1839 107 4 v 471 1930 a(\266)f Fs(x)587
1862 y(G)659 1821 y Fo(k)698 1862 y Fv(\()n Fs(t)7 b
Ft(;)k Fs(x)p Fv(\))892 1821 y Fo(T)960 1862 y Fs(f)j
Fv(\()p Fs(x)p Fv(\))g Fn(\000)1255 1795 y Fu(\266)p
1239 1839 94 4 v 1239 1930 a(\266)c Fs(t)1343 1862 y(G)1415
1821 y Fo(k)1453 1862 y Fv(\()n Fs(t)d Ft(;)k Fs(x)p
Fv(\))1647 1718 y Fj(\015)1647 1777 y(\015)1647 1837
y(\015)1647 1897 y(\015)1723 1862 y Fv(=)1823 1718 y
Fj(\015)1823 1777 y(\015)1823 1837 y(\015)1823 1897 y(\015)1910
1795 y Fu(\266)p 1888 1839 107 4 v 1888 1930 a(\266)h
Fs(x)2004 1862 y(G)2076 1821 y Fo(k)2115 1862 y Fv(\()n
Fs(t)19 b Fn(\000)14 b Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))2501
1821 y Fo(T)2571 1862 y Fs(f)j Fv(\()p Fs(x)p Fv(\))g
Fn(\000)2866 1795 y Fu(\266)p 2850 1839 94 4 v 2850 1930
a(\266)c Fs(t)2953 1862 y(G)3025 1821 y Fo(k)3025 1887
y(i)3064 1862 y Fv(\()n Fs(t)19 b Fn(\000)14 b Fs(iT)6
b Ft(;)11 b Fs(x)p Fv(\))3450 1718 y Fj(\015)3450 1777
y(\015)3450 1837 y(\015)3450 1897 y(\015)616 2145 y Fv(=)716
2000 y Fj(\015)716 2060 y(\015)716 2120 y(\015)716 2179
y(\015)771 2145 y Fn(\000)874 2077 y Fu(\266)p 858 2122
V 858 2213 a(\266)f Fs(t)962 2145 y(P)1023 2103 y Fo(k)1061
2145 y Fs(z)p Fv(\()n Fs(t)20 b Fn(\000)14 b Fs(iT)6
b Ft(;)11 b Fs(G)1476 2103 y Fo(k)1476 2169 y(i)1513
2145 y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\)\))j(+)1911
2077 y Fu(\266)p 1888 2122 107 4 v 1888 2213 a(\266)e
Fs(x)2004 2145 y(P)2065 2103 y Fo(k)2104 2145 y Fv(\()n
Fs(t)19 b Fn(\000)14 b Fs(iT)6 b Ft(;)11 b Fs(G)2479
2103 y Fo(k)2479 2169 y(i)2517 2145 y Fv(\()p Fs(T)6
b Ft(;)11 b Fs(x)p Fv(\)\))2778 2103 y Fo(T)2847 2145
y Fs(f)j Fv(\()p Fs(x)p Fv(\))3011 2000 y Fj(\015)3011
2060 y(\015)3011 2120 y(\015)3011 2179 y(\015)616 2438
y Fn(\024)726 2370 y Fv(\()p Fs(T)e(L)p Fv(\))926 2334
y Fo(k)p 726 2415 240 4 v 811 2506 a Fs(T)986 2323 y
Fj(\015)986 2383 y(\015)986 2443 y(\015)1042 2438 y Fs(G)1114
2396 y Fo(k)1114 2462 y(i)1152 2438 y Fv(\()p Fs(T)6
b Ft(;)11 b Fs(x)p Fv(\))1374 2323 y Fj(\015)1374 2383
y(\015)1374 2443 y(\015)0 2712 y Fz(As)32 b(w)o(as)g(sho)n(wn)f(in)g
(the)h(proof)g(of)g(Lemma)g(9,)1689 2627 y Fj(\015)1689
2687 y(\015)1744 2712 y Fs(G)1816 2676 y Fo(k)1816 2741
y(i)1855 2712 y Fv(\()p Fs(T)6 b Ft(;)11 b Fs(x)p Fv(\))2077
2627 y Fj(\015)2077 2687 y(\015)2152 2712 y Fn(\024)21
b Fv(\()p Fs(K)d Fv(+)13 b Fs(c)2507 2727 y Fo(i)2533
2712 y Fv(\()p Fs(k)r Fv(\)\))e Fn(k)n Fs(x)p Fn(k)q
Fz(.)32 b(Thus)f(for)f Fs(t)d Fn(2)22 b Fv([)p Fs(iT)6
b Ft(;)11 b Fs(iT)23 b Fv(+)13 b Fs(T)g Fv(])p Fz(,)816
2858 y Fj(\015)816 2918 y(\015)816 2978 y(\015)816 3038
y(\015)904 2935 y Fu(\266)p 882 2980 107 4 v 882 3071
a(\266)f Fs(x)998 3003 y(G)1070 2962 y Fo(k)1108 3003
y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))1302 2962 y Fo(T)1371
3003 y Fs(f)j Fv(\()p Fs(x)p Fv(\))g Fn(\000)1666 2935
y Fu(\266)p 1650 2980 94 4 v 1650 3071 a(\266)c Fs(t)1753
3003 y(G)1825 2962 y Fo(k)1864 3003 y Fv(\()n Fs(t)d
Ft(;)k Fs(x)p Fv(\))2058 2858 y Fj(\015)2058 2918 y(\015)2058
2978 y(\015)2058 3038 y(\015)2134 3003 y Fn(\024)2243
2935 y Fv(\()p Fs(T)i(L)p Fv(\))2444 2899 y Fo(k)p 2243
2980 240 4 v 2329 3071 a Fs(T)2493 3003 y Fv(\()p Fs(K)19
b Fv(+)14 b Fs(c)2752 3018 y Fo(i)2778 3003 y Fv(\()p
Fs(k)r Fv(\)\))d Fn(k)n Fs(x)p Fn(k)0 3277 y Fz(Since)35
b(the)g Fs(c)457 3292 y Fo(i)517 3277 y Fz(are)g(non-decreasing,)735
3554 y(sup)692 3649 y Fo(t)5 b Fm(2)p Fk([)p Fy(0)p Fp(;)p
Fq(d)k Fk(])925 3410 y Fj(\015)925 3470 y(\015)925 3529
y(\015)925 3589 y(\015)1012 3487 y Fu(\266)p 990 3531
107 4 v 990 3623 a(\266)j Fs(x)1106 3554 y(G)1178 3513
y Fo(k)1216 3554 y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))1410
3513 y Fo(T)1479 3554 y Fs(f)j Fv(\()p Fs(x)p Fv(\))g
Fn(\000)1774 3487 y Fu(\266)p 1758 3531 94 4 v 1758 3623
a(\266)c Fs(t)1862 3554 y(G)1934 3513 y Fo(k)1972 3554
y Fv(\()n Fs(t)d Ft(;)k Fs(x)p Fv(\))2166 3410 y Fj(\015)2166
3470 y(\015)2166 3529 y(\015)2166 3589 y(\015)2242 3554
y Fn(\024)2352 3487 y Fv(\()p Fs(T)h(L)p Fv(\))2552 3451
y Fo(k)p 2352 3531 240 4 v 2437 3623 a Fs(T)2601 3554
y Fv(\()p Fs(K)20 b Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r Fv(\)\))d
Fn(k)o Fs(x)p Fn(k)g Ft(:)p 3842 3836 59 59 v 621 4144
a Fz(V)t(I)t(.)57 b(M)t FA(A)t(I)t(N)30 b Fz(R)t FA(E)t(S)t(U)t(L)m(T)k
Fz(-)c(A)g(C)t FA(O)t(N)t(V)t(E)t(R)t(S)t(E)35 b Fz(S)t(O)t(S)e(L)-5
b FA(Y)f(A)t(P)t(U)t(N)t(OV)34 b Fz(F)t FA(U)t(N)t(C)t(T)t(I)t(O)t(N)
100 4349 y Fz(In)25 b(this)f(section,)g(we)h(combine)g(the)g(pre)n
(vious)e(results)i(in)f(a)i(relati)n(v)o(ely)d(straightforw)o(ard)h
(manner)h(to)g(obtain)0 4522 y(a)36 b(con)l(v)o(erse)g(L)-5
b(yapuno)o(v)34 b(function)h(which)h(is)f(also)h(a)g(sum-of-squares)f
(polynomial.)f(Speci\002cally)-6 b(,)36 b(we)g(use)0
4696 y(a)e(standard)g(form)g(of)g(con)l(v)o(erse)g(L)-5
b(yapuno)o(v)32 b(function)h(and)h(substitute)f(our)h(e)o(xtended)f
(Picard)i(iteration)e(for)0 4869 y(the)i(solution)e(map.)h(Consider)h
(the)f(system)1359 5143 y(\001)-46 b Fs(x)p Fv(\()n Fs(t)7
b Fv(\))21 b(=)37 b Fs(f)14 b Fv(\()p Fs(x)p Fv(\()n
Fs(t)7 b Fv(\)\))p Ft(;)209 b Fs(x)p Fv(\()p Fz(0)p Fv(\))21
b(=)i Fs(x)2485 5159 y Fy(0)2527 5143 y Ft(:)1229 b Fz(\(8\))p
Black 0 5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p
Black eop end
%%Page: 14 14
TeXDict begin 14 13 bop Black 3834 -150 a FF(14)p Black
Black 100 116 a Fs(Theor)l(em)35 b(12:)p Black 50 w Fz(Suppose)h(that)
51 b Fs(f)g Fz(is)36 b(polynomial)f(of)i(de)o(gree)f
Fs(q)h Fz(and)f(that)h(system)e(\(8\))i(is)f(e)o(xponentially)0
289 y(stable)e(on)h Fs(M)k Fz(with)1476 462 y Fn(k)o
Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p Fn(k)21 b(\024)i Fs(K)17
b Fn(k)p Fs(x)p Fv(\()p Fz(0)p Fv(\))p Fn(k)10 b Fs(e)2260
421 y Fm(\000)p Fq(l)d Fo(t)2397 462 y Ft(;)0 736 y Fz(where)34
b Fs(M)k Fz(is)c(a)g(bounded)f(nonempty)f(re)o(gion)h(of)h(radius)f
Fs(r)r Fz(.)h(Then)g(there)g(e)o(xist)f Fu(a)8 b Ft(;)j
Fu(b)h Ft(;)f Fu(g)29 b Ft(>)22 b Fz(0)34 b(and)f(a)i(sum-of-)0
910 y(squares)g(polynomial)27 b Fs(V)13 b Fv(\()p Fs(x)p
Fv(\))35 b Fz(such)f(that)g(for)h(an)o(y)g Fs(x)22 b
Fn(2)h Fs(M)t Fz(,)1474 1184 y Fu(a)d Fn(k)o Fs(x)p Fn(k)1701
1139 y Fy(2)1764 1184 y Fn(\024)e Fs(V)12 b Fv(\()p Fs(x)p
Fv(\))22 b Fn(\024)h Fu(b)g Fn(k)p Fs(x)p Fn(k)2398 1139
y Fy(2)3784 1184 y Fz(\(9\))1460 1401 y Fw(\321)-5 b
Fs(V)13 b Fv(\()p Fs(x)p Fv(\))1722 1360 y Fo(T)1792
1401 y Fs(f)h Fv(\()p Fs(x)p Fv(\))22 b Fn(\024)h(\000)p
Fu(g)c Fn(k)p Fs(x)p Fn(k)2359 1355 y Fy(2)2412 1401
y Ft(:)1294 b Fz(\(10\))0 1675 y(Further)l(,)38 b(the)g(de)o(gree)g(of)
33 b Fs(V)51 b Fz(will)37 b(be)h(less)g(than)g Fs(q)1815
1639 y Fy(2)p Fk(\()p Fo(N)t(k)q Fm(\000)p Fy(1)p Fk(\))2098
1675 y Fz(,)g(where)g Fs(k)j Fz(is)c(the)h(minimum)e(inte)o(ger)h(such)
h(that)0 1848 y Fs(c)p Fv(\()p Fs(k)r Fv(\))22 b Ft(<)g
Fs(K)6 b Fz(,)35 b(and)946 2129 y Fs(c)p Fv(\()p Fs(k)r
Fv(\))1114 2088 y Fy(2)1169 2129 y Fv(+)1270 2062 y Fz(log)11
b(2)p Fs(K)1531 2026 y Fy(2)p 1270 2106 302 4 v 1363
2197 a Fz(2)p Fu(l)1582 2129 y Fs(K)1664 2062 y Fv(\()p
Fs(T)h(L)p Fv(\))1864 2026 y Fo(k)p 1664 2106 240 4 v
1750 2197 a Fs(T)1913 2129 y Fv(\()p Fz(1)i Fv(+)g Fs(c)p
Fv(\()p Fs(k)r Fv(\)\)\()p Fs(K)k Fv(+)c Fs(c)p Fv(\()p
Fs(k)r Fv(\)\))22 b Ft(<)2866 2062 y Fz(1)p 2866 2106
50 4 v 2866 2197 a(2)2926 2129 y Ft(;)780 b Fz(\(11\))946
2384 y Fs(c)p Fv(\()p Fs(k)r Fv(\))1114 2343 y Fy(2)1177
2384 y Ft(<)1474 2317 y Fu(l)p 1287 2361 441 4 v 1287
2452 a Fs(K)6 b(L)11 b Fz(log)g(2)p Fs(K)1686 2424 y
Fy(2)1737 2384 y Fv(\()p Fz(1)j Fn(\000)g Fv(\()p Fz(2)p
Fs(K)2092 2343 y Fy(2)2133 2384 y Fv(\))2172 2343 y Fm(\000)2243
2314 y Ff(L)p 2239 2326 40 3 v 2239 2372 a Fg(l)2292
2384 y Fv(\))p Ft(:)1375 b Fz(\(12\))0 2658 y(where)35
b Fs(c)p Fv(\()p Fs(k)r Fv(\))g Fz(is)f(de\002ned)h(as)1178
2951 y Fs(c)p Fv(\()p Fs(k)r Fv(\))22 b(=)1467 2844 y
Fo(N)t Fm(\000)p Fy(1)1491 2972 y Fh(\345)1484 3054 y
Fo(i)p Fk(=)p Fy(0)1628 2840 y Fj(\020)1688 2951 y Fs(e)1732
2909 y Fo(T)9 b(L)1843 2951 y Fv(+)14 b Fs(K)6 b Fv(\()p
Fs(T)13 b(L)p Fv(\))2207 2909 y Fo(k)2246 2840 y Fj(\021)2305
2865 y Fo(i)2341 2951 y Fs(K)2413 2909 y Fy(2)2454 2951
y Fv(\()p Fs(T)g(L)p Fv(\))2655 2909 y Fo(k)2694 2951
y Ft(:)1012 b Fz(\(13\))0 3279 y(Here)30 b Fs(T)42 b
Fz(and)29 b Fs(N)35 b Fz(are)30 b(an)o(y)e(numbers)g(chosen)h(such)g
(that)f Fs(N)6 b(T)33 b Ft(>)2251 3232 y Fy(log)9 b(2)p
Fo(K)2446 3205 y Fd(2)p 2251 3256 229 4 v 2321 3316 a
Fy(2)p Fq(l)2518 3279 y Fz(and)29 b Fs(T)j Ft(<)2906
3240 y Fy(1)p 2885 3256 80 4 v 2885 3313 a(2)p Fo(L)3003
3279 y Fz(where)e Fs(L)f Fz(is)g(a)g(Lipschitz)0 3452
y(bound)34 b(for)50 b Fs(f)f Fz(on)35 b Fs(B)723 3468
y Fy(4)p Fo(K)t(r)849 3452 y Fz(.)199 3626 y Fs(Pr)l(oof:)i
Fz(De\002ne)h Fu(d)f Fv(=)993 3579 y Fy(log)9 b(2)p Fo(K)1188
3551 y Fd(2)p 993 3603 229 4 v 1063 3662 a Fy(2)p Fq(l)1269
3626 y Fz(and)38 b Fs(d)29 b Fv(=)24 b Fs(T)13 b(L)p
Fz(.)39 b(W)-8 b(e)38 b(note)g(that)f(since)h(stability)e(implies)51
b Fs(f)14 b Fv(\()p Fz(0)p Fv(\))23 b(=)i Fz(0,)52 b
Fs(f)h Fz(is)0 3799 y(bounded)32 b(on)g(an)o(y)g Fs(B)744
3814 y Fo(r)811 3799 y Fz(with)g(bound)f Fs(Q)21 b Fv(=)h
Fs(Lr)r Fz(.)33 b(Thus)f(for)h Fs(B)2090 3815 y Fy(2)p
Fo(K)t(r)2216 3799 y Fz(,)f(we)h(use)f Fs(Q)21 b Fv(=)h
Fz(2)p Fs(K)6 b(r)34 b Fz(since)3221 3760 y Fy(2)p Fo(K)t(r)p
3221 3776 123 4 v 3255 3833 a(Q)3374 3799 y Ft(>)3504
3760 y Fy(2)p Fo(K)t(r)p 3483 3776 164 4 v 3483 3833
a Fy(2)p Fo(K)t(r)r(L)3678 3799 y Fv(=)3807 3760 y Fy(1)p
3786 3776 80 4 v 3786 3833 a(2)p Fo(L)3875 3799 y Fz(,)0
3972 y(the)g(conditions)f(of)i(Lemmas)f(7)g(and)h(9)f(are)i
(satis\002ed.By)e(Lemma)g(7,)h(the)f(Picard)h(iteration)f(con)l(v)o(er)
n(ges)g(on)0 4146 y Fv([)p Fz(0)p Ft(;)11 b Fs(T)h Fv(])34
b Fz(for)g(an)o(y)g Fs(x)22 b Fn(2)g Fs(B)788 4161 y
Fy(2)p Fo(K)t(r)948 4146 y Fz(with)34 b(rate)g Fs(d)1398
4110 y Fo(k)1437 4146 y Fz(.)g(De\002ne)g Fs(G)1867 4110
y Fo(k)1940 4146 y Fz(as)g(in)g(Lemma)f(9.)h(By)h(Lemma)e(9,)h(if)g
Fs(k)i Fz(is)e(de\002ned)g(as)0 4319 y(abo)o(v)o(e,)299
4234 y Fj(\015)299 4294 y(\015)354 4319 y Fs(G)426 4283
y Fo(k)465 4319 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))j
Fn(\000)g Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))1033
4234 y Fj(\015)1033 4294 y(\015)1111 4319 y Fn(\024)25
b Fs(c)p Fv(\()p Fs(k)r Fv(\))11 b Fn(k)o Fu(f)g Fv(\()p
Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fn(k)38 b Fz(on)h Fs(s)24
b Fn(2)h Fv([)p Fz(0)p Ft(;)11 b Fu(d)h Fv(])38 b Fz(and)g
Fs(x)25 b Fn(2)g Fs(B)2732 4334 y Fo(r)2767 4319 y Fz(.)39
b(W)-8 b(e)39 b(propose)f(the)h(follo)n(wing)0 4492 y(L)-5
b(yapuno)o(v)33 b(functions,)g(inde)o(x)o(ed)h(by)g Fs(k)r
Fz(.)1305 4767 y Fs(V)1361 4784 y Fo(k)1400 4767 y Fv(\()p
Fs(x)p Fv(\))21 b Fz(:)p Fv(=)1671 4642 y Fi(Z)1760 4671
y Fq(d)1720 4845 y Fy(0)1822 4767 y Fs(G)1894 4725 y
Fo(k)1932 4767 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))2132
4725 y Fo(T)2186 4767 y Fs(G)2258 4725 y Fo(k)2297 4767
y Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fs(d)5 b(s)0 5041
y Fz(W)-8 b(e)38 b(will)f(sho)n(w)g(that)g(for)i(an)o(y)e
Fs(k)j Fz(which)d(satis\002es)h(Inequalities)f(\(11\),)g(\(12\))h(and)g
(\(13\),)g(then)g(if)f(we)i(de\002ne)-5 5214 y Fs(V)13
b Fv(\()p Fs(x)p Fv(\))24 b(=)d Fs(V)369 5231 y Fo(k)407
5214 y Fv(\()p Fs(x)p Fv(\))p Fz(,)40 b(we)g(ha)n(v)o(e)g(that)35
b Fs(V)52 b Fz(satis\002es)40 b(the)g(L)-5 b(yapuno)o(v)38
b(Inequalities)h(\(9\))h(and)g(\(10\))g(and)g(has)g(de)o(gree)p
Black 0 5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p
Black eop end
%%Page: 15 15
TeXDict begin 15 14 bop Black 3834 -150 a FF(15)p Black
0 116 a Fz(less)34 b(than)h Fs(q)441 79 y Fy(2)p Fk(\()p
Fo(N)t(k)q Fm(\000)p Fy(1)p Fk(\))724 116 y Fz(.)g(The)g(proof)f(is)h
(di)n(vided)e(into)h(four)h(parts:)199 289 y Fs(a\))50
b(Upper)27 b(and)g(Lower)h(Bounded:)44 b Fz(T)-8 b(o)27
b(pro)o(v)o(e)g(that)22 b Fs(V)2115 306 y Fo(k)2181 289
y Fz(is)27 b(a)g(v)n(alid)g(L)-5 b(yapuno)o(v)25 b(function,)i(\002rst)
g(consider)0 462 y(upper)35 b(boundedness.)e(If)i Fs(x)23
b Fn(2)g Fs(B)34 b Fz(and)h Fs(s)22 b Fn(2)g Fv([)p Fz(0)p
Ft(;)11 b Fu(d)h Fv(])p Fz(.)34 b(Then)915 622 y Fj(\015)915
682 y(\015)915 741 y(\015)970 736 y Fs(G)1042 695 y Fo(k)1081
736 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))1281 622
y Fj(\015)1281 682 y(\015)1281 741 y(\015)1335 651 y
Fy(2)1399 736 y Fv(=)1498 622 y Fj(\015)1498 682 y(\015)1498
741 y(\015)1554 736 y Fu(f)g Fv(\()p Fs(s)p Ft(;)g Fs(x)p
Fv(\))j(+)1922 626 y Fj(h)1968 736 y Fs(G)2040 695 y
Fo(k)2079 736 y Fv(\()p Fs(s)p Ft(;)d Fs(x)p Fv(\))2279
695 y Fo(T)2347 736 y Fn(\000)j Fu(f)d Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))2701 626 y Fj(i)2747 622 y(\015)2747
682 y(\015)2747 741 y(\015)2803 651 y Fy(2)1399 980 y
Fn(\024)22 b(k)p Fu(f)11 b Fv(\()p Fs(s)p Ft(;)g Fs(x)p
Fv(\))p Fn(k)1860 934 y Fy(2)1916 980 y Fv(+)2007 866
y Fj(\015)2007 926 y(\015)2007 985 y(\015)2062 870 y(h)2109
980 y Fs(G)2181 939 y Fo(k)2220 980 y Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))2420 939 y Fo(T)2488 980 y Fn(\000)j
Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))2842 870 y
Fj(i)2889 866 y(\015)2889 926 y(\015)2889 985 y(\015)2944
895 y Fy(2)0 1255 y Fz(As)52 b(per)g(Lemma)f(9,)825 1170
y Fj(\015)825 1230 y(\015)880 1255 y Fs(G)952 1218 y
Fo(k)991 1255 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))j
Fn(\000)g Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))1559
1170 y Fj(\015)1559 1230 y(\015)1644 1255 y Fn(\024)32
b Fs(c)p Fv(\()p Fs(k)r Fv(\))11 b Fn(k)p Fu(f)g Fv(\()p
Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fn(k)31 b(\024)h Fs(K)6
b(c)p Fv(\()p Fs(k)r Fv(\))11 b Fn(k)o Fs(x)p Fn(k)p
Fz(.)52 b(From)g(stability)e(we)i(ha)n(v)o(e)0 1428 y
Fn(k)p Fu(f)11 b Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p
Fn(k)21 b(\024)i Fs(K)17 b Fn(k)o Fs(x)p Fn(k)q Fz(.)35
b(Hence,)921 1705 y Fs(V)977 1722 y Fo(k)1015 1705 y
Fv(\()p Fs(x)p Fv(\))22 b(=)1259 1580 y Fi(Z)1348 1609
y Fq(d)1308 1783 y Fy(0)1409 1590 y Fj(\015)1409 1650
y(\015)1409 1710 y(\015)1465 1705 y Fs(G)1537 1664 y
Fo(k)1575 1705 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))1775
1590 y Fj(\015)1775 1650 y(\015)1775 1710 y(\015)1830
1619 y Fy(2)1882 1705 y Fs(d)5 b(s)22 b Fn(\024)h Fu(d)12
b Fs(K)2231 1664 y Fy(2)2284 1624 y Fj(\000)2329 1705
y Fz(1)i Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\))2652 1664
y Fy(2)2693 1624 y Fj(\001)2750 1705 y Fn(k)p Fs(x)p
Fn(k)2894 1659 y Fy(2)2947 1705 y Ft(:)0 1979 y Fz(Therefore)24
b(the)g(upper)g(boundedness)e(condition)g(is)h(satis\002ed)h(for)g(an)o
(y)f Fs(k)c Fn(\025)e Fz(0)24 b(with)f Fu(b)29 b Fv(=)17
b Fu(d)12 b Fs(K)3241 1943 y Fy(2)3283 1979 y Fv(\()p
Fz(1)d Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\))3635 1943 y
Fy(2)3675 1979 y Fv(\))17 b Ft(>)g Fz(0.)100 2152 y(Ne)o(xt)34
b(we)h(consider)f(the)h(strict)f(positi)n(vity)e(condition.)h(First)h
(we)h(note)989 2427 y Fn(k)p Fu(f)11 b Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))p Fn(k)1351 2381 y Fy(2)1415 2427
y Fv(=)1514 2312 y Fj(\015)1514 2372 y(\015)1514 2432
y(\015)1570 2427 y Fs(G)1642 2386 y Fo(k)1680 2427 y
Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))j(+)1985 2316 y Fj(h)2032
2427 y Fu(f)d Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))j Fn(\000)g
Fs(G)2472 2386 y Fo(k)2510 2427 y Fv(\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\))2710 2316 y Fj(i)2756 2312 y(\015)2756 2372
y(\015)2756 2432 y(\015)2811 2341 y Fy(2)1415 2671 y
Fn(\024)1514 2556 y Fj(\015)1514 2616 y(\015)1514 2676
y(\015)1570 2671 y Fs(G)1642 2629 y Fo(k)1680 2671 y
Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))1880 2556 y Fj(\015)1880
2616 y(\015)1880 2676 y(\015)1935 2585 y Fy(2)1990 2671
y Fv(+)2081 2556 y Fj(\015)2081 2616 y(\015)2081 2676
y(\015)2137 2671 y Fu(f)g Fv(\()p Fs(s)p Ft(;)g Fs(x)p
Fv(\))j Fn(\000)g Fs(G)2577 2629 y Fo(k)2615 2671 y Fv(\()p
Fs(s)p Ft(;)d Fs(x)p Fv(\))2815 2556 y Fj(\015)2815 2616
y(\015)2815 2676 y(\015)2869 2585 y Fy(2)0 2945 y Fz(which)34
b(implies)989 3004 y Fj(\015)989 3063 y(\015)989 3123
y(\015)1045 3118 y Fs(G)1117 3077 y Fo(k)1155 3118 y
Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))1355 3004 y Fj(\015)1355
3063 y(\015)1355 3123 y(\015)1410 3032 y Fy(2)1473 3118
y Fn(\025)23 b(k)p Fu(f)11 b Fv(\()p Fs(s)p Ft(;)g Fs(x)p
Fv(\))p Fn(k)1935 3072 y Fy(2)1990 3118 y Fn(\000)2081
3004 y Fj(\015)2081 3063 y(\015)2081 3123 y(\015)2137
3118 y Fu(f)g Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))j Fn(\000)g
Fs(G)2577 3077 y Fo(k)2615 3118 y Fv(\()p Fs(s)p Ft(;)d
Fs(x)p Fv(\))2815 3004 y Fj(\015)2815 3063 y(\015)2815
3123 y(\015)2869 3032 y Fy(2)0 3392 y Fz(By)35 b(Lipschitz)f
(continuity)f(of)50 b Fs(f)14 b Fz(,)35 b Fn(k)o Fu(f)11
b Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fn(k)1593 3346
y Fy(2)1656 3392 y Fn(\025)23 b Fs(e)1800 3356 y Fm(\000)p
Fy(2)p Fo(Ls)1981 3392 y Fn(k)p Fs(x)p Fn(k)2126 3347
y Fy(2)2202 3392 y Fz(and)0 3481 y Fj(\015)0 3541 y(\015)55
3566 y Fs(G)127 3529 y Fo(k)166 3566 y Fv(\()p Fs(s)p
Ft(;)11 b Fs(x)p Fv(\))j Fn(\000)g Fu(f)d Fv(\()p Fs(s)p
Ft(;)g Fs(x)p Fv(\))734 3481 y Fj(\015)734 3541 y(\015)810
3566 y Fn(\024)22 b Fs(K)6 b(c)p Fv(\()p Fs(k)r Fv(\))11
b Fn(k)p Fs(x)p Fn(k)p Fz(.)35 b(Thus)649 3853 y Fs(V)705
3870 y Fo(k)744 3853 y Fv(\()p Fs(x)p Fv(\))22 b(=)988
3728 y Fi(Z)1077 3757 y Fq(d)1037 3931 y Fy(0)1138 3738
y Fj(\015)1138 3798 y(\015)1138 3858 y(\015)1194 3853
y Fs(G)1266 3812 y Fo(k)1304 3853 y Fv(\()p Fs(s)p Ft(;)11
b Fs(x)p Fv(\))1504 3738 y Fj(\015)1504 3798 y(\015)1504
3858 y(\015)1559 3767 y Fy(2)1611 3853 y Fs(d)5 b(s)22
b Fn(\025)1827 3712 y Fj(\022)1938 3785 y Fz(1)p 1910
3830 106 4 v 1910 3921 a(2)p Fs(L)2025 3853 y Fv(\()p
Fz(1)14 b Fn(\000)g Fs(e)2263 3812 y Fm(\000)p Fy(2)p
Fo(L)p Fq(d)2451 3853 y Fv(\))g Fn(\000)g Fu(d)e Fs(K)6
b(c)p Fv(\()p Fs(k)r Fv(\))2896 3812 y Fy(2)2937 3712
y Fj(\023)3021 3853 y Fn(k)p Fs(x)p Fn(k)3165 3807 y
Fy(2)3218 3853 y Ft(:)0 4140 y Fz(Therefore)26 b(for)f
Fs(k)h Fz(as)f(de\002ned)g(pre)n(viously)-6 b(,)1548
4101 y Fy(1)p 1527 4117 80 4 v 1527 4174 a(2)p Fo(L)1616
4140 y Fv(\()p Fz(1)9 b Fn(\000)g Fs(e)1844 4104 y Fm(\000)p
Fy(2)p Fo(L)p Fq(d)2032 4140 y Fv(\))g Fn(\000)g Fu(d)j
Fs(K)6 b(c)p Fv(\()p Fs(k)r Fv(\))2467 4104 y Fy(2)2526
4140 y Ft(>)18 b Fz(0)25 b(and)g(so)f(the)h(positi)n(vity)d(condition)0
4313 y(holds)34 b(for)h(some)f Fu(a)c Ft(>)23 b Fz(0.)199
4487 y Fs(b\))50 b(Ne)l(gativity)34 b(of)h(the)f(Derivative:)52
b Fz(Ne)o(xt,)34 b(we)h(pro)o(v)o(e)e(the)i(deri)n(v)n(ati)n(v)o(e)d
(condition.)h(Recall)606 4761 y Fs(V)662 4778 y Fo(k)701
4761 y Fv(\()p Fs(x)p Fv(\))22 b Fz(:)p Fv(=)972 4636
y Fi(Z)1062 4665 y Fq(d)1022 4839 y Fy(0)1123 4761 y
Fs(G)1195 4720 y Fo(k)1233 4761 y Fv(\()p Fs(s)p Ft(;)11
b Fs(x)p Fv(\))1433 4720 y Fo(T)1488 4761 y Fs(G)1560
4720 y Fo(k)1598 4761 y Fv(\()p Fs(s)p Ft(;)g Fs(x)p
Fv(\))p Fs(d)5 b(s)22 b Fv(=)2013 4636 y Fi(Z)2101 4665
y Fo(t)5 b Fk(+)p Fq(d)2061 4839 y Fo(t)2246 4761 y Fs(G)2318
4720 y Fo(k)2356 4761 y Fv(\()p Fs(s)14 b Fn(\000)e Fs(t)7
b Ft(;)k Fs(x)p Fv(\))2694 4720 y Fo(T)2748 4761 y Fs(G)2820
4720 y Fo(k)2859 4761 y Fv(\()p Fs(s)j Fn(\000)e Fs(t)7
b Ft(;)k Fs(x)p Fv(\))p Fs(d)5 b(s)p Black 0 5556 a FF(December)25
b(3,)e(2011)3181 b(DRAFT)p Black eop end
%%Page: 16 16
TeXDict begin 16 15 bop Black 3834 -150 a FF(16)p Black
0 116 a Fz(then)44 b(since)h Fw(\321)-5 b Fs(V)12 b Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))838 79 y Fo(T)907 116
y Fs(f)14 b Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))25
b(=)1334 76 y Fo(d)p 1322 93 66 4 v 1322 150 a(d)r(t)1393
116 y Fs(V)12 b Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))p
Fz(,)43 b(we)i(ha)n(v)o(e)f(by)g(the)h(Leibnitz)e(rule)i(for)g(dif)n
(ferentiation)e(of)0 289 y(inte)o(grals,)26 496 y Fs(d)p
10 540 87 4 v 10 631 a(d)s(t)102 563 y(V)158 580 y Fo(k)196
563 y Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))21 b(=)549
453 y Fj(h)596 563 y Fs(G)668 522 y Fo(k)707 563 y Fv(\()p
Fu(d)12 b Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))1040 522
y Fo(T)1093 563 y Fs(G)1165 522 y Fo(k)1204 563 y Fv(\()p
Fu(d)12 b Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))1537 453
y Fj(i)1596 563 y Fn(\000)1687 453 y Fj(h)1734 563 y
Fs(G)1806 522 y Fo(k)1845 563 y Fv(\()p Fz(0)p Ft(;)k
Fs(x)p Fv(\()n Fs(t)c Fv(\)\))2167 522 y Fo(T)2219 563
y Fs(G)2291 522 y Fo(k)2330 563 y Fv(\()p Fz(0)p Ft(;)k
Fs(x)p Fv(\()n Fs(t)c Fv(\)\))2652 453 y Fj(i)113 827
y Fn(\000)204 703 y Fi(Z)292 732 y Fo(t)e Fk(+)p Fq(d)252
906 y Fo(t)438 827 y Fz(2)p Fs(G)560 786 y Fo(k)598 827
y Fv(\()p Fs(s)14 b Fn(\000)e Fs(t)7 b Ft(;)k Fs(x)p
Fv(\()n Fs(t)c Fv(\)\))1047 786 y Fo(T)1134 760 y Fu(\266)p
1109 804 112 4 v 1109 896 a(\266)12 b Fz(1)1230 827 y
Fs(G)1302 786 y Fo(k)1340 827 y Fv(\()p Fs(s)i Fn(\000)e
Fs(t)7 b Ft(;)k Fs(x)p Fv(\()n Fs(t)c Fv(\)\))p Fs(d)e(s)14
b Fv(+)1988 703 y Fi(Z)2072 732 y Fo(t)5 b Fk(+)p Fq(d)2033
906 y Fo(t)2218 827 y Fz(2)p Fs(G)2340 786 y Fo(k)2378
827 y Fv(\()p Fs(s)14 b Fn(\000)e Fs(t)7 b Ft(;)k Fs(x)p
Fv(\()n Fs(t)c Fv(\)\))2827 786 y Fo(T)2914 760 y Fu(\266)p
2889 804 V 2889 896 a(\266)12 b Fz(2)3010 827 y Fs(G)3082
786 y Fo(k)3121 827 y Fv(\()p Fs(s)i Fn(\000)e Fs(t)7
b Ft(;)k Fs(x)p Fv(\()n Fs(t)c Fv(\)\))15 b Fs(f)f Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))p Fs(d)e(s)22 1101 y
Fv(=)122 986 y Fj(\015)122 1046 y(\015)122 1106 y(\015)177
1101 y Fs(G)249 1060 y Fo(k)288 1101 y Fv(\()p Fu(d)12
b Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))621 986 y Fj(\015)621
1046 y(\015)621 1106 y(\015)674 1015 y Fy(2)729 1101
y Fn(\000)14 b(k)p Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p Fn(k)1074
1055 y Fy(2)1129 1101 y Fv(+)1220 977 y Fi(Z)1310 1005
y Fq(d)1270 1179 y Fy(0)1371 1101 y Fz(2)p Fs(G)1493
1060 y Fo(k)1532 1101 y Fv(\()p Fs(s)p Ft(;)k Fs(x)p
Fv(\()n Fs(t)c Fv(\)\))1843 1060 y Fo(T)1907 960 y Fj(\024)1994
1034 y Fu(\266)p 1969 1078 V 1969 1169 a(\266)12 b Fz(2)2090
1101 y Fs(G)2162 1060 y Fo(k)2201 1101 y Fv(\()p Fs(s)p
Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))15 b Fs(f)f Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))14 b Fn(\000)2932 1034
y Fu(\266)p 2913 1078 101 4 v 2913 1169 a(\266)e Fs(s)3023
1101 y(G)3095 1060 y Fo(k)3134 1101 y Fv(\()p Fs(s)p
Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))3445 960 y Fj(\025)3506
1101 y Fs(d)e(s)0 1391 y Fz(where)295 1352 y Fq(\266)p
285 1368 67 4 v 285 1428 a(\266)k Fo(i)376 1391 y Fs(f)46
b Fz(denotes)31 b(partial)f(dif)n(ferentiation)g(of)46
b Fs(f)g Fz(with)30 b(respect)h(to)g(its)g Fs(i)p Fz(th)f(v)n(ariable.)
g(As)h(per)h(Lemma)e(11,)0 1565 y(we)35 b(ha)n(v)o(e)672
1694 y Fj(\015)672 1754 y(\015)672 1814 y(\015)672 1874
y(\015)762 1771 y Fu(\266)p 737 1816 112 4 v 737 1907
a(\266)12 b Fz(2)858 1839 y Fs(G)930 1798 y Fo(k)969
1839 y Fv(\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\()n Fs(t)c
Fv(\)\))1274 1798 y Fo(T)1341 1839 y Fs(f)14 b Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))14 b Fn(\000)1754 1771
y Fu(\266)p 1729 1816 V 1729 1907 a(\266)e Fz(1)1850
1839 y Fs(G)1922 1798 y Fo(k)1961 1839 y Fv(\()n Fs(t)7
b Ft(;)k Fs(x)p Fv(\()n Fs(t)c Fv(\)\))2266 1694 y Fj(\015)2266
1754 y(\015)2266 1814 y(\015)2266 1874 y(\015)2340 1839
y Fn(\024)2450 1771 y Fs(d)2505 1735 y Fo(k)p 2450 1816
94 4 v 2462 1907 a Fs(T)2553 1839 y Fv(\()p Fs(K)20 b
Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r Fv(\)\))d Fn(k)o Fs(x)p
Fv(\()n Fs(t)c Fv(\))p Fn(k)0 2143 y Fz(and)35 b(as)g(pre)n(viously)e
(noted)1006 2059 y Fj(\015)1006 2118 y(\015)1061 2143
y Fs(G)1133 2107 y Fo(k)1172 2143 y Fv(\()p Fu(d)12 b
Ft(;)f Fs(x)p Fv(\()n Fs(t)c Fv(\)\))1505 2059 y Fj(\015)1505
2118 y(\015)1558 2084 y Fy(2)1622 2143 y Fn(\024)22 b
Fv(\()p Fs(K)1832 2107 y Fy(2)1873 2143 y Fs(e)1917 2107
y Fm(\000)p Fy(2)p Fq(l)9 b Fk(\()p Fo(s)p Fm(\000)n
Fo(t)c Fk(\))2250 2143 y Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r
Fv(\))2509 2107 y Fy(2)2551 2143 y Fv(\))d Fn(k)o Fs(x)p
Fv(\()n Fs(t)c Fv(\))p Fn(k)2854 2097 y Fy(2)2895 2143
y Fz(.)35 b(Also,)0 2232 y Fj(\015)0 2292 y(\015)55 2317
y Fs(G)127 2280 y Fo(k)166 2317 y Fv(\()p Fs(s)p Ft(;)11
b Fs(x)p Fv(\()n Fs(t)c Fv(\)\))477 2232 y Fj(\015)477
2292 y(\015)552 2317 y Fn(\024)22 b Fs(K)6 b Fv(\()p
Fz(1)14 b Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\)\))d Fn(k)o
Fs(x)p Fv(\()n Fs(t)c Fv(\))p Fn(k)n Fz(.)35 b(W)-8 b(e)35
b(conclude)211 2540 y Fs(d)p 195 2584 87 4 v 195 2676
a(d)s(t)287 2607 y(V)343 2625 y Fo(k)382 2607 y Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))20 b Fn(\024)i Fv(\()p
Fs(K)845 2566 y Fy(2)887 2607 y Fs(e)931 2566 y Fm(\000)p
Fy(2)p Fq(l)9 b(d)1141 2607 y Fv(+)14 b Fs(c)p Fv(\()p
Fs(k)r Fv(\))1400 2566 y Fy(2)1441 2607 y Fv(\))d Fn(k)o
Fs(x)p Fv(\()n Fs(t)c Fv(\))p Fn(k)1744 2561 y Fy(2)1799
2607 y Fn(\000)14 b(k)p Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p
Fn(k)2144 2561 y Fy(2)2199 2607 y Fv(+)14 b Fz(2)p Fu(d)2412
2540 y Fs(d)2467 2504 y Fo(k)p 2412 2584 94 4 v 2425
2676 a Fs(T)2515 2607 y(K)6 b Fv(\()p Fz(1)14 b Fv(+)g
Fs(c)p Fv(\()p Fs(k)r Fv(\)\)\()p Fs(K)k Fv(+)c Fs(c)p
Fv(\()p Fs(k)r Fv(\)\))d Fn(k)p Fs(x)p Fv(\()n Fs(t)c
Fv(\))p Fn(k)3673 2561 y Fy(2)635 2875 y Fn(\024)734
2735 y Fj(\022)808 2875 y Fs(K)880 2834 y Fy(2)921 2875
y Fs(e)965 2834 y Fm(\000)p Fy(2)p Fq(l)i(d)1175 2875
y Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r Fv(\))1434 2834 y Fy(2)1489
2875 y Fn(\000)g Fz(1)g Fv(+)g Fz(2)p Fu(d)e Fs(K)1929
2808 y(d)1984 2772 y Fo(k)p 1929 2852 V 1941 2944 a Fs(T)2032
2875 y Fv(\()p Fz(1)i Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\)\)\()p
Fs(K)k Fv(+)c Fs(c)p Fv(\()p Fs(k)r Fv(\)\))2854 2735
y Fj(\023)2938 2875 y Fn(k)p Fs(x)p Fv(\()n Fs(t)7 b
Fv(\))p Fn(k)3191 2829 y Fy(2)0 3149 y Fz(Therefore,)36
b(we)f(ha)n(v)o(e)f(strict)g(ne)o(gati)n(vity)e(of)j(the)f(deri)n(v)n
(ati)n(v)o(e)f(since)814 3427 y Fs(K)886 3386 y Fy(2)928
3427 y Fs(e)972 3386 y Fm(\000)p Fy(2)p Fq(l)9 b(d)1182
3427 y Fv(+)14 b Fs(c)p Fv(\()p Fs(k)r Fv(\))1441 3386
y Fy(2)1496 3427 y Fv(+)g Fz(2)p Fu(d)1708 3359 y Fs(d)1763
3323 y Fo(k)p 1708 3404 V 1721 3495 a Fs(T)1812 3427
y Fv(\()p Fz(1)g Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\)\)\()p
Fs(K)k Fv(+)c Fs(c)p Fv(\()p Fs(k)r Fv(\)\))936 3694
y(=)1046 3626 y Fz(1)p 1046 3671 50 4 v 1046 3762 a(2)1119
3694 y Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\))1378 3652 y
Fy(2)1433 3694 y Fv(+)g Fz(2)1584 3626 y Fs(K)j Fz(log)11
b(2)p Fs(K)1928 3590 y Fy(2)p 1584 3671 385 4 v 1718
3762 a Fz(2)p Fu(l)1989 3626 y Fs(d)2044 3590 y Fo(k)p
1989 3671 94 4 v 2002 3762 a Fs(T)2093 3694 y Fv(\()p
Fz(1)j Fv(+)g Fs(c)p Fv(\()p Fs(k)r Fv(\)\)\()p Fs(K)k
Fv(+)c Fs(c)p Fv(\()p Fs(k)r Fv(\)\))21 b Ft(<)i Fz(1)0
3968 y(Thus)256 3929 y Fo(d)p 244 3945 66 4 v 244 4002
a(d)r(t)314 3968 y Fs(V)370 3985 y Fo(k)409 3968 y Fv(\()p
Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))20 b Fn(\024)j(\000)p
Fu(g)c Fn(k)p Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p Fn(k)1153
3922 y Fy(2)1229 3968 y Fz(for)35 b(some)f Fu(g)d Ft(>)22
b Fz(0.)199 4141 y Fs(c\))50 b(Sum)42 b(of)g(Squar)l(es:)59
b Fz(Since)e Fs(f)g Fz(is)41 b(polynomial)g(and)h Fs(z)g
Fz(is)g(tri)n(vially)e(polynomial,)g Fv(\()p Fs(P)3390
4105 y Fo(k)3428 4141 y Fs(z)p Fv(\)\()p Fs(s)p Ft(;)11
b Fs(x)p Fv(\))41 b Fz(is)h(a)0 4315 y(polynomial)j(in)h
Fs(x)h Fz(and)f Fs(s)p Fz(.)h(Therefore,)42 b Fs(V)1532
4332 y Fo(k)1571 4315 y Fv(\()p Fs(x)p Fv(\))k Fz(is)g(a)h(polynomial)e
(for)h(an)o(y)g Fs(k)31 b Ft(>)e Fz(0.)46 b(T)-8 b(o)47
b(sho)n(w)e(that)c Fs(V)3748 4332 y Fo(k)3834 4315 y
Fz(is)0 4488 y(sum-of-squares,)34 b(we)h(\002rst)g(re)n(write)f(the)h
(function)948 4775 y Fs(V)1004 4792 y Fo(k)1042 4775
y Fv(\()p Fs(x)p Fv(\))22 b(=)1317 4669 y Fo(N)1293 4797
y Fh(\345)1286 4879 y Fo(i)p Fk(=)p Fy(1)1413 4651 y
Fi(Z)1503 4680 y Fo(iT)1463 4854 y(iT)9 b Fm(\000)p Fo(T)1659
4665 y Fj(h)1706 4775 y Fs(G)1778 4734 y Fo(k)1778 4800
y(i)1817 4775 y Fv(\()p Fs(s)14 b Fn(\000)g Fs(iT)6 b
Ft(;)11 b Fs(x)p Fv(\))2211 4734 y Fo(T)2264 4775 y Fs(G)2336
4734 y Fo(k)2336 4800 y(i)2375 4775 y Fv(\()p Fs(s)j
Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))2769 4665
y Fj(i)2826 4775 y Fs(d)5 b(s)p Ft(:)0 5078 y Fz(Since)34
b Fs(G)327 5042 y Fo(k)327 5107 y(i)366 5078 y Fs(z)f
Fz(is)h(a)g(polynomial)e(in)h(all)h(of)g(its)f(ar)n(guments,)g
Fs(G)2139 5042 y Fo(k)2139 5107 y(i)2177 5078 y Fv(\()p
Fs(s)13 b Fn(\000)g Fs(iT)6 b Ft(;)11 b Fs(x)p Fv(\))2569
5042 y Fo(T)2624 5078 y Fs(G)2696 5042 y Fo(k)2696 5107
y(i)2735 5078 y Fv(\()p Fs(s)i Fn(\000)g Fs(iT)6 b Ft(;)11
b Fs(x)p Fv(\))34 b Fz(is)f(sum-of-squares.)0 5251 y(It)44
b(can)g(therefore)h(be)f(represented)g(as)h Fs(R)1521
5266 y Fo(i)1545 5251 y Fv(\()p Fs(x)p Fv(\))1667 5215
y Fo(T)1722 5251 y Fs(Z)1777 5266 y Fo(i)1803 5251 y
Fv(\()p Fs(s)p Fv(\))1920 5215 y Fo(T)1974 5251 y Fs(Z)2029
5266 y Fo(i)2054 5251 y Fv(\()p Fs(s)p Fv(\))p Fs(R)2232
5266 y Fo(i)2256 5251 y Fv(\()p Fs(x)p Fv(\))f Fz(for)g(some)g
(polynomial)e(v)o(ector)h Fs(R)3687 5266 y Fo(i)3756
5251 y Fz(and)p Black 0 5556 a FF(December)25 b(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 17 17
TeXDict begin 17 16 bop Black 3834 -150 a FF(17)p Black
0 116 a Fz(matrix)34 b(of)h(monomial)e(bases)h Fs(Z)1157
131 y Fo(i)1183 116 y Fz(.)h(Then)668 397 y Fs(V)724
414 y Fo(k)762 397 y Fv(\()p Fs(x)p Fv(\))22 b(=)1037
291 y Fo(N)1013 418 y Fh(\345)1006 500 y Fo(i)p Fk(=)p
Fy(1)1133 397 y Fs(R)1194 412 y Fo(i)1219 397 y Fv(\()p
Fs(x)p Fv(\))1341 356 y Fo(T)1407 273 y Fi(Z)1497 301
y Fo(iT)1457 476 y(iT)9 b Fm(\000)p Fo(T)1653 397 y Fs(Z)1708
412 y Fo(i)1733 397 y Fv(\()p Fs(s)p Fv(\))1850 356 y
Fo(T)1904 397 y Fs(Z)1959 412 y Fo(i)1985 397 y Fv(\()p
Fs(s)p Fv(\))p Fs(d)c(sR)2257 412 y Fo(i)2280 397 y Fv(\()p
Fs(x)p Fv(\))22 b(=)2555 291 y Fo(N)2531 418 y Fh(\345)2524
500 y Fo(i)p Fk(=)p Fy(1)2651 397 y Fs(R)2712 412 y Fo(i)2737
397 y Fv(\()p Fs(x)p Fv(\))2859 356 y Fo(T)2914 397 y
Fs(M)2995 412 y Fo(i)3019 397 y Fs(R)3080 412 y Fo(i)3105
397 y Fv(\()p Fs(x)p Fv(\))0 706 y Fz(Where)34 b Fs(M)380
721 y Fo(i)426 706 y Fv(=)525 632 y Fi(R)585 661 y Fo(iT)568
735 y(iT)8 b Fm(\000)p Fo(T)764 706 y Fs(Z)819 721 y
Fo(i)844 706 y Fv(\()p Fs(s)p Fv(\))961 670 y Fo(T)1015
706 y Fs(Z)1070 721 y Fo(i)1095 706 y Fv(\()p Fs(s)p
Fv(\))p Fs(d)d(s)21 b Fn(\025)h Fz(0)33 b(is)h(a)g(constant)e(matrix.)h
(This)g(pro)o(v)o(es)f(that)c Fs(V)3113 724 y Fo(k)3186
706 y Fz(is)33 b(sum-of-squares)0 880 y(since)i(it)f(is)g(a)h(sum)f(of)
h(sums-of-squares.)100 1053 y(W)-8 b(e)44 b(conclude)h(that)39
b Fs(V)h Fv(=)23 b Fs(V)1125 1070 y Fo(k)1208 1053 y
Fz(satis\002es)44 b(the)g(conditions)f(of)h(the)g(theorem)g(for)h(an)o
(y)f Fs(k)i Fz(which)e(satis\002es)0 1226 y(Inequalities)34
b(11,)g(\(12\))h(and)g(\(13\).)199 1400 y Fs(d\))50 b(De)l(gr)l(ee)32
b(Bound:)46 b Fz(Gi)n(v)o(en)30 b(a)h Fs(k)i Fz(which)e(satis\002es)f
(the)h(inequality)e(conditions)g(on)i Fs(c)p Fv(\()p
Fs(k)r Fv(\))p Fz(,)f(we)h(consider)0 1573 y(the)47 b(resulting)e(de)o
(gree)i(of)g Fs(G)1077 1537 y Fo(k)1116 1573 y Fz(,)g(and)g(hence,)g
(of)42 b Fs(V)1864 1590 y Fo(k)1902 1573 y Fz(.)47 b(If)63
b Fs(f)e Fz(is)46 b(a)i(polynomial)c(of)j(de)o(gree)g
Fs(q)p Fz(,)g(and)g Fs(y)g Fz(is)g(a)0 1747 y(polynomial)40
b(of)i(de)o(gree)g Fs(d)47 b Fz(in)42 b Fs(x)p Fz(,)g(then)g
Fs(Py)g Fz(will)f(be)i(a)f(polynomial)e(of)i(de)o(gree)g(max)p
Fn(f)p Fz(1)p Ft(;)11 b Fs(d)5 b(q)p Fn(g)41 b Fz(in)g
Fs(x)p Fz(.)i(Thus)0 1920 y(since)32 b Fs(z)20 b Fv(=)h
Fz(0,)32 b(the)f(de)o(gree)h(of)g Fs(P)1126 1884 y Fo(k)1164
1920 y Fs(z)g Fz(will)e(be)i Fs(q)1597 1884 y Fo(k)q
Fm(\000)p Fy(1)1731 1920 y Fz(.)g(If)g Fs(N)27 b Ft(>)21
b Fz(1,)32 b(then)f(the)g(de)o(gree)h(of)g Fs(G)3023
1884 y Fo(k)3023 1949 y(i)3093 1920 y Fz(will)f(be)h
Fs(q)3456 1884 y Fo(N)t(k)q Fm(\000)p Fy(1)3644 1920
y Fz(.)g(Thus)0 2093 y(the)j(maximum)e(de)o(gree)h(of)h(the)g(L)-5
b(yapuno)o(v)33 b(function)h(is)g(2)p Fs(q)2169 2057
y Fk(\()p Fo(N)t(k)q Fm(\000)p Fy(1)p Fk(\))2415 2093
y Fz(.)p 3842 2267 59 59 v 100 2440 a(In)k(the)g(proof)g(of)g(Theorem)g
(12,)g(the)f(inte)o(gration)g(interv)n(al,)g Fu(d)50
b Fz(w)o(as)39 b(chosen)e(such)h(that)g(the)g(conditions)0
2613 y(will)h(al)o(w)o(ays)h(be)h(feasible)f(for)h(some)e
Fs(k)27 b Ft(>)f Fz(0.)40 b(Ho)n(we)n(v)o(er)l(,)f(this)g(choice)i(may)
f(not)f(be)i(optimal.)d(Numerical)0 2787 y(e)o(xperimentation)47
b(has)i(sho)n(wn)f(us)g(that)h(a)g(better)g(de)o(gree)g(bound)f(may)h
(be)g(obtained)f(by)h(v)n(arying)f(this)0 2960 y(parameter)36
b(in)g(the)g(proof.)f(Ho)n(we)n(v)o(er)l(,)g(the)h(gi)n(v)o(en)e(v)n
(alue)h(is)h(one)g(which)f(we)i(ha)n(v)o(e)e(found)h(to)f(w)o(ork)h
(well)f(in)0 3133 y(the)g(v)n(ast)e(majority)h(of)h(cases.)100
3307 y(W)-8 b(e)35 b(conclude)f(this)g(section)g(by)h(commenting)e(on)h
(the)h(form)f(of)h(the)g(con)l(v)o(erse)f(L)-5 b(yapuno)o(v)33
b(function,)1291 3581 y Fs(V)1347 3598 y Fo(k)1386 3581
y Fv(\()p Fs(x)p Fv(\))22 b Fz(:)p Fv(=)1657 3456 y Fi(Z)1746
3485 y Fq(d)1707 3659 y Fy(0)1808 3581 y Fs(G)1880 3540
y Fo(k)1918 3581 y Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\))2118
3540 y Fo(T)2173 3581 y Fs(G)2245 3540 y Fo(k)2283 3581
y Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\))p Fs(d)5 b(s)p Ft(:)0
3855 y Fz(Our)24 b(L)-5 b(yapuno)o(v)22 b(function)g(is)i(de\002ned)g
(using)e(an)i(approximation)e(of)i(the)f(solution)f(map.)i(A)f(dual)h
(approach)f(to)0 4028 y(solution)i(of)h(the)h(Hamilton-Jacobi-Bellmand)
d(Equation)i(w)o(as)g(tak)o(en)h(in)f([35])h(using)e(occupation)h
(measures)0 4202 y(instead)39 b(of)h(Picard)h(iteration.)d(Indeed,)i
(the)g(dual)g(space)g(of)g(the)f(Sum)h(of)g(Squares)g(L)-5
b(yapuno)o(v)38 b(functions)0 4375 y(can)d(be)g(understood)f(in)g
(terms)g(of)h(moments)e(of)i(such)g(occupation)f(measures)g([36].)100
4549 y(As)43 b(a)h(\002nal)f(note,)h(the)f(proof)g(of)h(Theorem)f(12)g
(also)g(holds)g(for)h(time-v)n(arying)e(systems.)g(Indeed)h(the)0
4722 y(original)j(proof)h(w)o(as)g(for)h(this)e(case.)h(Ho)n(we)n(v)o
(er)l(,)f(because)i(Sum-of-Squares)f(is)g(rarely)h(used)e(for)i(time-)0
4895 y(v)n(arying)34 b(systems,)f(the)i(result)f(has)h(been)g
(simpli\002ed)e(to)h(impro)o(v)o(e)f(clarity)i(of)g(presentation.)p
Black 0 5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p
Black eop end
%%Page: 18 18
TeXDict begin 18 17 bop Black 3834 -150 a FF(18)p Black
0 116 a Fs(A.)50 b(Numerical)34 b(Illustr)o(ation)141
318 y Fz(T)-8 b(o)41 b(illustrate)f(the)h(de)o(gree)g(bound)f(and)h
(hence)h(the)f(comple)o(xity)e(of)i(analyzing)f(a)i(nonlinear)e
(system,)0 491 y(we)35 b(plot)g(the)g(de)o(gree)g(bound)f(v)o(ersus)g
(the)h(e)o(xponential)f(con)l(v)o(er)n(gence)h(rate)h(of)f(the)g(the)g
(system.)f(F)o(or)h(gi)n(v)o(en)0 664 y(parameters,)k(this)f(bound)g
(is)h(obtained)f(by)h(numerically)f(searching)h(for)g(the)g(smallest)f
Fs(k)j Fz(which)d(satis\002es)0 838 y(the)h(conditions)d(of)j(Theorem)g
(12.)f(The)h(con)l(v)o(er)n(gence)g(rate)g(parameter)g(can)g(be)g(vie)n
(wed)f(as)g(a)i(metric)e(for)0 1011 y(the)j(accurac)o(y)g(of)h(the)e
(sum-of-squares)h(approach:)g(suppose)f(we)h(ha)n(v)o(e)g(a)g(de)o
(gree)g(bound)f(as)i(a)f(function)0 1184 y(of)f(con)l(v)o(er)n(gence)f
(rate,)h Fs(d)5 b Fv(\()p Fu(g)j Fv(\))p Fz(.)39 b(If)i(it)e(is)g(not)g
(possible)f(to)h(\002nd)h(a)g(sum-of-squares)f(L)-5 b(yapuno)o(v)37
b(function)i(of)0 1358 y(de)o(gree)i Fs(d)5 b Fv(\()p
Fu(g)j Fv(\))40 b Fz(pro)o(ving)g(stability)-6 b(,)38
b(then)j(we)g(kno)n(w)f(that)g(the)h(con)l(v)o(er)n(gence)g(rate)g(of)g
(the)g(system)e(must)h(be)0 1531 y(less)34 b(than)h Fu(g)8
b Fz(.)100 1702 y(As)22 b(can)h(be)g(seen,)g(as)g(the)g(con)l(v)o(er)n
(gence)g(rate)g(increases,)g(the)g(de)o(gree)g(bound)f(decreases)h
(super)n(-e)o(xponentially)-6 b(,)0 1875 y(so)37 b(that)f(at)h
Fu(g)32 b Fv(=)24 b Fz(2)p Ft(:)p Fz(4,)36 b(only)g(a)i(quadratic)e(L)
-5 b(yapuno)o(v)36 b(function)g(is)g(required)h(to)g(pro)o(v)o(e)f
(stability)-6 b(.)35 b(F)o(or)i(cases)0 2048 y(where)g(high)e(accurac)o
(y)i(is)f(required,)g(the)g(de)o(gree)h(bound)e(increases)i(quickly;)e
(scaling)g(approximately)g(as)0 2222 y Fs(e)54 2143 y
Fd(1)p 54 2155 30 3 v 54 2198 a Fg(g)97 2222 y Fz(.)42
b(T)-8 b(o)41 b(reduce)h(the)f(comple)o(xity)e(of)i(the)g(problem,)f
(in)h(come)g(cases)h(less)f(conserv)n(ati)n(v)o(e)e(bounds)h(on)h(the)0
2395 y(de)o(gree)32 b(can)g(be)g(found)f(by)h(considering)e(the)i
(monomial)e(terms)h(in)g(the)h(v)o(ector)f(\002eld.)h(If)g(the)g
(comple)o(xity)e(is)0 2568 y(still)j(unacceptably)h(high,)g(then)g(one)
h(can)g(consider)f(the)h(use)f(of)h(parallel)f(computing:)f(unlik)o(e)g
(single-core)0 2742 y(processing,)39 b(parallel)g(computing)f(po)n(wer)
h(continues)g(to)g(increase)h(e)o(xponentially)-6 b(.)37
b(F)o(or)j(a)g(discussion)d(on)0 2915 y(using)d(parallel)g(computing)f
(to)i(solv)o(e)f(polynomial)e(optimization)h(problems,)g(we)i(refer)h
(to)f([37].)1068 3179 y(V)t(I)t(I)t(.)58 b(Q)s FA(U)q(A)t(D)t(R)t(A)-5
b(T)t(I)t(C)35 b Fz(L)-5 b FA(Y)f(A)t(P)t(U)t(N)t(OV)34
b Fz(F)t FA(U)t(N)t(C)t(T)t(I)t(O)t(N)t(S)100 3381 y
Fz(In)e(this)f(section,)g(we)h(brie\003y)g(e)o(xplore)f(the)h
(implications)e(of)i(our)g(result)f(for)h(the)g(e)o(xistence)f(of)h
(quadratic)0 3554 y(L)-5 b(yapuno)o(v)44 b(functions)g(pro)o(ving)g(e)o
(xponential)h(stability)e(of)j(nonlinear)f(systems.)f(Speci\002cally)-6
b(,)46 b(we)g(look)0 3728 y(at)39 b(when)g(the)f(theorem)h(predicts)f
(the)h(e)o(xistence)f(of)h(a)g(de)o(gree)h(bound)e(of)h(2.)f(In)h(f)o
(act,)h(by)e(e)o(xamining)f(the)0 3901 y(proof,)32 b(we)g(see)g(that)g
(if)g(the)g(system)e(satis\002es)i(the)g(conditions)e(of)i(Theorem)g
(12,)f(then)c Fs(V)13 b Fv(\()p Fs(x)p Fv(\))20 b(=)i
Fs(x)3487 3865 y Fo(T)3542 3901 y Fs(x)33 b Fz(will)e(be)0
4074 y(suf)n(\002cient)f(to)g(establish)f(stability)-6
b(.)28 b(Since)j(this)e(is)h(perhaps)g(the)g(most)g(commonly)e(used)i
(form)h(of)f(L)-5 b(yapuno)o(v)0 4248 y(function,)34
b(it)g(is)g(w)o(orth)h(considering)e(ho)n(w)h(conserv)n(ati)n(v)o(e)f
(it)i(is,)f(when)g(applied)h(to)f(nonlinear)g(systems)1667
4522 y(\001)-46 b Fs(x)q Fv(\()n Fs(t)7 b Fv(\))20 b(=)38
b Fs(f)14 b Fv(\()p Fs(x)p Fv(\()n Fs(t)7 b Fv(\)\))p
Ft(:)0 4796 y Fz(The)42 b(de)o(gree)g(bound)f(in)g(Theorem)h(12)f(is)h
(2)p Fs(q)1665 4760 y Fk(\()p Fo(N)t(k)q Fm(\000)p Fy(1)p
Fk(\))1910 4796 y Fz(,)g(where)h Fs(N)48 b Fz(is)41 b(the)h(number)f
(of)h(Picard)g(iterations,)f Fs(k)0 4969 y Fz(is)36 b(the)h(number)f
(of)h(e)o(xtensions)e(and)i Fs(q)f Fz(is)h(the)f(de)o(gree)h(of)g(the)g
(polynomial)d(v)o(ector)j(\002eld,)52 b Fs(f)14 b Fz(.)37
b(A)f(quadratic)0 5143 y(L)-5 b(yapuno)o(v)33 b(function)h(will)g(e)o
(xist)f(when)i(we)g(ha)n(v)o(e)g(a)g(single)f(iteration)g(and)h(a)g
(single)f(e)o(xtension.)f(Note)i(that)0 5316 y(when)42
b(the)g(v)o(ector)g(\002eld)h(is)f(linear)l(,)g Fs(q)26
b Fv(=)h Fz(1,)42 b(which)g(implies)f(that)h(the)g(L)-5
b(yapuno)o(v)41 b(function)g(is)h(quadratic)p Black 0
5556 a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black
eop end
%%Page: 19 19
TeXDict begin 19 18 bop Black 3834 -150 a FF(19)p Black
Black 50 1745 a @beginspecial -39 @llx 221 @lly 652 @urx
570 @ury 4146 @rwi @setspecial
%%BeginDocument: DegreePlot1v2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\latex\Papers\papers_working\Global_SOS_Lyap_v3\nonglobal-13May03\DegreePlot1v2.eps
%%CreationDate: 05/06/2011  16:21:04
%%DocumentNeededFonts: Helvetica
%%+ Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -39   221   652   570
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -39   221   652   570
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0468 6840 csm

    0     0  8296  4185 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8297 4186 rf
6 w
0 3412 6431 0 0 -3412 1077 3725 4 MP
PP
-6431 0 0 3412 6431 0 0 -3412 1077 3725 5 MP stroke
4 w
DO
SO
6 w
0 sg
1077  313 mt 7508  313 L
1077 3725 mt 7508 3725 L
7508 3725 mt 7508  313 L
1077 3725 mt 1077  313 L
1077 3725 mt 7508 3725 L
1077 3725 mt 1077  313 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3660 L
1077  313 mt 1077  378 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 930 3909 mt 
(0.05) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
2766 3725 mt 2766 3660 L
2766  313 mt 2766  378 L
2661 3909 mt 
(0.1) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
4455 3725 mt 4455 3660 L
4455  313 mt 4455  378 L
4350 3909 mt 
(0.2) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
5443 3725 mt 5443 3660 L
5443  313 mt 5443  378 L
5338 3909 mt 
(0.3) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
6144 3725 mt 6144 3660 L
6144  313 mt 6144  378 L
6039 3909 mt 
(0.4) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
6688 3725 mt 6688 3660 L
6688  313 mt 6688  378 L
6583 3909 mt 
(0.5) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
7132 3725 mt 7132 3660 L
7132  313 mt 7132  378 L
7027 3909 mt 
(0.6) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
7508 3725 mt 7508 3660 L
7508  313 mt 7508  378 L
7403 3909 mt 
(0.7) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1142 3725 L
7508 3725 mt 7443 3725 L
 763 3785 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931 3685 mt 
(0) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3156 mt 1142 3156 L
7508 3156 mt 7443 3156 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763 3216 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931 3116 mt 
(10) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 2588 mt 1142 2588 L
7508 2588 mt 7443 2588 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763 2648 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931 2548 mt 
(20) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 2019 mt 1142 2019 L
7508 2019 mt 7443 2019 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763 2079 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931 1979 mt 
(30) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 1451 mt 1142 1451 L
7508 1451 mt 7443 1451 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763 1511 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931 1411 mt 
(40) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077  882 mt 1142  882 L
7508  882 mt 7443  882 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763  942 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931  842 mt 
(50) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077  313 mt 1142  313 L
7508  313 mt 7443  313 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

 763  373 mt 
(10) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 112 FMSR

 931  273 mt 
(60) s
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077 3725 mt 1077 3725 L
1077  313 mt 7508  313 L
1077 3725 mt 7508 3725 L
7508 3725 mt 7508  313 L
1077 3725 mt 1077  313 L
gs 1077 314 6431 3412 rc
24 w
36 0 35 0 36 0 37 0 37 0 38 0 38 0 39 0 
40 0 40 0 41 0 42 0 42 0 43 40 44 0 45 0 
45 0 47 0 47 0 48 0 50 0 50 0 51 39 52 0 
54 0 55 0 56 0 57 0 59 40 60 0 62 0 63 40 
65 0 67 0 68 0 71 0 73 79 75 0 77 0 80 0 
83 0 85 0 89 80 92 0 95 0 100 0 103 79 109 0 
113 0 119 40 125 119 132 0 139 80 148 0 157 39 168 120 
180 119 195 39 212 159 233 120 256 198 287 318 326 239 375 635 
445 557 1077 409 66 MP stroke
gr

24 w
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

 649 2549 mt  -90 rotate
(Degree Bound) s
90 rotate
3379 4104 mt 
(Exponential Decay Rate) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1765 x @beginspecial -39 @llx 222 @lly 652
@urx 568 @ury 4146 @rwi @setspecial
%%BeginDocument: DegreePlot2v2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\latex\Papers\papers_working\Global_SOS_Lyap_v3\nonglobal-13May03\DegreePlot2v2.eps
%%CreationDate: 05/06/2011  16:16:04
%%DocumentNeededFonts: Helvetica
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -39   222   652   568
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -39   222   652   568
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0468 6816 csm

    0     0  8296  4141 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8297 4142 rf
6 w
0 3374 6430 0 0 -3374 1077 3685 4 MP
PP
-6430 0 0 3374 6430 0 0 -3374 1077 3685 5 MP stroke
4 w
DO
SO
6 w
0 sg
1077  311 mt 7507  311 L
1077 3685 mt 7507 3685 L
7507 3685 mt 7507  311 L
1077 3685 mt 1077  311 L
1077 3685 mt 7507 3685 L
1077 3685 mt 1077  311 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
2074 3685 mt 2074 3620 L
2074  311 mt 2074  375 L
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 168 FMSR

2032 3876 mt 
(1) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
4009 3685 mt 4009 3620 L
4009  311 mt 4009  375 L
3967 3876 mt 
(2) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
5141 3685 mt 5141 3620 L
5141  311 mt 5141  375 L
5099 3876 mt 
(3) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
5945 3685 mt 5945 3620 L
5945  311 mt 5945  375 L
5903 3876 mt 
(4) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
6568 3685 mt 6568 3620 L
6568  311 mt 6568  375 L
6526 3876 mt 
(5) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3620 L
1077  311 mt 1077  375 L
1014 3876 mt 
(.7) s
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1077 3685 L
1077 3685 mt 1110 3685 L
7507 3685 mt 7475 3685 L
1077 3685 mt 1142 3685 L
7507 3685 mt 7443 3685 L
 819 3747 mt 
(10) s
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 112 FMSR

 987 3643 mt 
(0) s
1077 3346 mt 1110 3346 L
7507 3346 mt 7475 3346 L
1077 3148 mt 1110 3148 L
7507 3148 mt 7475 3148 L
1077 3007 mt 1110 3007 L
7507 3007 mt 7475 3007 L
1077 2898 mt 1110 2898 L
7507 2898 mt 7475 2898 L
1077 2809 mt 1110 2809 L
7507 2809 mt 7475 2809 L
1077 2734 mt 1110 2734 L
7507 2734 mt 7475 2734 L
1077 2669 mt 1110 2669 L
7507 2669 mt 7475 2669 L
1077 2611 mt 1110 2611 L
7507 2611 mt 7475 2611 L
1077 2560 mt 1110 2560 L
7507 2560 mt 7475 2560 L
1077 2560 mt 1142 2560 L
7507 2560 mt 7443 2560 L
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 168 FMSR

 819 2622 mt 
(10) s
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 112 FMSR

 987 2518 mt 
(1) s
1077 2221 mt 1110 2221 L
7507 2221 mt 7475 2221 L
1077 2023 mt 1110 2023 L
7507 2023 mt 7475 2023 L
1077 1883 mt 1110 1883 L
7507 1883 mt 7475 1883 L
1077 1774 mt 1110 1774 L
7507 1774 mt 7475 1774 L
1077 1685 mt 1110 1685 L
7507 1685 mt 7475 1685 L
1077 1609 mt 1110 1609 L
7507 1609 mt 7475 1609 L
1077 1544 mt 1110 1544 L
7507 1544 mt 7475 1544 L
1077 1487 mt 1110 1487 L
7507 1487 mt 7475 1487 L
1077 1435 mt 1110 1435 L
7507 1435 mt 7475 1435 L
1077 1435 mt 1142 1435 L
7507 1435 mt 7443 1435 L
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 168 FMSR

 819 1497 mt 
(10) s
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 112 FMSR

 987 1393 mt 
(2) s
1077 1097 mt 1110 1097 L
7507 1097 mt 7475 1097 L
1077  899 mt 1110  899 L
7507  899 mt 7475  899 L
1077  758 mt 1110  758 L
7507  758 mt 7475  758 L
1077  649 mt 1110  649 L
7507  649 mt 7475  649 L
1077  560 mt 1110  560 L
7507  560 mt 7475  560 L
1077  485 mt 1110  485 L
7507  485 mt 7475  485 L
1077  419 mt 1110  419 L
7507  419 mt 7475  419 L
1077  362 mt 1110  362 L
7507  362 mt 7475  362 L
1077  311 mt 1110  311 L
7507  311 mt 7475  311 L
1077  311 mt 1142  311 L
7507  311 mt 7443  311 L
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 168 FMSR

 819  373 mt 
(10) s
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 112 FMSR

 987  269 mt 
(3) s
1077  311 mt 7507  311 L
1077 3685 mt 7507 3685 L
7507 3685 mt 7507  311 L
1077 3685 mt 1077  311 L
gs 1077 311 6431 3375 rc
24 w
7 0 9 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
9 0 8 0 8 0 9 0 8 0 9 0 8 0 9 0 
8 0 9 0 9 0 8 0 9 0 9 0 8 0 9 0 
9 0 9 0 9 0 9 0 9 0 8 0 9 0 9 0 
9 0 9 0 10 0 9 0 9 0 9 0 9 0 9 0 
10 0 9 0 9 0 10 0 9 0 9 0 10 0 9 0 
10 0 9 0 10 0 10 0 9 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 11 0 10 0 10 0 
11 0 10 0 10 0 11 0 10 0 11 0 11 0 10 0 
11 0 11 0 10 0 11 0 11 0 11 0 11 0 11 0 
11 0 11 0 11 0 11 0 11 0 12 0 11 0 11 0 
12 0 11 0 11 0 12 0 11 0 12 0 12 0 11 0 
12 0 12 0 12 0 12 0 12 0 12 0 12 0 12 0 
12 0 12 0 13 0 12 0 12 0 13 0 12 0 13 0 
12 0 13 0 13 0 13 0 12 0 13 0 13 0 13 786 
13 0 14 0 13 0 13 0 13 0 14 0 13 0 14 0 
13 0 14 0 14 0 13 0 14 0 14 0 14 0 14 0 
14 0 15 0 14 0 14 0 15 0 14 0 15 0 14 0 
15 0 15 0 15 0 15 0 15 0 15 0 15 0 16 0 
15 0 15 0 16 0 16 0 15 0 16 0 16 0 16 0 
16 0 16 0 17 0 16 0 17 0 16 0 17 0 17 0 
16 0 17 0 17 0 18 0 17 0 17 0 18 0 17 0 
18 0 18 0 18 0 18 0 18 0 19 0 18 0 19 0 
18 0 19 0 19 0 19 0 19 0 20 0 19 0 20 0 
19 0 20 0 20 0 20 0 21 0 20 0 21 0 21 0 
20 0 22 0 21 0 21 0 22 0 21 0 22 0 22 0 
23 0 22 0 23 0 23 0 23 0 23 0 23 0 24 0 
23 0 24 0 25 0 24 0 25 0 24 0 25 0 26 0 
25 0 26 0 26 0 26 0 27 0 26 0 27 0 28 0 
27 0 28 0 28 0 28 0 29 0 29 0 29 0 30 0 
30 0 30 0 30 0 31 0 31 0 32 0 32 0 32 0 
33 0 33 0 33 0 34 0 34 0 35 0 35 0 36 0 
36 0 36 0 37 0 38 0 38 0 38 0 39 0 40 0 
40 0 41 0 41 0 42 0 43 0 43 0 44 0 45 0 
45 786 46 0 47 0 48 0 49 0 49 0 50 0 52 0 
52 0 53 0 54 0 2129 1774 300 MP stroke
55 0 57 0 57 0 59 0 60 0 62 0 62 0 65 0 
65 0 68 0 69 0 70 0 73 0 74 786 77 0 79 0 
1077 988 17 MP stroke
gr

24 w
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

 634 2487 mt  -90 rotate
(Degree Bound) s
90 rotate
3379 4054 mt 
(Exponential Decay Rate) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 3687 a Fy(Fig.)23 b(2.)71 b(De)o(gree)24
b(bound)h(vs.)f(Exponential)h(Con)m(v)o(er)o(gence)g(Rate)f(for)g
Fo(K)19 b Fk(=)c Fy(1)p Fp(:)p Fy(2,)24 b Fo(r)17 b Fk(=)f
Fo(L)f Fk(=)h Fy(1,)23 b Fo(q)16 b Fk(=)f Fy(5.)24 b(Domains)h
Fq(l)f Fp(<)16 b(:)p Fy(7)23 b(and)i Fq(l)f Fp(>)16 b(:)p
Fy(7)24 b(are)f(plotted)0 3774 y(separately)k(for)f(clarity)-5
b(.)p Black 0 4200 a Fz(re)o(gardless)29 b(of)i(the)f(number)g(of)g
(iterations)g(and)g(e)o(xtensions.)e(Ho)n(we)n(v)o(er)l(,)h(in)h(the)h
(linear)f(case,)h(the)f(L)-5 b(yapuno)o(v)0 4374 y(function)42
b(will)h(not)f(necessarily)h(ha)n(v)o(e)g(the)g(form)g
Fs(x)1904 4337 y Fo(T)1960 4374 y Fs(x)p Fz(.)g(In)h(the)f(follo)n
(wing)e(theorem)h(we)i(gi)n(v)o(e)e(suf)n(\002cient)0
4547 y(conditions)27 b(on)i(the)g(v)o(ector)g(\002eld)g(and)g(decay)g
(rate)h(for)f(the)g(L)-5 b(yapuno)o(v)27 b(function)i
Fs(x)2948 4511 y Fo(T)3003 4547 y Fs(x)h Fz(to)f(pro)o(v)o(e)f(e)o
(xponential)0 4720 y(stability)-6 b(.)p Black 100 4894
a Fs(Cor)l(ollary)33 b(1:)p Black 50 w Fz(Suppose)h(that)h(system)e
(\(8\))i(is)g(e)o(xponentially)d(stable)j(with)1489 5168
y Fn(k)p Fs(x)p Fv(\()n Fs(t)7 b Fv(\))p Fn(k)21 b(\024)i
Fs(K)17 b Fn(k)o Fs(x)p Fv(\()p Fz(0)p Fv(\))p Fn(k)11
b Fs(e)2274 5127 y Fm(\000)p Fq(l)c Fo(t)p Black 0 5556
a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black eop
end
%%Page: 20 20
TeXDict begin 20 19 bop Black 3834 -150 a FF(20)p Black
0 116 a Fz(for)32 b(some)g Fu(l)h Ft(>)21 b Fz(0,)32
b Fs(K)27 b Fn(\025)21 b Fz(1)32 b(and)g(for)h(an)o(y)e
Fs(x)p Fv(\()p Fz(0)p Fv(\))21 b Fn(2)g Fs(M)t Fz(,)32
b(where)h Fs(M)j Fz(is)c(a)g(bounded)f(nonempty)g(re)o(gion)g(of)i
(radius)0 289 y Fs(r)r Fz(.)k(Let)h Fs(L)g Fz(be)g(a)f(Lipschitz)g
(bound)f(for)53 b Fs(f)f Fz(on)37 b Fs(B)1722 305 y Fy(4)p
Fo(K)t(r)1848 289 y Fz(.)h(Suppose)f(that)g(there)g(e)o(xists)f(some)
3251 250 y Fy(1)p 3230 266 80 4 v 3230 323 a(2)p Fo(L)3343
289 y Ft(>)24 b Fu(d)36 b Ft(>)24 b Fz(0)37 b(such)0
462 y(that)1091 636 y Fs(K)1163 594 y Fy(2)1205 636 y
Fs(e)1249 594 y Fm(\000)p Fy(2)p Fq(l)9 b(d)1458 636
y Fv(+)14 b Fs(c)1593 594 y Fy(2)1593 660 y(1)1649 636
y Fv(+)g Fz(2)p Fs(K)6 b Fu(d)12 b Fs(L)p Fv(\()p Fz(1)i
Fv(+)g Fs(c)2216 651 y Fy(1)2259 636 y Fv(\)\()p Fs(K)19
b Fv(+)14 b Fs(c)2557 651 y Fy(1)2599 636 y Fv(\))22
b Ft(<)g Fz(1)0 910 y(and)35 b Fs(K)6 b Fu(d)12 b Fs(L)23
b Ft(<)g Fz(1,)34 b(where)h Fs(c)921 926 y Fy(1)985 910
y Fv(=)23 b Fs(K)1157 874 y Fy(2)1198 910 y Fu(d)12 b
Fs(L)p Fz(.)36 b(Let)30 b Fs(V)12 b Fv(\()p Fs(x)p Fv(\))22
b(=)h Fs(x)1899 874 y Fo(T)1955 910 y Fs(x)p Fz(.)35
b(Then)g(for)g(an)o(y)f Fs(x)22 b Fn(2)h Fs(M)t Fz(,)1386
1164 y(\001)1363 1184 y Fs(V)13 b Fv(\()p Fs(x)p Fv(\))22
b(=)g Fw(\321)p Fs(x)1795 1143 y Fo(T)1866 1184 y Fs(f)14
b Fv(\()p Fs(x)p Fv(\))22 b Fn(\024)h(\000)p Fu(b)g Fn(k)p
Fs(x)p Fn(k)2451 1139 y Fy(2)2504 1184 y Ft(:)0 1458
y Fz(for)35 b(some)f Fu(b)g Ft(>)23 b Fz(0.)199 1632
y Fs(Pr)l(oof:)29 b Fz(W)-8 b(e)30 b(reconsider)h(the)e(proof)h(of)g
(Theorem)g(12.)g(This)f(time,)g(we)i(set)e Fs(N)e Fv(=)20
b Fs(k)i Fv(=)e Fz(1)30 b(and)g Fs(T)j Fv(=)21 b Fu(d)42
b Fz(and)0 1805 y(determine)26 b(if)h(there)f(e)o(xists)g(a)g
Fu(d)31 b Fv(=)19 b Fs(T)31 b Ft(<)1450 1766 y Fy(1)p
1429 1782 V 1429 1839 a(2)p Fo(L)1545 1805 y Fz(which)26
b(satis\002es)g(the)h(upper)n(-boundedness,)e(lo)n(wer)n(-boundedness)0
1978 y(and)40 b(deri)n(v)n(ati)n(v)o(e)d(conditions.)h(Because)e
Fs(V)13 b Fv(\()p Fs(x)p Fv(\))25 b(=)g Fu(d)12 b Fs(x)1888
1942 y Fo(T)1944 1978 y Fs(x)p Fz(,)41 b(the)e(upper)h(and)g(lo)n(wer)f
(boundedness)g(conditions)0 2152 y(are)d(immediately)d(satis\002ed.)h
(The)h(deri)n(v)n(ati)n(v)o(e)d(ne)o(gati)n(vity)g(condition)h(is)942
2426 y Fs(K)1014 2385 y Fy(2)1055 2426 y Fs(e)1099 2385
y Fm(\000)p Fy(2)p Fq(l)9 b(d)1309 2426 y Fv(+)14 b Fs(c)p
Fv(\()p Fz(1)p Fv(\))1572 2385 y Fy(2)1627 2426 y Fv(+)g
Fz(2)p Fs(K)6 b Fu(d)12 b Fs(L)p Fv(\()p Fz(1)i Fv(+)g
Fs(c)p Fv(\()p Fz(1)p Fv(\)\)\()p Fs(K)19 b Fv(+)14 b
Fs(c)p Fv(\()p Fz(1)p Fv(\)\))22 b Ft(<)g Fz(1)0 2700
y(where)35 b Fs(c)p Fv(\()p Fz(1)p Fv(\))22 b(=)g Fs(c)615
2716 y Fy(1)679 2700 y Fv(=)h Fs(K)851 2664 y Fy(2)892
2700 y Fu(d)12 b Fs(L)p Fz(.)36 b(This)e(is)g(satis\002ed)h(by)f(the)h
(statement)f(of)h(the)f(theorem.)p 3842 2700 59 59 v
100 2873 a(Note)j(that)f(neither)h(the)g(size)h(of)f(the)g(re)o(gion)f
(we)i(consider)f(nor)g(the)g(de)o(gree)g(of)g(the)g(v)o(ector)g
(\002eld)h(plays)0 3047 y(an)o(y)27 b(role)g(in)g(determining)f(the)h
(de)o(gree)h(bound.)e(T)-8 b(o)28 b(illustrate)e(the)h(conditions)f
(for)h(e)o(xistence)g(of)h(a)f(quadratic)0 3220 y(L)-5
b(yapuno)o(v)25 b(function,)i(we)g(plot)g(the)g(required)g(decay)h
(rate)g(vs.)e(the)h(Lipschitz)g(continuity)e(f)o(actor)j(in)f(Figure)g
(3)0 3394 y(for)37 b Fs(K)30 b Fv(=)23 b Fz(1)p Ft(:)p
Fz(2.)37 b(This)f(plot)g(sho)n(ws)g(that)g(as)h(the)g(Lipschitz)f
(continuity)f(of)i(the)g(v)o(ector)g(\002eld)g(increases)g(\(and)0
3567 y(the)d(\002eld)g(becomes)f(less)h(smooth\),)e(the)i(conserv)n
(atism)e(of)i(using)f(the)h(quadratic)g(L)-5 b(yapuno)o(v)32
b(function)h Fs(x)3800 3531 y Fo(T)3855 3567 y Fs(x)0
3740 y Fz(increases.)655 4048 y(V)t(I)t(I)t(I)t(.)59
b(I)t FA(M)t(P)t(L)t(I)t(C)t(A)-5 b(T)5 b(I)t(O)g(N)t(S)36
b(F)t(O)t(R)31 b Fz(S)t FA(U)t(M)t Fz(-)t FA(O)t(F)t
Fz(-)6 b(S)f FA(Q)t(U)q(A)t(R)g(E)g(S)36 b Fz(P)t FA(R)q(O)t(G)t(R)t(A)
t(M)t(M)5 b(I)t(N)t(G)100 4253 y Fz(In)39 b(this)f(section)h(we)h
(consider)f(the)g(implications)e(that)i(the)g(abo)o(v)o(e)f(results)h
(ha)n(v)o(e)g(on)g(Sum)g(of)h(Squares)0 4426 y(programming.)0
4756 y Fs(A.)50 b(Bounding)33 b(the)i(number)f(of)g(variables)100
4961 y Fz(Because)53 b(the)f(set)g(of)g(continuously)e(dif)n
(ferentiable)i(functions)f(is)g(an)i(in\002nite-dimensional)d(v)o
(ector)0 5134 y(space,)34 b(the)g(general)g(problem)f(of)h(\002nding)f
(a)h(L)-5 b(yapuno)o(v)32 b(function)h(is)g(an)h
(in\002nite-dimensional)e(feasibility)p Black 0 5556
a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black eop
end
%%Page: 21 21
TeXDict begin 21 20 bop Black 3834 -150 a FF(21)p Black
Black 290 2070 a @beginspecial -26 @llx 189 @lly 638
@urx 603 @ury 3984 @rwi @setspecial
%%BeginDocument: DegreePlotQuadratic.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\matlab\polynomial_approximation\SOS_LyaP_degbound\DegreePlotQuadratic.eps
%%CreationDate: 04/29/2011  09:47:14
%%DocumentNeededFonts: Helvetica
%%+ Times-Bold
%%+ Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -26   189   638   603
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -26   189   638   603
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0312 7236 csm

    0     0  7968  4968 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7969 4969 rf
6 w
0 4050 6175 0 0 -4050 1036 4422 4 MP
PP
-6175 0 0 4050 6175 0 0 -4050 1036 4422 5 MP stroke
4 w
DO
SO
6 w
0 sg
1036  372 mt 7211  372 L
1036 4422 mt 7211 4422 L
7211 4422 mt 7211  372 L
1036 4422 mt 1036  372 L
1036 4422 mt 7211 4422 L
1036 4422 mt 1036  372 L
1036 4422 mt 1036 4360 L
1036  373 mt 1036  434 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1003 4567 mt 
(0) s
1624 4422 mt 1624 4360 L
1624  373 mt 1624  434 L
1541 4567 mt 
(0.1) s
2212 4422 mt 2212 4360 L
2212  373 mt 2212  434 L
2129 4567 mt 
(0.2) s
2800 4422 mt 2800 4360 L
2800  373 mt 2800  434 L
2717 4567 mt 
(0.3) s
3388 4422 mt 3388 4360 L
3388  373 mt 3388  434 L
3305 4567 mt 
(0.4) s
3976 4422 mt 3976 4360 L
3976  373 mt 3976  434 L
3893 4567 mt 
(0.5) s
4564 4422 mt 4564 4360 L
4564  373 mt 4564  434 L
4481 4567 mt 
(0.6) s
5152 4422 mt 5152 4360 L
5152  373 mt 5152  434 L
5069 4567 mt 
(0.7) s
5740 4422 mt 5740 4360 L
5740  373 mt 5740  434 L
5657 4567 mt 
(0.8) s
6328 4422 mt 6328 4360 L
6328  373 mt 6328  434 L
6245 4567 mt 
(0.9) s
6916 4422 mt 6916 4360 L
6916  373 mt 6916  434 L
6883 4567 mt 
(1) s
1036 4422 mt 1097 4422 L
7211 4422 mt 7149 4422 L
 935 4466 mt 
(0) s
1036 4017 mt 1097 4017 L
7211 4017 mt 7149 4017 L
 835 4061 mt 
(0.5) s
1036 3612 mt 1097 3612 L
7211 3612 mt 7149 3612 L
 935 3656 mt 
(1) s
1036 3207 mt 1097 3207 L
7211 3207 mt 7149 3207 L
 835 3251 mt 
(1.5) s
1036 2802 mt 1097 2802 L
7211 2802 mt 7149 2802 L
 935 2846 mt 
(2) s
1036 2397 mt 1097 2397 L
7211 2397 mt 7149 2397 L
 835 2441 mt 
(2.5) s
1036 1992 mt 1097 1992 L
7211 1992 mt 7149 1992 L
 935 2036 mt 
(3) s
1036 1587 mt 1097 1587 L
7211 1587 mt 7149 1587 L
 835 1631 mt 
(3.5) s
1036 1182 mt 1097 1182 L
7211 1182 mt 7149 1182 L
 935 1226 mt 
(4) s
1036  777 mt 1097  777 L
7211  777 mt 7149  777 L
 835  821 mt 
(4.5) s
1036  373 mt 1097  373 L
7211  373 mt 7149  373 L
 935  417 mt 
(5) s
1036  372 mt 7211  372 L
1036 4422 mt 7211 4422 L
7211 4422 mt 7211  372 L
1036 4422 mt 1036  372 L
gs 1036 373 6176 4050 rc
24 w
294 -178 294 -178 294 -178 294 -167 294 -179 294 -170 294 -178 294 -180 
294 -162 294 -187 294 -169 294 -173 294 -174 294 -177 294 -172 294 -176 
294 -175 294 -167 294 -114 1330 4179 20 MP stroke
gr

24 w
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 168 FMSR

2200  269 mt 
(Decay Rate Required for a Quadratic Lyapunov Function) s
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 144 FMSR

 749 3138 mt  -90 rotate
(Exponential Decay Rate) s
90 rotate
3618 4721 mt 
(Lipschitz Factor) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 2272 a Fy(Fig.)26 b(3.)78 b(Required)27
b(decay)g(rate)g(for)f(a)g(quadratic)h(L)l(yapuno)o(v)h(function)g(vs.)
e(Lipschitz)g(bound)i(for)e Fo(K)21 b Fk(=)16 b Fy(1)p
Fp(:)p Fy(2)p Black 0 2699 a Fz(problem.)30 b(Ho)n(we)n(v)o(er)l(,)g
(the)i(set)f(of)g(sum-of-squares)g(L)-5 b(yapuno)o(v)29
b(functions)i(with)f(bounded)h(de)o(gree)g(is)g(\002nite-)0
2872 y(dimensional.)45 b(The)i(most)f(signi\002cant)g(implication)f(of)
i(our)g(theorem)g(is)f(a)i(bound)e(on)h(the)g(number)f(of)0
3045 y(v)n(ariables)j(in)f(the)h(problem)g(of)g(determining)f
(stability)g(of)h(a)h(nonlinear)e(v)o(ector)h(\002eld.)g(The)h
(nonlinear)0 3219 y(stability)33 b(problem)h(can)h(no)n(w)f(be)h(e)o
(xpressed)f(as)h(an)g(feasibility)e(problem)h(of)h(the)g(follo)n(wing)d
(form.)p Black 100 3392 a Fs(Theor)l(em)j(13:)p Black
50 w Fz(F)o(or)44 b(a)g(gi)n(v)o(en)f Fu(l)12 b Fz(,)44
b(let)g(2)p Fs(d)49 b Fz(be)44 b(the)g(de)o(gree)g(bound)f(associated)h
(with)f(Theorem)h(12)g(and)0 3565 y(de\002ne)36 b Fs(N)29
b Fv(=)484 3516 y Fk(\()p Fo(n)p Fk(+)p Fo(d)t Fk(\))p
Fy(!)p 484 3543 220 4 v 529 3600 a Fo(n)p Fy(!)p Fo(d)t
Fy(!)713 3565 y Fz(.)35 b(If)h(System)f(\(8\))h(is)f(e)o(xponentially)e
(stable)i(on)g Fs(M)k Fz(with)c(decay)h(rate)f Fu(l)48
b Fz(or)35 b(greater)l(,)h(the)0 3739 y(follo)n(wing)d(is)h(feasible)h
(for)g(some)f Fu(a)8 b Ft(;)j Fu(b)h Ft(;)f Fu(g)30 b
Ft(>)22 b Fz(0.)1205 4013 y Fb(Find:)36 b Fs(P)22 b Fn(2)g
Fr(S)1699 3972 y Fo(N)1780 4013 y Fz(:)1747 4230 y Fs(P)g
Fn(\025)h Fz(0)938 4446 y Fu(a)c Fn(k)p Fs(x)p Fn(k)1164
4401 y Fy(2)1228 4446 y Fn(\024)k Fs(Z)5 b Fv(\()p Fs(x)p
Fv(\))1510 4405 y Fo(T)1565 4446 y Fs(PZ)g Fv(\()p Fs(x)p
Fv(\))22 b Fn(\024)h Fu(b)g Fn(k)p Fs(x)p Fn(k)2152 4401
y Fy(2)2404 4446 y Fz(for)35 b(all)f Fs(x)23 b Fn(2)f
Fs(M)909 4663 y Fw(\321)991 4582 y Fj(\000)1037 4663
y Fs(Z)5 b Fv(\()p Fs(x)p Fv(\))1219 4622 y Fo(T)1274
4663 y Fs(PZ)g Fv(\()p Fs(x)p Fv(\))1517 4582 y Fj(\001)1563
4602 y Fo(T)1644 4663 y Fs(f)14 b Fv(\()p Fs(x)p Fv(\))22
b Fn(\024)h(\000)p Fu(g)c Fn(k)p Fs(x)p Fn(k)2212 4618
y Fy(2)2463 4663 y Fz(for)35 b(all)g Fs(x)23 b Fn(2)f
Fs(M)0 4937 y Fz(where)35 b Fs(Z)5 b Fv(\()p Fs(x)p Fv(\))35
b Fz(be)g(the)g(v)o(ector)f(of)h(monomials)e(in)h Fs(x)i
Fz(of)e(de)o(gree)h Fs(d)40 b Fz(or)35 b(less.)199 5111
y Fs(Pr)l(oof:)j Fz(The)g(proof)h(follo)n(ws)e(immediately)g(from)h
(the)h(f)o(act)g(that)f(a)h(polynomial)32 b Fs(V)51 b
Fz(of)39 b(de)o(gree)g(2)p Fs(d)44 b Fz(is)0 5284 y(SOS)36
b(if)e(and)h(only)f(if)h(there)g(e)o(xists)e(a)i Fs(P)22
b Fn(\025)h Fz(0)34 b(such)h(that)29 b Fs(V)13 b Fv(\()p
Fs(x)p Fv(\))22 b(=)g Fs(Z)5 b Fv(\()p Fs(x)p Fv(\))2536
5248 y Fo(T)2592 5284 y Fs(PZ)g Fv(\()p Fs(x)p Fv(\))p
Fz(.)p 3842 5284 59 59 v Black 0 5556 a FF(December)25
b(3,)e(2011)3181 b(DRAFT)p Black eop end
%%Page: 22 22
TeXDict begin 22 21 bop Black 3834 -150 a FF(22)p Black
0 116 a Fz(Our)35 b(condition)f(bounds)g(the)i(number)e(of)i(v)n
(ariables)e(in)h(the)g(feasibility)f(problem)h(associated)g(with)f
(Theo-)0 289 y(rem)i(13.)g(If)h Fs(M)j Fz(is)c(semialgebraic,)f(then)h
(the)g(conditions)f(in)h(Theorem)g(13)g(can)g(be)h(enforced)g(using)e
(sum-)0 462 y(of-squares)i(and)f(the)h(Positi)n(vstellensatz)d([38].)i
(The)h(comple)o(xity)d(of)j(solving)e(the)i(optimization)d(problem)0
636 y(will)g(depend)g(on)g(the)g(comple)o(xity)f(of)h(the)g(Positi)n
(vstellensatz)e(test.)i(If)h(positi)n(vity)d(on)i(a)g(semialgebraic)g
(set)0 809 y(is)g(decidable,)h(as)g(indicated)f(in)g([39],)h(this)f
(implies)f(the)i(question)e(of)i(local)g(stability)e(is)h(decidable.)0
1139 y Fs(B.)50 b(Local)34 b(P)-8 b(ositivity)100 1344
y Fz(Another)33 b(implication)f(of)i(our)g(result)g(is)g(that)f(it)h
(reduces)g(the)g(comple)o(xity)e(of)i(enforcing)g(the)g(positi)n(vity)0
1517 y(constraint.)i(As)i(discussed)e(in)h(Section)h(III,)g
(semide\002nite)e(programming)g(is)h(used)g(to)g(optimize)g(o)o(v)o(er)
f(the)0 1691 y(cone)29 b(of)f(sums-of-squares)f(of)i(polynomials.)d
(There)i(are)i(se)n(v)o(eral)d(dif)n(ferent)h(w)o(ays)g(the)g
(stability)f(conditions)0 1864 y(can)35 b(be)g(enforced.)g(F)o(or)g(e)o
(xample,)f(we)h(ha)n(v)o(e)f(the)h(follo)n(wing)e(theorem.)p
Black 100 2037 a Fs(Theor)l(em)i(14:)p Black 50 w Fz(Suppose)30
b(there)g(e)o(xist)f(polynomial)24 b Fs(V)43 b Fz(and)30
b(sum-of-squares)g(polynomials)e Fs(s)3447 2053 y Fy(1)3488
2037 y Ft(;)11 b Fs(s)3566 2053 y Fy(2)3607 2037 y Ft(;)g
Fs(s)3685 2053 y Fy(3)3756 2037 y Fz(and)0 2211 y Fs(s)39
2226 y Fy(4)115 2211 y Fz(such)35 b(that)f(the)h(follo)n(wing)d
(conditions)h(are)j(satis\002ed)e(for)h Fu(a)8 b Ft(;)j
Fu(g)31 b Ft(>)22 b Fz(0.)1439 2485 y Fs(V)13 b Fv(\()p
Fs(x)p Fv(\))h Fn(\000)g Fu(a)19 b Fn(k)p Fs(x)p Fn(k)1966
2439 y Fy(2)2030 2485 y Fv(=)k Fs(s)2169 2501 y Fy(1)2210
2485 y Fv(\()p Fs(x)p Fv(\))14 b(+)g Fs(g)p Fv(\()p Fs(x)p
Fv(\))p Fs(s)2648 2501 y Fy(2)2689 2485 y Fv(\()p Fs(x)p
Fv(\))1090 2702 y Fn(\000)p Fw(\321)-5 b Fs(V)13 b Fv(\()p
Fs(s)p Fv(\))1424 2660 y Fo(T)1493 2702 y Fs(f)h Fv(\()p
Fs(x)p Fv(\))g Fn(\000)g Fu(g)19 b Fn(k)p Fs(x)p Fn(k)1966
2656 y Fy(2)2030 2702 y Fv(=)k Fs(s)2169 2717 y Fy(3)2210
2702 y Fv(\()p Fs(x)p Fv(\))14 b(+)g Fs(g)p Fv(\()p Fs(x)p
Fv(\))p Fs(s)2648 2717 y Fy(4)2689 2702 y Fv(\()p Fs(x)p
Fv(\))0 2976 y Fz(Then)35 b(we)g(ha)n(v)o(e)f(e)o(xponential)f
(stability)g(of)i(System)f(\(8\))h(on)g Fn(f)p Fs(x)45
b Fz(:)f Fn(f)p Fs(y)22 b Fz(:)17 b Fs(V)12 b Fv(\()p
Fs(y)p Fv(\))22 b Fn(\024)17 b Fs(V)c Fv(\()p Fs(x)p
Fv(\))p Fn(g)22 b(\032)17 b Fs(U)10 b Fn(g)o Fz(.)100
3149 y(The)30 b(comple)o(xity)f(of)i(the)f(conditions)f(associated)i
(with)f(Theorem)g(14)h(is)f(determined)g(by)g(the)h(four)g(sum-)0
3323 y(of-squares)38 b(v)n(ariables,)g Fs(s)913 3338
y Fo(i)937 3323 y Fz(.)h(Theorem)f(14)g(uses)g(the)g(Positi)n
(vstellensatz)d(multipliers)i Fs(s)3144 3338 y Fy(2)3223
3323 y Fz(and)h Fs(s)3444 3338 y Fy(4)3524 3323 y Fz(to)g(ensure)0
3496 y(that)25 b(the)h(L)-5 b(yapuno)o(v)23 b(function)i(need)h(only)f
(be)g(positi)n(v)o(e)f(and)h(decreasing)h(on)f(the)h(re)o(gion)e
Fs(X)j Fv(=)19 b Fn(f)p Fs(x)f Fz(:)g Fs(g)p Fv(\()p
Fs(x)p Fv(\))f Fn(\025)h Fz(0)p Fn(g)p Fz(.)0 3669 y(Ho)n(we)n(v)o(er)l
(,)34 b(as)h(we)g(no)n(w)f(kno)n(w)g(that)g(the)h(L)-5
b(yapuno)o(v)33 b(function)h(can)h(be)g(assumed)f(SOS,)i(we)f(can)g
(eliminate)0 3843 y(the)g(multiplier)e Fs(s)624 3858
y Fy(2)665 3843 y Fz(,)i(reducing)f(comple)o(xity)f(of)i(the)f
(problem.)p Black 100 4016 a Fs(Theor)l(em)h(15:)p Black
50 w Fz(Suppose)40 b(there)h(e)o(xist)e(polynomial)34
b Fs(V)53 b Fz(and)40 b(sum-of-squares)g(polynomials)e
Fs(s)3528 4032 y Fy(1)3570 4016 y Fz(,)i Fs(s)3674 4032
y Fy(2)3756 4016 y Fz(and)0 4189 y Fs(s)39 4205 y Fy(3)115
4189 y Fz(such)35 b(that)f(the)h(follo)n(wing)d(conditions)h(are)j
(satis\002ed)e(for)h Fu(a)8 b Ft(;)j Fu(g)31 b Ft(>)22
b Fz(0.)1668 4464 y Fs(V)12 b Fv(\()p Fs(x)p Fv(\))i
Fn(\000)g Fu(a)19 b Fn(k)p Fs(x)p Fn(k)2194 4418 y Fy(2)2258
4464 y Fv(=)k Fs(s)2397 4479 y Fy(1)2438 4464 y Fv(\()p
Fs(x)p Fv(\))862 4680 y Fn(\000)p Fw(\321)p Fv(\()-5
b Fs(V)12 b Fv(\()p Fs(x)p Fv(\))i(+)g Fu(a)19 b Fn(k)p
Fs(x)p Fn(k)1570 4635 y Fy(2)1612 4680 y Fv(\))1651 4639
y Fo(T)1721 4680 y Fs(f)14 b Fv(\()p Fs(x)p Fv(\))g Fn(\000)g
Fu(g)19 b Fn(k)p Fs(x)p Fn(k)2194 4635 y Fy(2)2258 4680
y Fv(=)k Fs(s)2397 4696 y Fy(2)2438 4680 y Fv(\()p Fs(x)p
Fv(\))14 b(+)g Fs(g)p Fv(\()p Fs(x)p Fv(\))p Fs(s)2876
4696 y Fy(3)2917 4680 y Fv(\()p Fs(x)p Fv(\))0 4954 y
Fz(Then)26 b(we)h(ha)n(v)o(e)e(e)o(xponential)g(stability)f(of)j
(System)e(\(8\))i(for)f(an)o(y)g Fs(x)p Fv(\()p Fz(0)p
Fv(\))g Fz(such)g(that)g Fn(f)p Fs(y)18 b Fz(:)13 b Fs(V)f
Fv(\()p Fs(y)p Fv(\))18 b Fn(\024)c Fs(V)e Fv(\()p Fs(x)p
Fv(\()p Fz(0)p Fv(\)\))p Fn(g)17 b(\032)i Fs(X)0 5128
y Fz(where)35 b Fs(X)d Fz(:)p Fv(=)22 b Fn(f)p Fs(x)g
Fz(:)g Fs(g)p Fv(\()p Fs(x)p Fv(\))g Fn(\025)h Fz(0)p
Fn(g)p Fz(.)p Black 0 5556 a FF(December)i(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 23 23
TeXDict begin 23 22 bop Black 3834 -150 a FF(23)p Black
100 116 a Fz(This)50 b(simpli\002cation)f(reduces)i(the)g(size)g(of)g
(the)g(SOS)h(v)n(ariables)e(by)h(25\045)f(\(from)h(4)g(to)g(3\).)g(If)g
(the)0 289 y(semialgebraic)34 b(set)h Fs(X)44 b Fz(is)35
b(de\002ned)g(using)f(se)n(v)o(eral)h(polynomials)d(\(e.g.)j(a)h
(hypercube\),)e(then)h(the)g(reduction)0 462 y(in)f(the)g(number)g(of)g
(v)n(ariables)g(can)h(approach)f(50\045)g(.)g(SDP)i(solv)o(ers)d(are)i
(typically)e(of)h(comple)o(xity)f Fs(O)p Fv(\()p Fs(n)3796
426 y Fy(6)3836 462 y Fv(\))p Fz(,)0 636 y(where)38 b
Fs(n)g Fz(is)f(the)h(dimension)e(of)i(the)f(symmetric)g(matrix)g(v)n
(ariable.)g(In)g(the)h(abo)o(v)o(e)f(e)o(xample)g(we)h(reduced)0
809 y Fs(n)22 b Fv(=)h Fz(4)p Fs(N)41 b Fz(to)34 b Fs(n)22
b Fv(=)h Fz(3)p Fs(N)6 b Fz(.)35 b(Thus)f(this)g(simpli\002cation)f
(can)j(potentially)d(decrease)j(computation)d(by)h(a)i(f)o(actor)f(of)0
982 y(82\045.)1364 1290 y(I)t(X)t(.)57 b(N)t FA(U)t(M)t(E)t(R)t(I)t(C)t
(A)5 b(L)35 b Fz(E)t FA(X)t(A)t(M)t(P)t(L)t(E)100 1495
y Fz(In)29 b(this)f(section,)h(we)g(use)h(the)f(V)-11
b(an-der)n(-Pol)29 b(oscillator)g(to)g(illustrate)f(ho)n(w)g(the)h(de)o
(gree)h(bound)e(in\003uences)0 1668 y(the)44 b(accurac)o(y)h(of)f(the)g
(stability)e(test.)i(The)g(zero)g(equilibrium)f(point)g(of)h(the)g(V)
-11 b(an-der)n(-Pol)45 b(oscillator)e(is)0 1842 y(unstable.)26
b(In)h(re)n(v)o(erse-time,)f(ho)n(we)n(v)o(er)l(,)g(this)g(equilibrium)
f(is)i(stable)f(with)h(a)g(domain)f(of)h(attraction)g(bounded)0
2015 y(by)34 b(the)h(well-kno)n(wn)e(forw)o(ard-time)i(limit-c)o(ycle.)
e(The)i(re)n(v)o(erse-time)e(dynamics)h(are)i(as)f(follo)n(ws.)1250
2289 y(\001)-46 b Fs(x)1281 2305 y Fy(1)1323 2289 y Fv(\()n
Fs(t)7 b Fv(\))20 b(=)j Fn(\000)p Fs(x)1675 2305 y Fy(2)1717
2289 y Fv(\()n Fs(t)7 b Fv(\))1250 2506 y Fz(\001)-46
b Fs(x)1281 2522 y Fy(2)1323 2506 y Fv(\()n Fs(t)7 b
Fv(\))20 b(=)j Fn(\000)r Fu(m)8 b Fv(\()p Fz(1)14 b Fn(\000)g
Fs(x)1936 2522 y Fy(1)1978 2506 y Fv(\()n Fs(t)7 b Fv(\))2089
2465 y Fy(2)2129 2506 y Fv(\))p Fs(x)2212 2522 y Fy(2)2254
2506 y Fv(\()n Fs(t)g Fv(\))14 b(+)g Fs(x)2514 2522 y
Fy(1)2554 2506 y Fv(\()n Fs(t)7 b Fv(\))0 2780 y Fz(F)o(or)43
b(simplicity)-6 b(,)39 b(we)k(choose)h Fu(m)36 b Fv(=)27
b Fz(1.)42 b(On)h(a)g(ball)f(of)g(radius)h Fs(r)r Fz(,)f(the)h
(Lipschitz)e(constant)h(can)h(be)g(found)0 2953 y(from)31
b Fs(L)22 b Fv(=)f Fz(sup)538 2979 y Fo(x)p Fm(2)p Fo(B)667
2990 y Ff(r)710 2953 y Fn(k)p Fs(D)15 b(f)f Fv(\()p Fs(x)p
Fv(\))p Fn(k)p Fz(,)32 b(where)g Fn(k\001k)f Fz(is)g(the)h(maximum)d
(singular)i(v)n(alue)g(norm.)g(W)-8 b(e)32 b(\002nd)g(a)g(Lipschitz)0
3127 y(constant)e(for)i(the)f(V)-11 b(an-der)n(-Pol)32
b(oscillator)e(on)h(radius)g Fs(r)23 b Fv(=)e Fz(1)31
b(to)g(be)g(2)p Ft(:)p Fz(1.)g(Numerical)g(simulations)e(indicate)0
3300 y Fs(K)97 3272 y Fn(\030)97 3304 y Fv(=)200 3300
y Fz(1,)41 b(as)f(illustrated)g(in)g(Figure)h(4.)f(Gi)n(v)o(en)f(these)
i(parameters,)g(the)f(de)o(gree)h(bound)f(plot)f(is)i(illustrated)0
3473 y(in)35 b(Figure)g(5.)f(Note)h(that)g(the)f(choice)h(of)g
Fs(K)28 b Fv(=)23 b Fz(1)35 b(dramatically)f(impro)o(v)o(es)f(the)h(de)
o(gree)i(bound.)d(Numerical)0 3647 y(simulation)k(sho)n(ws)h(the)h
(decay)h(rate)f(to)g(be)g(a)h(relati)n(v)o(ely)d(constant)i
Fu(l)d Fv(=)25 b Ft(:)p Fz(542)39 b(throughout)e(the)i(unit)g(ball.)0
3820 y(This)34 b(is)g(illustrated)g(in)g(Figure)h(6.)g(This)f(gi)n(v)o
(es)f(us)h(an)h(estimate)f(of)h(the)g(de)o(gree)f(bound)g(as)h
Fs(d)27 b Fv(=)c Fz(6.)100 3994 y(T)-8 b(o)38 b(\002nd)g(the)g(con)l(v)
o(erse)f(L)-5 b(yapuno)o(v)37 b(function)g(associated)h(with)f(this)g
(de)o(gree)h(bound)f(we)i(construct)e(the)0 4167 y(Picard)e(iteration.)
1323 4441 y Fv(\()p Fs(Pz)p Fv(\)\()n Fs(t)7 b Ft(;)k
Fs(x)p Fv(\))19 b(=)k Fs(x)14 b Fv(+)1963 4317 y Fi(Z)2051
4345 y Fo(t)2013 4519 y Fy(0)2107 4441 y Fs(f)g Fv(\()p
Fz(0)p Fv(\))p Fs(d)5 b(s)21 b Fv(=)i Fs(x)p Ft(:)1281
4700 y Fv(\()p Fs(P)1381 4659 y Fy(2)1422 4700 y Fs(z)p
Fv(\)\()n Fs(t)7 b Ft(;)k Fs(x)p Fv(\))20 b(=)j Fs(x)14
b Fv(+)1963 4576 y Fi(Z)2051 4605 y Fo(t)2013 4779 y
Fy(0)2107 4700 y Fs(f)g Fv(\()p Fs(Pz)p Fv(\()p Fs(s)p
Ft(;)d Fs(x)p Fv(\)\))p Fs(d)5 b(s)1714 4959 y Fv(=)23
b Fs(x)14 b Fv(+)1963 4835 y Fi(Z)2051 4864 y Fo(t)2013
5038 y Fy(0)2107 4959 y Fs(f)g Fv(\()p Fs(x)p Fv(\))p
Fs(d)5 b(s)1714 5203 y Fv(=)23 b Fs(x)14 b Fv(+)29 b
Fs(f)14 b Fv(\()p Fs(x)p Fv(\))n Fs(t)p Black 0 5556
a FF(December)25 b(3,)e(2011)3181 b(DRAFT)p Black eop
end
%%Page: 24 24
TeXDict begin 24 23 bop Black 3834 -150 a FF(24)p Black
Black 0 1457 a @beginspecial -26 @llx 177 @lly 638 @urx
614 @ury 2656 @rwi @setspecial
%%BeginDocument: estim_K.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\matlab\nonlinear_stability\estim_K.eps
%%CreationDate: 05/05/2011  19:30:00
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -26   177   638   614
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -26   177   638   614
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0312 7368 csm

    0     0  7968  5243 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7969 5244 rf
6 w
0 4274 4274 0 0 -4274 1986 4666 4 MP
PP
-4274 0 0 4274 4274 0 0 -4274 1986 4666 5 MP stroke
4 w
DO
SO
6 w
0 sg
1986  392 mt 6260  392 L
1986 4666 mt 6260 4666 L
6260 4666 mt 6260  392 L
1986 4666 mt 1986  392 L
1986 4666 mt 6260 4666 L
1986 4666 mt 1986  392 L
1986 4666 mt 1986 4623 L
1986  392 mt 1986  435 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1883 4811 mt 
(-1) s
2414 4666 mt 2414 4623 L
2414  392 mt 2414  435 L
2261 4811 mt 
(-0.8) s
2841 4666 mt 2841 4623 L
2841  392 mt 2841  435 L
2688 4811 mt 
(-0.6) s
3268 4666 mt 3268 4623 L
3268  392 mt 3268  435 L
3115 4811 mt 
(-0.4) s
3696 4666 mt 3696 4623 L
3696  392 mt 3696  435 L
3543 4811 mt 
(-0.2) s
4123 4666 mt 4123 4623 L
4123  392 mt 4123  435 L
4090 4811 mt 
(0) s
4550 4666 mt 4550 4623 L
4550  392 mt 4550  435 L
4467 4811 mt 
(0.2) s
4978 4666 mt 4978 4623 L
4978  392 mt 4978  435 L
4895 4811 mt 
(0.4) s
5405 4666 mt 5405 4623 L
5405  392 mt 5405  435 L
5322 4811 mt 
(0.6) s
5832 4666 mt 5832 4623 L
5832  392 mt 5832  435 L
5749 4811 mt 
(0.8) s
6260 4666 mt 6260 4623 L
6260  392 mt 6260  435 L
6227 4811 mt 
(1) s
1986 4666 mt 2029 4666 L
6260 4666 mt 6217 4666 L
1816 4710 mt 
(-1) s
1986 4238 mt 2029 4238 L
6260 4238 mt 6217 4238 L
1716 4282 mt 
(-0.8) s
1986 3811 mt 2029 3811 L
6260 3811 mt 6217 3811 L
1716 3855 mt 
(-0.6) s
1986 3384 mt 2029 3384 L
6260 3384 mt 6217 3384 L
1716 3428 mt 
(-0.4) s
1986 2956 mt 2029 2956 L
6260 2956 mt 6217 2956 L
1716 3000 mt 
(-0.2) s
1986 2529 mt 2029 2529 L
6260 2529 mt 6217 2529 L
1886 2573 mt 
(0) s
1986 2102 mt 2029 2102 L
6260 2102 mt 6217 2102 L
1786 2146 mt 
(0.2) s
1986 1674 mt 2029 1674 L
6260 1674 mt 6217 1674 L
1786 1718 mt 
(0.4) s
1986 1247 mt 2029 1247 L
6260 1247 mt 6217 1247 L
1786 1291 mt 
(0.6) s
1986  820 mt 2029  820 L
6260  820 mt 6217  820 L
1786  864 mt 
(0.8) s
1986  392 mt 2029  392 L
6260  392 mt 6217  392 L
1886  436 mt 
(1) s
1986  392 mt 6260  392 L
1986 4666 mt 6260 4666 L
6260 4666 mt 6260  392 L
1986 4666 mt 1986  392 L
gs 1986 392 4275 4275 rc
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
5 -136 13 -134 21 -134 30 -133 38 -130 47 -127 54 -124 62 -121 
70 -116 77 -112 83 -106 91 -101 96 -95 103 -89 108 -82 113 -75 
117 -68 121 -60 126 -53 128 -44 130 -36 133 -28 134 -19 135 -11 
136 -2 135 6 135 15 134 24 131 32 130 40 126 48 124 57 
119 64 115 71 111 79 105 85 100 92 93 98 87 104 81 109 
73 115 66 118 58 122 51 126 42 129 34 131 26 133 17 135 
8 135 0 136 -8 135 -17 135 -26 133 -34 131 -42 129 -51 126 
-58 122 -66 118 -73 115 -81 109 -87 104 -93 98 -100 92 -105 85 
-111 79 -115 71 -119 64 -124 57 -126 48 -130 40 -131 32 -134 24 
-135 15 -135 6 -136 -2 -135 -11 -134 -19 -133 -28 -130 -36 -128 -44 
-126 -53 -121 -60 -117 -68 -113 -75 -108 -82 -103 -89 -96 -95 -91 -101 
-83 -106 -77 -112 -70 -116 -62 -121 -54 -124 -47 -127 -38 -130 -30 -133 
-21 -134 -13 -134 -5 -136 6260 2529 100 MP stroke
0 sg
-1 0 1 -1 1 -1 1 -1 1 0 1 0 1 1 0 5 
-1 1 -1 2 -1 1 -2 2 -2 2 -2 2 -3 1 -3 2 
-3 1 -3 0 -3 0 -3 -1 -3 -1 -2 -2 -2 -4 -2 -4 
0 -11 2 -7 3 -9 5 -8 7 -11 10 -12 11 -11 15 -11 
14 -10 17 -8 18 -7 19 -4 19 -1 19 3 17 7 17 12 
13 17 11 23 5 30 -1 36 -10 48 -20 55 -32 62 -45 67 
-57 68 -70 68 -83 66 -95 61 -104 50 -111 36 -117 16 -117 -8 
-105 -35 -97 -64 -83 -94 -64 -126 -17 -51 -13 -56 -10 -58 -6 -63 
-1 -12 -1 -13 0 -40 5191 2529 68 MP stroke
c8
1 -61 6 -60 10 -60 13 -59 17 -58 21 -57 24 -56 28 -54 
31 -52 35 -50 37 -47 40 -45 44 -43 46 -40 48 -36 50 -34 
53 -30 54 -27 56 -24 57 -19 59 -17 59 -12 60 -9 61 -4 
60 -1 61 3 60 6 60 11 59 14 58 18 56 22 55 25 
54 29 51 32 50 35 47 38 44 41 42 44 39 46 36 49 
33 51 29 53 26 55 23 56 19 58 15 58 11 60 8 60 
4 61 0 60 -4 61 -8 60 -11 60 -15 58 -19 58 -23 56 
-26 55 -29 53 -33 51 -36 49 -39 46 -42 44 -44 41 -47 38 
-50 35 -51 32 -54 29 -55 25 -56 22 -58 18 -59 14 -60 11 
-60 6 -61 3 -60 -1 -61 -4 -60 -9 -59 -12 -59 -17 -57 -19 
-56 -24 -54 -27 -53 -30 -50 -34 -48 -36 -46 -40 -44 -43 -40 -45 
-37 -47 -35 -50 -31 -52 -28 -54 -24 -56 -21 -57 -17 -58 -13 -59 
-10 -60 -6 -60 -1 -61 5078 2529 100 MP stroke
1 -35 4 -35 5 -34 8 -35 10 -33 12 -33 14 -32 16 -31 
18 -30 20 -29 21 -28 24 -26 25 -24 26 -23 28 -21 29 -20 
30 -17 32 -16 32 -13 33 -12 34 -9 34 -7 35 -5 35 -3 
35 -1 35 2 35 4 34 6 34 8 33 11 33 12 32 15 
31 16 30 19 28 20 27 22 26 24 24 25 23 27 20 28 
19 30 17 30 15 32 13 32 11 34 9 33 7 35 4 35 
2 34 0 36 -2 34 -4 35 -7 35 -9 33 -11 34 -13 32 
-15 32 -17 30 -19 30 -20 28 -23 27 -24 25 -26 24 -27 22 
-28 20 -30 19 -31 16 -32 15 -33 12 -33 11 -34 8 -34 6 
-35 4 -35 2 -35 -1 -35 -3 -35 -5 -34 -7 -34 -9 -33 -12 
-32 -13 -32 -16 -30 -17 -29 -20 -28 -21 -26 -23 -25 -24 -24 -26 
-21 -28 -20 -29 -18 -30 -16 -31 -14 -32 -12 -33 -10 -33 -8 -35 
-5 -34 -4 -35 -1 -35 4675 2529 100 MP stroke
0 -19 2 -19 3 -19 5 -19 5 -18 6 -18 8 -18 9 -17 
10 -16 11 -16 12 -15 12 -15 14 -13 14 -13 16 -11 16 -11 
16 -9 17 -9 18 -7 18 -7 19 -5 19 -4 19 -2 19 -2 
19 0 19 1 19 2 19 3 19 5 18 5 18 7 17 8 
17 9 16 10 16 12 15 12 14 13 13 14 13 14 11 16 
10 16 10 17 8 17 7 18 6 18 5 18 3 19 3 19 
1 19 0 20 -1 19 -3 19 -3 19 -5 18 -6 18 -7 18 
-8 17 -10 17 -10 16 -11 16 -13 14 -13 14 -14 13 -15 12 
-16 12 -16 10 -17 9 -17 8 -18 7 -18 5 -19 5 -19 3 
-19 2 -19 1 -19 0 -19 -2 -19 -2 -19 -4 -19 -5 -18 -7 
-18 -7 -17 -9 -16 -9 -16 -11 -16 -11 -14 -13 -14 -13 -12 -15 
-12 -15 -11 -16 -10 -16 -9 -17 -8 -18 -6 -18 -5 -18 -5 -19 
-3 -19 -2 -19 0 -19 4425 2529 100 MP stroke
1 -15 1 -15 2 -15 4 -15 4 -15 5 -14 6 -14 7 -13 
8 -13 9 -13 9 -12 10 -11 11 -10 11 -10 12 -10 13 -8 
13 -8 14 -6 14 -6 14 -5 15 -4 15 -3 15 -2 15 -2 
15 0 15 1 15 2 15 2 15 4 14 4 14 6 14 6 
13 7 13 8 13 9 11 9 12 11 10 11 10 11 9 13 
8 12 7 14 7 13 5 14 5 15 4 14 3 15 2 15 
1 15 0 16 -1 15 -2 15 -3 15 -4 14 -5 15 -5 14 
-7 13 -7 14 -8 12 -9 13 -10 11 -10 11 -12 11 -11 9 
-13 9 -13 8 -13 7 -14 6 -14 6 -14 4 -15 4 -15 2 
-15 2 -15 1 -15 0 -15 -2 -15 -2 -15 -3 -15 -4 -14 -5 
-14 -6 -14 -6 -13 -8 -13 -8 -12 -10 -11 -10 -11 -10 -10 -11 
-9 -12 -9 -13 -8 -13 -7 -13 -6 -14 -5 -14 -4 -15 -4 -15 
-2 -15 -1 -15 -1 -15 4362 2529 100 MP stroke
0 -12 1 -12 2 -11 3 -12 3 -11 4 -12 5 -11 5 -10 
6 -10 7 -10 7 -9 8 -9 9 -9 9 -7 9 -8 10 -6 
11 -6 10 -5 11 -5 11 -4 12 -3 11 -3 12 -1 12 -1 
12 0 12 0 12 2 11 2 12 2 11 4 11 4 11 5 
11 6 10 6 9 7 10 7 8 8 9 9 7 9 7 10 
7 10 6 10 5 11 4 11 4 11 3 12 2 11 2 12 
0 36 -2 12 -2 11 -3 12 -4 11 -4 11 -5 11 -6 10 
-7 10 -7 10 -7 9 -9 9 -8 8 -10 7 -9 7 -10 6 
-11 6 -11 5 -11 4 -11 4 -12 2 -11 2 -12 2 -12 0 
-12 0 -12 -1 -12 -1 -11 -3 -12 -3 -11 -4 -11 -5 -10 -5 
-11 -6 -10 -6 -9 -8 -9 -7 -9 -9 -8 -9 -7 -9 -7 -10 
-6 -10 -5 -10 -5 -11 -4 -12 -3 -11 -3 -12 -2 -11 -1 -12 
0 -12 4310 2529 98 MP stroke
0 sg
-1 0 0 2 -1 1 -1 1 -1 0 -1 0 -1 0 -1 -1 
0 -5 1 -1 1 -2 2 -2 2 -3 2 -2 3 -2 3 -2 
3 -1 3 -1 4 -1 3 0 4 1 3 1 4 3 2 3 
2 5 1 6 -1 7 -1 8 -4 9 -5 11 -8 12 -11 14 
-13 13 -16 14 -18 11 -19 10 -21 8 -22 5 -22 2 -22 -2 
-21 -8 -20 -12 -17 -20 -13 -26 -7 -34 0 -42 9 -52 20 -59 
32 -67 46 -73 62 -79 77 -81 94 -80 109 -75 118 -62 128 -47 
135 -24 137 5 162 56 141 118 108 180 58 239 2 220 -39 245 
-86 268 -137 292 -121 207 -147 219 -173 232 -202 244 -58 65 -59 66 
-62 67 -64 67 -13 13 -13 13 -13 14 -14 13 -2 3 -3 3 
-3 2 -2 3 -1 0 1 0 -2 2 -1 0 1 0 4122 393 88 MP stroke
-1 1 -1 0 0 -3 2 -2 1 -1 1 -1 1 0 1 -1 
2 0 1 -1 1 0 2 1 1 0 1 1 1 2 1 2 
0 4 -1 4 -1 3 -2 4 -4 5 -4 5 -5 5 -6 5 
-7 4 -7 4 -8 3 -8 2 -8 0 -9 -1 -8 -2 -7 -5 
-6 -8 -5 -10 -2 -13 0 -15 3 -21 9 -25 14 -28 20 -30 
25 -30 31 -30 37 -30 42 -27 45 -23 49 -18 51 -10 53 -2 
53 10 50 23 44 37 36 54 23 69 8 85 -8 102 -28 117 
-51 130 -76 143 -102 154 -131 164 -139 145 -162 145 -184 137 -204 120 
-256 101 -268 37 -268 -47 -252 -143 -172 -180 -143 -229 -107 -268 -68 -290 
-10 -67 -7 -66 -5 -67 -3 -67 -1 -13 0 -53 -1 -1 6260 2529 80 MP stroke
1 0 0 -2 1 -1 1 -1 1 0 1 0 1 0 1 1 
0 5 -1 1 -1 2 -2 2 -2 3 -2 2 -3 2 -3 2 
-3 1 -3 1 -4 1 -3 0 -4 -1 -3 -1 -4 -3 -2 -3 
-2 -5 -1 -6 1 -7 1 -8 4 -9 5 -11 8 -12 11 -14 
13 -13 16 -14 18 -11 19 -10 21 -8 22 -5 22 -2 22 2 
21 8 20 12 17 20 13 26 7 34 0 42 -9 52 -20 59 
-32 67 -46 73 -62 79 -77 81 -94 80 -109 75 -118 62 -128 47 
-135 24 -137 -5 -162 -56 -141 -118 -108 -180 -58 -239 -2 -220 39 -245 
86 -268 137 -292 121 -207 147 -219 173 -232 202 -244 58 -65 59 -66 
62 -67 64 -67 13 -13 13 -13 13 -14 14 -13 2 -3 3 -3 
3 -2 2 -3 1 0 -1 0 2 -2 1 0 -1 0 4124 4665 88 MP stroke
6 w
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 202 x Fy(Fig.)26 b(4.)78 b(W)-6 b(e)26 b(estimate)g
Fo(K)21 b Fk(=)16 b Fy(1)27 b(for)f(the)h(V)-8 b(an-der)o(-Pol)25
b(oscillator)2038 1457 y @beginspecial 18 @llx 194 @lly
592 @urx 597 @ury 2296 @rwi @setspecial
%%BeginDocument: DegreePlot_vanderpol.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\matlab\polynomial_approximation\SOS_LyaP_degbound\DegreePlot_vanderpol.eps
%%CreationDate: 05/05/2011  19:46:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    18   194   592   597
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    18   194   592   597
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7164 csm

    0     0  6897  4834 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6898 4835 rf
6 w
0 3939 5345 0 0 -3939 897 4302 4 MP
PP
-5345 0 0 3939 5345 0 0 -3939 897 4302 5 MP stroke
4 w
DO
SO
6 w
0 sg
 897  363 mt 6242  363 L
 897 4302 mt 6242 4302 L
6242 4302 mt 6242  363 L
 897 4302 mt  897  363 L
 897 4302 mt 6242 4302 L
 897 4302 mt  897  363 L
 897 4302 mt  897 4275 L
 897  363 mt  897  389 L
 897 4302 mt  897 4248 L
 897  363 mt  897  416 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 785 4484 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 918 4410 mt 
(-2) s
1433 4302 mt 1433 4275 L
1433  363 mt 1433  389 L
1747 4302 mt 1747 4275 L
1747  363 mt 1747  389 L
1969 4302 mt 1969 4275 L
1969  363 mt 1969  389 L
2142 4302 mt 2142 4275 L
2142  363 mt 2142  389 L
2283 4302 mt 2283 4275 L
2283  363 mt 2283  389 L
2402 4302 mt 2402 4275 L
2402  363 mt 2402  389 L
2506 4302 mt 2506 4275 L
2506  363 mt 2506  389 L
2597 4302 mt 2597 4275 L
2597  363 mt 2597  389 L
2678 4302 mt 2678 4275 L
2678  363 mt 2678  389 L
2678 4302 mt 2678 4248 L
2678  363 mt 2678  416 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2566 4484 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

2699 4410 mt 
(-1) s
3215 4302 mt 3215 4275 L
3215  363 mt 3215  389 L
3528 4302 mt 3528 4275 L
3528  363 mt 3528  389 L
3751 4302 mt 3751 4275 L
3751  363 mt 3751  389 L
3923 4302 mt 3923 4275 L
3923  363 mt 3923  389 L
4065 4302 mt 4065 4275 L
4065  363 mt 4065  389 L
4184 4302 mt 4184 4275 L
4184  363 mt 4184  389 L
4287 4302 mt 4287 4275 L
4287  363 mt 4287  389 L
4378 4302 mt 4378 4275 L
4378  363 mt 4378  389 L
4460 4302 mt 4460 4275 L
4460  363 mt 4460  389 L
4460 4302 mt 4460 4248 L
4460  363 mt 4460  416 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4372 4484 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

4505 4410 mt 
(0) s
4996 4302 mt 4996 4275 L
4996  363 mt 4996  389 L
5310 4302 mt 5310 4275 L
5310  363 mt 5310  389 L
5533 4302 mt 5533 4275 L
5533  363 mt 5533  389 L
5705 4302 mt 5705 4275 L
5705  363 mt 5705  389 L
5846 4302 mt 5846 4275 L
5846  363 mt 5846  389 L
5966 4302 mt 5966 4275 L
5966  363 mt 5966  389 L
6069 4302 mt 6069 4275 L
6069  363 mt 6069  389 L
6160 4302 mt 6160 4275 L
6160  363 mt 6160  389 L
6242 4302 mt 6242 4275 L
6242  363 mt 6242  389 L
6242 4302 mt 6242 4248 L
6242  363 mt 6242  416 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

6154 4484 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

6287 4410 mt 
(1) s
 897 4302 mt  923 4302 L
6242 4302 mt 6215 4302 L
 897 4302 mt  950 4302 L
6242 4302 mt 6188 4302 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 685 4346 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 818 4272 mt 
(0) s
 897 3499 mt  923 3499 L
6242 3499 mt 6215 3499 L
 897 3029 mt  923 3029 L
6242 3029 mt 6215 3029 L
 897 2696 mt  923 2696 L
6242 2696 mt 6215 2696 L
 897 2438 mt  923 2438 L
6242 2438 mt 6215 2438 L
 897 2226 mt  923 2226 L
6242 2226 mt 6215 2226 L
 897 2048 mt  923 2048 L
6242 2048 mt 6215 2048 L
 897 1893 mt  923 1893 L
6242 1893 mt 6215 1893 L
 897 1757 mt  923 1757 L
6242 1757 mt 6215 1757 L
 897 1635 mt  923 1635 L
6242 1635 mt 6215 1635 L
 897 1635 mt  950 1635 L
6242 1635 mt 6188 1635 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 685 1679 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 818 1605 mt 
(1) s
 897  832 mt  923  832 L
6242  832 mt 6215  832 L
 897  363 mt  923  363 L
6242  363 mt 6215  363 L
 897  363 mt 6242  363 L
 897 4302 mt 6242 4302 L
6242 4302 mt 6242  363 L
 897 4302 mt  897  363 L
gs 897 363 5346 3940 rc
24 w
3 0 3 0 3 0 3 0 3 0 4 0 3 0 3 0 
3 0 3 0 4 0 3 0 3 0 3 0 4 0 3 0 
3 0 4 0 3 0 3 0 4 0 3 0 4 0 3 0 
3 0 4 0 3 0 4 0 3 0 4 0 3 0 4 0 
3 0 4 0 4 0 3 0 4 0 3 0 4 0 4 0 
3 0 4 0 4 0 4 0 3 0 4 0 4 0 4 0 
4 0 3 0 4 0 4 0 4 0 4 0 4 0 4 0 
4 0 4 0 4 0 4 0 4 0 4 0 5 0 4 0 
4 0 4 0 4 0 4 0 5 0 4 0 4 0 5 0 
4 0 4 0 5 0 4 0 5 0 4 0 5 0 4 0 
5 0 4 0 5 0 5 0 4 0 5 0 5 0 5 0 
4 0 5 0 5 0 5 0 5 0 5 0 5 0 5 0 
5 0 5 0 5 0 5 0 5 0 5 0 6 0 5 0 
5 0 6 0 5 0 6 0 5 0 5 0 6 0 6 0 
5 0 6 0 6 0 5 0 6 0 6 0 6 0 6 0 
6 0 6 0 6 0 6 0 6 0 6 1273 7 0 6 0 
6 0 7 0 6 0 7 0 6 0 7 0 7 0 6 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 8 0 8 0 7 0 8 0 8 0 7 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
9 0 9 0 9 0 9 0 9 0 9 0 9 0 9 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 11 0 
10 0 11 0 11 0 11 0 11 0 11 0 12 0 11 0 
12 0 12 0 12 0 13 0 12 0 13 0 13 0 13 0 
14 0 13 0 14 0 15 0 14 0 15 0 15 0 15 0 
16 0 16 0 16 0 17 0 17 0 17 0 18 0 18 0 
19 0 19 0 19 0 21 0 20 0 21 0 22 0 23 0 
23 0 23 0 25 0 25 0 27 0 27 0 28 0 29 0 
31 0 31 0 33 0 34 0 36 0 38 0 40 0 42 0 
44 0 47 0 50 0 53 0 57 0 62 0 68 0 73 0 
82 0 91 0 103 0 120 0 141 1272 172 0 223 0 314 0 
536 0 1433 954 250 MP stroke
gr

24 w
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 603 2719 mt  -90 rotate
(Degree Bound) s
90 rotate
2926 4627 mt 
(Exponential Decay Rate) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2019 1659 a(Fig.)39 b(5.)119 b(De)o(gree)40
b(Bound)g(for)g(the)g(V)-8 b(an-der)o(-Pol)39 b(Oscillator)g(as)g(a)
2019 1746 y(Function)27 b(of)g(Decay)g(Rate)p Black Black
993 3251 a @beginspecial 18 @llx 195 @lly 592 @urx 595
@ury 2296 @rwi @setspecial
%%BeginDocument: estim_decay.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\matlab\nonlinear_stability\estim_decay.eps
%%CreationDate: 05/05/2011  19:38:12
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    18   195   592   595
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    18   195   592   595
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7140 csm

    0     0  6897  4789 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6898 4790 rf
6 w
0 3903 5345 0 0 -3903 897 4262 4 MP
PP
-5345 0 0 3903 5345 0 0 -3903 897 4262 5 MP stroke
4 w
DO
SO
6 w
0 sg
 897  359 mt 6242  359 L
 897 4262 mt 6242 4262 L
6242 4262 mt 6242  359 L
 897 4262 mt  897  359 L
 897 4262 mt 6242 4262 L
 897 4262 mt  897  359 L
 897 4262 mt  897 4208 L
 897  359 mt  897  412 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 864 4407 mt 
(0) s
1431 4262 mt 1431 4208 L
1431  359 mt 1431  412 L
1398 4407 mt 
(2) s
1966 4262 mt 1966 4208 L
1966  359 mt 1966  412 L
1933 4407 mt 
(4) s
2500 4262 mt 2500 4208 L
2500  359 mt 2500  412 L
2467 4407 mt 
(6) s
3035 4262 mt 3035 4208 L
3035  359 mt 3035  412 L
3002 4407 mt 
(8) s
3569 4262 mt 3569 4208 L
3569  359 mt 3569  412 L
3503 4407 mt 
(10) s
4104 4262 mt 4104 4208 L
4104  359 mt 4104  412 L
4038 4407 mt 
(12) s
4638 4262 mt 4638 4208 L
4638  359 mt 4638  412 L
4572 4407 mt 
(14) s
5173 4262 mt 5173 4208 L
5173  359 mt 5173  412 L
5107 4407 mt 
(16) s
5707 4262 mt 5707 4208 L
5707  359 mt 5707  412 L
5641 4407 mt 
(18) s
6242 4262 mt 6242 4208 L
6242  359 mt 6242  412 L
6176 4407 mt 
(20) s
 897 4262 mt  923 4262 L
6242 4262 mt 6215 4262 L
 897 4262 mt  950 4262 L
6242 4262 mt 6188 4262 L
 638 4306 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771 4232 mt 
(-6) s
 897 4066 mt  923 4066 L
6242 4066 mt 6215 4066 L
 897 3951 mt  923 3951 L
6242 3951 mt 6215 3951 L
 897 3870 mt  923 3870 L
6242 3870 mt 6215 3870 L
 897 3807 mt  923 3807 L
6242 3807 mt 6215 3807 L
 897 3755 mt  923 3755 L
6242 3755 mt 6215 3755 L
 897 3712 mt  923 3712 L
6242 3712 mt 6215 3712 L
 897 3674 mt  923 3674 L
6242 3674 mt 6215 3674 L
 897 3641 mt  923 3641 L
6242 3641 mt 6215 3641 L
 897 3611 mt  923 3611 L
6242 3611 mt 6215 3611 L
 897 3611 mt  950 3611 L
6242 3611 mt 6188 3611 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 3655 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771 3581 mt 
(-5) s
 897 3415 mt  923 3415 L
6242 3415 mt 6215 3415 L
 897 3301 mt  923 3301 L
6242 3301 mt 6215 3301 L
 897 3219 mt  923 3219 L
6242 3219 mt 6215 3219 L
 897 3156 mt  923 3156 L
6242 3156 mt 6215 3156 L
 897 3105 mt  923 3105 L
6242 3105 mt 6215 3105 L
 897 3061 mt  923 3061 L
6242 3061 mt 6215 3061 L
 897 3024 mt  923 3024 L
6242 3024 mt 6215 3024 L
 897 2990 mt  923 2990 L
6242 2990 mt 6215 2990 L
 897 2961 mt  923 2961 L
6242 2961 mt 6215 2961 L
 897 2961 mt  950 2961 L
6242 2961 mt 6188 2961 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 3005 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771 2931 mt 
(-4) s
 897 2765 mt  923 2765 L
6242 2765 mt 6215 2765 L
 897 2650 mt  923 2650 L
6242 2650 mt 6215 2650 L
 897 2569 mt  923 2569 L
6242 2569 mt 6215 2569 L
 897 2506 mt  923 2506 L
6242 2506 mt 6215 2506 L
 897 2454 mt  923 2454 L
6242 2454 mt 6215 2454 L
 897 2411 mt  923 2411 L
6242 2411 mt 6215 2411 L
 897 2373 mt  923 2373 L
6242 2373 mt 6215 2373 L
 897 2340 mt  923 2340 L
6242 2340 mt 6215 2340 L
 897 2310 mt  923 2310 L
6242 2310 mt 6215 2310 L
 897 2310 mt  950 2310 L
6242 2310 mt 6188 2310 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 2354 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771 2280 mt 
(-3) s
 897 2114 mt  923 2114 L
6242 2114 mt 6215 2114 L
 897 2000 mt  923 2000 L
6242 2000 mt 6215 2000 L
 897 1918 mt  923 1918 L
6242 1918 mt 6215 1918 L
 897 1855 mt  923 1855 L
6242 1855 mt 6215 1855 L
 897 1804 mt  923 1804 L
6242 1804 mt 6215 1804 L
 897 1760 mt  923 1760 L
6242 1760 mt 6215 1760 L
 897 1723 mt  923 1723 L
6242 1723 mt 6215 1723 L
 897 1689 mt  923 1689 L
6242 1689 mt 6215 1689 L
 897 1660 mt  923 1660 L
6242 1660 mt 6215 1660 L
 897 1660 mt  950 1660 L
6242 1660 mt 6188 1660 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 1704 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771 1630 mt 
(-2) s
 897 1464 mt  923 1464 L
6242 1464 mt 6215 1464 L
 897 1349 mt  923 1349 L
6242 1349 mt 6215 1349 L
 897 1268 mt  923 1268 L
6242 1268 mt 6215 1268 L
 897 1205 mt  923 1205 L
6242 1205 mt 6215 1205 L
 897 1153 mt  923 1153 L
6242 1153 mt 6215 1153 L
 897 1110 mt  923 1110 L
6242 1110 mt 6215 1110 L
 897 1072 mt  923 1072 L
6242 1072 mt 6215 1072 L
 897 1039 mt  923 1039 L
6242 1039 mt 6215 1039 L
 897 1009 mt  923 1009 L
6242 1009 mt 6215 1009 L
 897 1009 mt  950 1009 L
6242 1009 mt 6188 1009 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 1053 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771  979 mt 
(-1) s
 897  813 mt  923  813 L
6242  813 mt 6215  813 L
 897  699 mt  923  699 L
6242  699 mt 6215  699 L
 897  617 mt  923  617 L
6242  617 mt 6215  617 L
 897  554 mt  923  554 L
6242  554 mt 6215  554 L
 897  503 mt  923  503 L
6242  503 mt 6215  503 L
 897  459 mt  923  459 L
6242  459 mt 6215  459 L
 897  422 mt  923  422 L
6242  422 mt 6215  422 L
 897  388 mt  923  388 L
6242  388 mt 6215  388 L
 897  359 mt  923  359 L
6242  359 mt 6215  359 L
 897  359 mt  950  359 L
6242  359 mt 6188  359 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638  403 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 771  329 mt 
(0) s
 897  359 mt 6242  359 L
 897 4262 mt 6242 4262 L
6242 4262 mt 6242  359 L
 897 4262 mt  897  359 L
gs 897 359 5346 3904 rc
24 w
66 15 66 8 66 1 65 2 71 12 71 38 70 63 71 74 
65 67 65 60 65 53 65 45 59 33 59 26 59 19 59 13 
58 6 58 2 59 0 58 6 56 19 57 37 56 52 57 59 
51 53 50 50 51 46 50 41 49 35 49 30 49 26 49 20 
50 17 49 11 50 7 50 3 49 1 48 0 49 6 49 15 
55 33 55 49 56 57 55 58 50 50 50 46 50 41 50 37 
48 30 49 27 48 21 49 17 49 12 50 8 49 4 50 1 
48 0 48 4 49 12 48 25 54 43 54 54 55 57 54 56 
50 47 49 43 50 38 50 34 49 27 48 23 48 18 49 14 
49 9 50 5 49 2 50 0 52 3 52 11 52 24 52 40 
53 52 53 55 53 55 53 51 51 44 51 38 50 32 51 26 
63 23 63 14 62 8 63 2 49 0 48 1 49 6 48 14 
32 15 32 22 32 26 33 31 8 8 8 9 9 9 8 9 
2 1 1 2 2 2 2 2 1 0 -1 0 898 360 111 MP stroke
57 49 56 44 56 37 57 31 87 35 87 20 88 8 87 1 
73 10 72 34 73 62 73 76 67 69 67 62 67 55 68 46 
60 34 60 26 61 19 60 13 61 5 60 1 61 1 60 9 
56 24 56 42 56 54 57 59 50 52 50 49 50 44 50 39 
49 34 49 29 48 24 49 19 50 15 50 11 49 5 50 3 
49 0 48 1 49 8 48 18 55 37 55 51 55 57 55 57 
50 49 50 45 50 41 50 35 48 30 48 25 49 20 48 16 
50 12 49 7 50 3 49 0 48 1 49 5 48 15 48 27 
54 46 54 54 54 57 54 55 50 47 50 42 49 37 50 32 
48 27 49 22 48 18 48 12 49 9 50 4 49 2 50 0 
54 4 55 14 55 31 55 46 53 53 52 55 52 54 53 48 
50 42 51 37 51 31 50 25 48 18 47 13 47 8 48 5 
16 1 17 0 17 1 17 0 3 0 3 0 4 0 3 0 
1 0 1 0 1 0 897 554 108 MP stroke
73 1 73 15 72 44 73 68 91 94 92 86 91 75 92 57 
92 40 92 23 93 10 92 2 75 10 75 37 76 67 75 79 
70 71 70 64 71 54 70 46 63 31 63 24 62 17 63 9 
65 3 65 0 64 6 65 24 55 39 55 52 55 57 55 57 
49 49 50 44 50 40 50 35 50 30 49 25 50 20 49 15 
50 11 49 6 49 2 50 1 51 1 52 8 52 21 51 36 
54 50 53 55 54 56 53 53 50 44 49 40 50 35 50 31 
47 24 48 20 48 16 47 11 49 7 50 3 49 1 49 1 
58 6 58 22 58 40 57 55 52 54 52 54 52 51 52 46 
49 39 49 35 50 29 49 25 50 21 50 15 50 10 50 6 
49 3 49 0 48 1 49 7 54 20 53 37 54 50 53 56 
34 35 34 34 33 33 34 31 6 6 7 6 7 6 6 5 
897 782 97 MP stroke
6 w
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 3453 a(Fig.)f(6.)78 b(A)26 b(semi-log)h(plot)f(of)h
Fm(k)p Fo(x)p Fm(k)g Fy(for)f(three)h(trajectories.)e(W)-6
b(e)26 b(estimate)h Fq(l)e Fk(=)17 b Fp(:)p Fy(542)27
b(for)f(the)h(V)-8 b(an-der)o(-Pol)25 b(oscillator)p
Black 0 3845 a Fz(The)35 b(con)l(v)o(erse)f(L)-5 b(yapuno)o(v)33
b(function)h(is)310 4119 y Fs(V)12 b Fv(\()p Fs(x)p Fv(\))22
b(=)627 3995 y Fi(Z)716 4024 y Fq(d)676 4198 y Fy(0)766
4119 y Fv(\()p Fs(P)866 4078 y Fy(2)907 4119 y Fs(z)p
Fv(\()p Fs(s)p Ft(;)11 b Fs(x)p Fv(\)\))1185 4078 y Fo(T)1239
4119 y Fv(\()p Fs(P)1339 4078 y Fy(2)1380 4119 y Fs(z)p
Fv(\()p Fs(s)p Ft(;)g Fs(x)p Fv(\)\))p Fs(d)5 b(s)527
4394 y Fv(=)627 4269 y Fi(Z)716 4298 y Fq(d)676 4472
y Fy(0)766 4394 y Fv(\()p Fs(x)14 b Fv(+)29 b Fs(f)14
b Fv(\()p Fs(x)p Fv(\))p Fs(s)p Fv(\))1211 4352 y Fo(T)1266
4394 y Fv(\()p Fs(x)g Fv(+)29 b Fs(f)14 b Fv(\()p Fs(x)p
Fv(\))p Fs(s)p Fv(\))p Fs(d)5 b(s)527 4740 y Fv(=)627
4616 y Fi(Z)716 4645 y Fq(d)676 4819 y Fy(0)777 4540
y Fj(2)777 4719 y(4)911 4663 y Fs(x)859 4837 y(f)14 b
Fv(\()p Fs(x)p Fv(\))1023 4540 y Fj(3)1023 4719 y(5)1089
4565 y Fo(T)1155 4540 y Fj(2)1155 4719 y(4)1241 4663
y Fs(I)1222 4837 y(sI)1299 4540 y Fj(3)1299 4719 y(5)1376
4630 y(h)1423 4750 y Fs(I)88 b(sI)1621 4630 y Fj(i)1680
4540 y(2)1680 4719 y(4)1813 4663 y Fs(x)1761 4837 y(f)14
b Fv(\()p Fs(x)p Fv(\))1925 4540 y Fj(3)1925 4719 y(5)2002
4740 y Fs(d)5 b(s)22 b Fv(=)2218 4540 y Fj(2)2218 4719
y(4)2351 4663 y Fs(x)2299 4837 y(f)14 b Fv(\()p Fs(x)p
Fv(\))2463 4540 y Fj(3)2463 4719 y(5)2530 4565 y Fo(T)2596
4616 y Fi(Z)2685 4645 y Fq(d)2645 4819 y Fy(0)2747 4540
y Fj(2)2747 4719 y(4)2832 4663 y Fs(I)129 b(sI)2813 4837
y(sI)88 b(s)3012 4801 y Fy(2)3053 4837 y Fs(I)3091 4540
y Fj(3)3091 4719 y(5)3169 4740 y Fs(d)5 b(s)3274 4540
y Fj(2)3274 4719 y(4)3407 4663 y Fs(x)3355 4837 y(f)14
b Fv(\()p Fs(x)p Fv(\))3519 4540 y Fj(3)3519 4719 y(5)527
5162 y Fv(=)627 4961 y Fj(2)627 5141 y(4)760 5085 y Fs(x)708
5258 y(f)g Fv(\()p Fs(x)p Fv(\))872 4961 y Fj(3)872 5141
y(5)938 4986 y Fo(T)1005 4961 y Fj(2)1005 5141 y(4)1142
5085 y Fu(d)e Fs(I)159 b Fu(d)1456 5049 y Fy(2)1498 5085
y Ft(=)p Fz(2)p Fs(I)1071 5258 y Fu(d)1132 5222 y Fy(2)1174
5258 y Ft(=)p Fz(2)p Fs(I)88 b Fu(d)1456 5222 y Fy(3)1498
5258 y Ft(=)p Fz(3)p Fs(I)1636 4961 y Fj(3)1636 5141
y(5)1713 4961 y(2)1713 5141 y(4)1847 5085 y Fs(x)1794
5258 y(f)14 b Fv(\()p Fs(x)p Fv(\))1959 4961 y Fj(3)1959
5141 y(5)p Black 0 5556 a FF(December)25 b(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 25 25
TeXDict begin 25 24 bop Black 3834 -150 a FF(25)p Black
0 116 a Fz(If)35 b Fu(d)g Fv(=)22 b Fs(T)36 b Fv(=)505
76 y Fy(1)p 484 93 80 4 v 484 150 a(2)p Fo(L)595 116
y Fv(=)705 76 y Fy(1)p 705 93 38 4 v 705 150 a(4)752
116 y Fz(,)f(for)g(the)g(V)-11 b(an-der)n(-Pol)35 b(Oscillator)l(,)f
(we)h(get)f(the)h(SOS)g(L)-5 b(yapuno)o(v)33 b(function.)101
476 y(192)14 b Fn(\001)9 b Fs(V)i Fv(\()p Fs(x)p Fv(\))22
b(=)618 276 y Fj(2)618 455 y(4)751 399 y Fs(x)699 573
y(f)14 b Fv(\()p Fs(x)p Fv(\))863 276 y Fj(3)863 455
y(5)929 301 y Fo(T)996 276 y Fj(2)996 455 y(4)1062 399
y Fz(48)p Fs(I)88 b Fz(6)p Fs(I)1087 573 y Fz(6)p Fs(I)138
b(I)1371 276 y Fj(3)1371 455 y(5)1448 276 y(2)1448 455
y(4)1582 399 y Fs(x)1530 573 y(f)14 b Fv(\()p Fs(x)p
Fv(\))1694 276 y Fj(3)1694 455 y(5)1782 476 y Fv(=)1882
276 y Fj(2)1882 455 y(4)2015 399 y Fs(x)1963 573 y(f)g
Fv(\()p Fs(x)p Fv(\))2127 276 y Fj(3)2127 455 y(5)2193
301 y Fo(T)2260 276 y Fj(2)2260 455 y(4)2326 399 y Fz(6)p
Ft(:)p Fz(93)p Fs(I)87 b Fz(2)p Ft(:)p Fz(45)p Fs(I)2326
573 y Fz(2)p Ft(:)p Fz(45)p Fs(I)176 b(I)2840 276 y Fj(3)2840
455 y(5)2906 301 y Fy(2)2959 276 y Fj(2)2959 455 y(4)3092
399 y Fs(x)3040 573 y(f)14 b Fv(\()p Fs(x)p Fv(\))3204
276 y Fj(3)3204 455 y(5)123 898 y Fv(=)222 697 y Fj(2)222
877 y(4)289 821 y Fz(6)p Ft(:)p Fz(93)p Fs(x)g Fv(+)g
Fz(2)p Ft(:)p Fz(45)h Fs(f)f Fv(\()p Fs(x)p Fv(\))377
994 y Fz(2)p Ft(:)p Fz(45)p Fs(x)g Fv(+)29 b Fs(f)14
b Fv(\()p Fs(x)p Fv(\))972 697 y Fj(3)972 877 y(5)1038
722 y Fo(T)1104 697 y Fj(2)1104 877 y(4)1170 821 y Fz(6)p
Ft(:)p Fz(93)p Fs(x)g Fv(+)g Fz(2)p Ft(:)p Fz(45)h Fs(f)f
Fv(\()p Fs(x)p Fv(\))1259 994 y Fz(2)p Ft(:)p Fz(45)p
Fs(x)g Fv(+)29 b Fs(f)14 b Fv(\()p Fs(x)p Fv(\))1853
697 y Fj(3)1853 877 y(5)123 1217 y Fv(=)22 b(\()p Fz(6)p
Ft(:)p Fz(93)p Fs(x)483 1232 y Fy(1)538 1217 y Fn(\000)14
b Fz(2)p Ft(:)p Fz(45)p Fs(x)851 1232 y Fy(2)892 1217
y Fv(\))930 1171 y Fy(2)986 1217 y Fv(+)1077 1136 y Fj(\000)1123
1217 y Fz(2)p Ft(:)p Fz(45)p Fv(\()p Fs(x)1384 1232 y
Fy(1)1438 1217 y Fv(+)g Fs(x)1573 1175 y Fy(2)1573 1241
y(1)1615 1217 y Fs(x)1659 1232 y Fy(2)1701 1217 y Fv(\))g(+)g
Fz(4)p Ft(:)p Fz(48)p Fs(x)2067 1232 y Fy(2)2107 1136
y Fj(\001)2153 1154 y Fy(2)2208 1217 y Fv(+)g(\()p Fz(2)p
Ft(:)p Fz(45)p Fs(x)g Fn(\000)g Fs(x)2709 1232 y Fy(2)2751
1217 y Fv(\))2789 1171 y Fy(2)2845 1217 y Fv(+)2936 1136
y Fj(\000)2982 1217 y Fs(x)3026 1232 y Fy(1)3081 1217
y Fv(+)g Fs(x)3216 1175 y Fy(2)3216 1241 y(1)3258 1217
y Fs(x)3302 1232 y Fy(2)3358 1217 y Fv(+)g Fz(1)p Ft(:)p
Fz(45)p Fs(x)3671 1232 y Fy(2)3712 1136 y Fj(\001)3758
1154 y Fy(2)100 1491 y Fz(As)43 b(per)i(the)e(pre)n(vious)g
(discussion,)f(we)i(use)g(SOST)n(OOLS)h(to)f(v)o(erify)f(that)h(this)f
(L)-5 b(yapuno)o(v)42 b(function)0 1664 y(pro)o(v)o(es)29
b(stability)-6 b(.)28 b(Note)h(that)h(we)g(must)f(sho)n(w)g(the)h
(function)f(is)h(decreasing)g(on)g(the)g(ball)g(of)g(radius)f
Fs(r)22 b Fv(=)f Ft(:)p Fz(25,)0 1837 y(as)37 b(the)f(Lipschitz)g
(bound)f(used)i(in)f(the)g(theorem)g(is)g(for)h(the)g(ball)f(of)h
(radius)f Fs(B)2888 1853 y Fy(4)p Fo(r)2960 1837 y Fz(.)g(W)-8
b(e)37 b(are)h(able)e(to)h(v)o(erify)0 2011 y(that)g(the)g(L)-5
b(yapuno)o(v)36 b(function)g(is)h(decreasing)g(on)h(the)f(ball)g(of)g
(radius)g Fs(r)26 b Fv(=)e Ft(:)p Fz(25.)36 b(Some)i(le)n(v)o(el)e
(sets)h(of)g(this)0 2184 y(L)-5 b(yapuno)o(v)34 b(function)i(are)h
(illustrated)d(in)i(Figure)h(7.)f(Through)f(e)o(xperimentation,)f(we)j
(\002nd)f(that)g(when)g(we)0 2358 y(increase)e(the)f(ball)g(to)f
(radius)h Fs(r)24 b Fv(=)d Fz(1,)34 b(the)f(L)-5 b(yapuno)o(v)31
b(function)h(is)h(no)g(longer)g(decreasing.)g(W)-8 b(e)34
b(also)f(found)0 2531 y(that)e(the)h(quadratic)g(L)-5
b(yapuno)o(v)29 b(function)d Fs(V)13 b Fv(\()p Fs(x)p
Fv(\))21 b(=)g Fs(x)1884 2495 y Fo(T)1939 2531 y Fs(x)33
b Fz(is)e(not)g(decreasing)h(on)g(the)f(ball)h(of)g(radius)f
Fs(r)23 b Fv(=)e Ft(:)p Fz(25.)0 2704 y(Although)32 b(we)i(belie)n(v)o
(e)e(that)h(our)g(de)o(gree)h(bound)f(is)g(some)n(what)f(conserv)n(ati)
n(v)o(e,)f(these)j(results)e(indicate)h(the)0 2878 y(conserv)n(atism)g
(is)h(not)h(e)o(xcessi)n(v)o(e.)p Black 0 4756 a @beginspecial
18 @llx 191 @lly 592 @urx 600 @ury 2870 @rwi @setspecial
%%BeginDocument: Quadratic_Lyap2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\mmpeet\matlab\polynomial_approximation\SOS_LyaP_degbound\Quadratic_Lyap2.eps
%%CreationDate: 05/06/2011  14:48:22
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    18   191   592   600
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    18   191   592   600
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7200 csm

    0     0  6897  4908 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6898 4909 rf
6 w
0 4001 4000 0 0 -4001 1569 4368 4 MP
PP
-4000 0 0 4001 4000 0 0 -4001 1569 4368 5 MP stroke
gs 1569 367 4001 4002 rc
24 w
/c8 { 0.000000 0.000000 0.562500 sr} bdef
c8
3244 2229 mt 3240 2242 L
3240 2242 mt 3233 2267 L
3233 2267 mt 3227 2292 L
3227 2292 mt 3223 2317 L
3223 2317 mt 3220 2342 L
3220 2342 mt 3219 2367 L
3219 2367 mt 3219 2392 L
3219 2392 mt 3221 2417 L
3221 2417 mt 3224 2442 L
3224 2442 mt 3229 2467 L
3229 2467 mt 3235 2492 L
3235 2492 mt 3242 2517 L
3242 2517 mt 3244 2523 L
3244 2523 mt 3252 2542 L
3252 2542 mt 3263 2567 L
3263 2567 mt 3269 2579 L
3269 2579 mt 3276 2592 L
3276 2592 mt 3292 2617 L
3292 2617 mt 3294 2620 L
3294 2620 mt 3311 2642 L
3311 2642 mt 3319 2651 L
3319 2651 mt 3334 2667 L
3334 2667 mt 3344 2677 L
3344 2677 mt 3362 2692 L
3362 2692 mt 3369 2698 L
3369 2698 mt 3394 2716 L
3394 2716 mt 3397 2717 L
3397 2717 mt 3419 2730 L
3419 2730 mt 3444 2742 L
3444 2742 mt 3446 2742 L
3446 2742 mt 3469 2751 L
3469 2751 mt 3494 2757 L
3494 2757 mt 3519 2762 L
3519 2762 mt 3544 2764 L
3544 2764 mt 3569 2765 L
3569 2765 mt 3594 2763 L
3594 2763 mt 3619 2759 L
3619 2759 mt 3644 2753 L
3644 2753 mt 3669 2746 L
3669 2746 mt 3677 2742 L
3677 2742 mt 3694 2735 L
3694 2735 mt 3719 2722 L
3719 2722 mt 3727 2717 L
3727 2717 mt 3744 2707 L
3744 2707 mt 3763 2692 L
3763 2692 mt 3769 2688 L
3769 2688 mt 3792 2667 L
3792 2667 mt 3794 2666 L
3794 2666 mt 3816 2642 L
3816 2642 mt 3819 2639 L
3819 2639 mt 3835 2617 L
3835 2617 mt 3844 2605 L
3844 2605 mt 3852 2592 L
3852 2592 mt 3867 2567 L
3867 2567 mt 3869 2564 L
3869 2564 mt 3879 2542 L
3879 2542 mt 3890 2517 L
3890 2517 mt 3894 2506 L
3894 2506 mt 3898 2492 L
3898 2492 mt 3905 2467 L
3905 2467 mt 3911 2442 L
3911 2442 mt 3915 2417 L
3915 2417 mt 3918 2392 L
3918 2392 mt 3919 2367 L
3919 2367 mt 3919 2342 L
3919 2342 mt 3917 2317 L
3917 2317 mt 3914 2292 L
3914 2292 mt 3909 2267 L
3909 2267 mt 3903 2242 L
3903 2242 mt 3896 2217 L
3896 2217 mt 3894 2212 L
3894 2212 mt 3886 2192 L
3886 2192 mt 3875 2167 L
3875 2167 mt 3869 2156 L
3869 2156 mt 3862 2142 L
3862 2142 mt 3846 2117 L
3846 2117 mt 3844 2115 L
3844 2115 mt 3827 2092 L
3827 2092 mt 3819 2084 L
3819 2084 mt 3804 2067 L
3804 2067 mt 3794 2058 L
3794 2058 mt 3776 2042 L
3776 2042 mt 3769 2037 L
3769 2037 mt 3744 2019 L
3744 2019 mt 3741 2017 L
3741 2017 mt 3719 2005 L
3719 2005 mt 3699 1996 L
3384 2036 mt 3375 2042 L
3375 2042 mt 3369 2047 L
3369 2047 mt 3346 2067 L
3346 2067 mt 3344 2069 L
3344 2069 mt 3322 2092 L
3322 2092 mt 3319 2096 L
3319 2096 mt 3303 2117 L
3303 2117 mt 3294 2130 L
3294 2130 mt 3286 2142 L
3286 2142 mt 3271 2167 L
3271 2167 mt 3269 2171 L
3269 2171 mt 3259 2192 L
3259 2192 mt 3248 2217 L
3248 2217 mt 3244 2229 L
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
3094 2222 mt 3089 2242 L
3089 2242 mt 3084 2267 L
3084 2267 mt 3080 2292 L
3080 2292 mt 3077 2317 L
3077 2317 mt 3075 2342 L
3075 2342 mt 3074 2367 L
3074 2367 mt 3074 2392 L
3074 2392 mt 3075 2417 L
3075 2417 mt 3077 2442 L
3077 2442 mt 3080 2467 L
3080 2467 mt 3084 2492 L
3084 2492 mt 3089 2517 L
3089 2517 mt 3094 2536 L
3094 2536 mt 3096 2542 L
3096 2542 mt 3103 2567 L
3103 2567 mt 3112 2592 L
3112 2592 mt 3119 2612 L
3119 2612 mt 3121 2617 L
3121 2617 mt 3133 2642 L
3133 2642 mt 3144 2665 L
3144 2665 mt 3145 2667 L
3145 2667 mt 3160 2692 L
3160 2692 mt 3169 2707 L
3169 2707 mt 3176 2717 L
3176 2717 mt 3194 2742 L
3194 2742 mt 3194 2743 L
3194 2743 mt 3214 2768 L
3214 2768 mt 3219 2773 L
3219 2773 mt 3238 2792 L
3238 2792 mt 3244 2799 L
3244 2799 mt 3265 2817 L
3265 2817 mt 3269 2821 L
3269 2821 mt 3294 2841 L
3294 2841 mt 3296 2842 L
3296 2842 mt 3319 2858 L
3319 2858 mt 3334 2867 L
3334 2867 mt 3344 2873 L
3344 2873 mt 3369 2886 L
3369 2886 mt 3383 2892 L
3383 2892 mt 3394 2897 L
3394 2897 mt 3419 2907 L
3419 2907 mt 3444 2914 L
3444 2914 mt 3457 2917 L
3457 2917 mt 3469 2920 L
3469 2920 mt 3494 2925 L
3494 2925 mt 3519 2928 L
3519 2928 mt 3544 2929 L
3544 2929 mt 3569 2929 L
3569 2929 mt 3594 2928 L
3594 2928 mt 3619 2925 L
3619 2925 mt 3642 2921 L
3880 2795 mt 3883 2792 L
3883 2792 mt 3894 2782 L
3894 2782 mt 3908 2768 L
3908 2768 mt 3919 2755 L
3919 2755 mt 3929 2742 L
3929 2742 mt 3944 2723 L
3944 2723 mt 3948 2717 L
3948 2717 mt 3966 2692 L
3966 2692 mt 3969 2687 L
3969 2687 mt 3981 2667 L
3981 2667 mt 3994 2644 L
3994 2644 mt 3995 2642 L
3995 2642 mt 4007 2617 L
4007 2617 mt 4018 2592 L
4018 2592 mt 4019 2589 L
4019 2589 mt 4027 2567 L
4027 2567 mt 4035 2542 L
4035 2542 mt 4043 2517 L
4043 2517 mt 4044 2513 L
4044 2513 mt 4049 2492 L
4049 2492 mt 4054 2467 L
4054 2467 mt 4058 2442 L
4058 2442 mt 4061 2417 L
4061 2417 mt 4063 2392 L
4063 2392 mt 4064 2367 L
4064 2367 mt 4064 2342 L
4064 2342 mt 4063 2317 L
4063 2317 mt 4061 2292 L
4061 2292 mt 4058 2267 L
4058 2267 mt 4054 2242 L
4054 2242 mt 4049 2217 L
4049 2217 mt 4044 2199 L
4044 2199 mt 4042 2192 L
4042 2192 mt 4035 2167 L
4035 2167 mt 4026 2142 L
4026 2142 mt 4019 2123 L
4019 2123 mt 4017 2117 L
4017 2117 mt 4005 2092 L
4005 2092 mt 3994 2070 L
3994 2070 mt 3993 2067 L
3993 2067 mt 3978 2042 L
3978 2042 mt 3969 2028 L
3969 2028 mt 3962 2017 L
3962 2017 mt 3944 1992 L
3944 1992 mt 3944 1992 L
3944 1992 mt 3924 1967 L
3924 1967 mt 3919 1962 L
3919 1962 mt 3900 1942 L
3900 1942 mt 3894 1936 L
3894 1936 mt 3873 1917 L
3873 1917 mt 3869 1914 L
3869 1914 mt 3844 1894 L
3844 1894 mt 3842 1892 L
3842 1892 mt 3819 1877 L
3819 1877 mt 3804 1867 L
3804 1867 mt 3794 1862 L
3794 1862 mt 3769 1849 L
3769 1849 mt 3755 1842 L
3755 1842 mt 3744 1838 L
3744 1838 mt 3719 1828 L
3719 1828 mt 3694 1821 L
3694 1821 mt 3681 1817 L
3681 1817 mt 3669 1815 L
3669 1815 mt 3644 1810 L
3644 1810 mt 3619 1807 L
3619 1807 mt 3594 1806 L
3594 1806 mt 3569 1806 L
3569 1806 mt 3544 1807 L
3544 1807 mt 3519 1810 L
3519 1810 mt 3494 1814 L
3494 1814 mt 3479 1817 L
3479 1817 mt 3469 1820 L
3469 1820 mt 3444 1827 L
3444 1827 mt 3419 1836 L
3419 1836 mt 3404 1842 L
3404 1842 mt 3394 1847 L
3394 1847 mt 3369 1859 L
3369 1859 mt 3363 1863 L
3159 2064 mt 3157 2067 L
3157 2067 mt 3144 2091 L
3144 2091 mt 3143 2092 L
3143 2092 mt 3131 2117 L
3131 2117 mt 3120 2142 L
3120 2142 mt 3119 2146 L
3119 2146 mt 3111 2167 L
3111 2167 mt 3103 2192 L
3103 2192 mt 3095 2217 L
3095 2217 mt 3094 2222 L
/c10 { 0.750000 1.000000 0.250000 sr} bdef
c10
2719 2262 mt 2718 2267 L
2718 2267 mt 2716 2292 L
2716 2292 mt 2714 2317 L
2714 2317 mt 2713 2342 L
2713 2342 mt 2712 2367 L
2712 2367 mt 2712 2392 L
2712 2392 mt 2712 2417 L
2712 2417 mt 2713 2442 L
2713 2442 mt 2715 2467 L
2715 2467 mt 2717 2492 L
2717 2492 mt 2719 2511 L
2719 2511 mt 2720 2517 L
2720 2517 mt 2723 2542 L
2723 2542 mt 2727 2567 L
2727 2567 mt 2732 2592 L
2732 2592 mt 2737 2617 L
2737 2617 mt 2743 2642 L
2743 2642 mt 2744 2647 L
2744 2647 mt 2749 2667 L
2749 2667 mt 2757 2692 L
2757 2692 mt 2764 2717 L
2764 2717 mt 2769 2731 L
2769 2731 mt 2773 2742 L
2773 2742 mt 2782 2768 L
2782 2768 mt 2792 2792 L
2792 2792 mt 2794 2796 L
2794 2796 mt 2803 2817 L
2803 2817 mt 2815 2842 L
2815 2842 mt 2819 2851 L
2819 2851 mt 2827 2867 L
2827 2867 mt 2841 2892 L
2841 2892 mt 2844 2898 L
2844 2898 mt 2855 2917 L
2855 2917 mt 2869 2940 L
2869 2940 mt 2870 2942 L
2870 2942 mt 2887 2967 L
2887 2967 mt 2894 2978 L
2894 2978 mt 2904 2992 L
2904 2992 mt 2919 3012 L
2919 3012 mt 2923 3018 L
2923 3018 mt 2943 3043 L
2943 3043 mt 2944 3043 L
2944 3043 mt 2965 3068 L
2965 3068 mt 2969 3072 L
2969 3072 mt 2988 3093 L
2988 3093 mt 2994 3099 L
2994 3099 mt 3013 3117 L
3013 3117 mt 3019 3123 L
3019 3123 mt 3041 3142 L
3041 3142 mt 3044 3146 L
3044 3146 mt 3069 3167 L
3069 3167 mt 3070 3167 L
3070 3167 mt 3094 3186 L
3094 3186 mt 3103 3192 L
3103 3192 mt 3119 3204 L
3119 3204 mt 3140 3217 L
3140 3217 mt 3144 3220 L
3144 3220 mt 3169 3236 L
3169 3236 mt 3181 3242 L
3181 3242 mt 3194 3250 L
3194 3250 mt 3219 3263 L
3219 3263 mt 3229 3267 L
3229 3267 mt 3244 3274 L
3244 3274 mt 3269 3285 L
3269 3285 mt 3287 3293 L
3287 3293 mt 3294 3295 L
3294 3295 mt 3319 3304 L
3319 3304 mt 3344 3312 L
3344 3312 mt 3366 3318 L
3366 3318 mt 3369 3318 L
3369 3318 mt 3394 3324 L
3394 3324 mt 3419 3329 L
3419 3329 mt 3444 3333 L
3444 3333 mt 3469 3337 L
3469 3337 mt 3494 3339 L
3494 3339 mt 3519 3340 L
3519 3340 mt 3544 3341 L
3544 3341 mt 3569 3341 L
3569 3341 mt 3594 3340 L
3594 3340 mt 3619 3338 L
3619 3338 mt 3629 3337 L
3883 3263 mt 3894 3258 L
3894 3258 mt 3919 3245 L
3919 3245 mt 3923 3242 L
3923 3242 mt 3944 3231 L
3944 3231 mt 3965 3217 L
3965 3217 mt 3969 3215 L
3969 3215 mt 3994 3199 L
3994 3199 mt 4003 3192 L
4003 3192 mt 4019 3181 L
4019 3181 mt 4037 3167 L
4037 3167 mt 4044 3162 L
4044 3162 mt 4068 3142 L
4068 3142 mt 4069 3142 L
4069 3142 mt 4094 3119 L
4094 3119 mt 4096 3117 L
4096 3117 mt 4119 3096 L
4119 3096 mt 4122 3093 L
4122 3093 mt 4144 3070 L
4144 3070 mt 4147 3068 L
4147 3068 mt 4169 3043 L
4169 3043 mt 4169 3043 L
4169 3043 mt 4190 3018 L
4190 3018 mt 4194 3013 L
4194 3013 mt 4210 2992 L
4210 2992 mt 4219 2981 L
4219 2981 mt 4229 2967 L
4229 2967 mt 4244 2946 L
4244 2946 mt 4246 2942 L
4246 2942 mt 4262 2917 L
4262 2917 mt 4269 2907 L
4269 2907 mt 4278 2892 L
4278 2892 mt 4292 2867 L
4292 2867 mt 4294 2864 L
4294 2864 mt 4306 2842 L
4306 2842 mt 4318 2817 L
4318 2817 mt 4319 2816 L
4319 2816 mt 4330 2792 L
4330 2792 mt 4341 2768 L
4341 2768 mt 4344 2760 L
4344 2760 mt 4351 2742 L
4351 2742 mt 4361 2717 L
4361 2717 mt 4369 2694 L
4369 2694 mt 4370 2692 L
4370 2692 mt 4378 2667 L
4378 2667 mt 4385 2642 L
4385 2642 mt 4392 2617 L
4392 2617 mt 4394 2609 L
4394 2609 mt 4398 2592 L
4398 2592 mt 4404 2567 L
4404 2567 mt 4408 2542 L
4408 2542 mt 4413 2517 L
4413 2517 mt 4417 2492 L
4417 2492 mt 4419 2473 L
4419 2473 mt 4420 2467 L
4420 2467 mt 4422 2442 L
4422 2442 mt 4424 2417 L
4424 2417 mt 4425 2392 L
4425 2392 mt 4426 2367 L
4426 2367 mt 4426 2342 L
4426 2342 mt 4426 2317 L
4426 2317 mt 4425 2292 L
4425 2292 mt 4423 2267 L
4423 2267 mt 4421 2242 L
4421 2242 mt 4419 2224 L
4419 2224 mt 4418 2217 L
4418 2217 mt 4415 2192 L
4415 2192 mt 4411 2167 L
4411 2167 mt 4406 2142 L
4406 2142 mt 4401 2117 L
4401 2117 mt 4395 2092 L
4395 2092 mt 4394 2088 L
4394 2088 mt 4389 2067 L
4389 2067 mt 4381 2042 L
4381 2042 mt 4374 2017 L
4374 2017 mt 4369 2004 L
4369 2004 mt 4365 1992 L
4365 1992 mt 4356 1967 L
4356 1967 mt 4346 1942 L
4346 1942 mt 4344 1939 L
4344 1939 mt 4335 1917 L
4335 1917 mt 4323 1892 L
4323 1892 mt 4319 1884 L
4319 1884 mt 4316 1879 L
4142 1634 mt 4125 1617 L
4125 1617 mt 4119 1612 L
4119 1612 mt 4097 1593 L
4097 1593 mt 4094 1589 L
4094 1589 mt 4069 1568 L
4069 1568 mt 4068 1567 L
4068 1567 mt 4044 1549 L
4044 1549 mt 4035 1542 L
4035 1542 mt 4019 1531 L
4019 1531 mt 3998 1517 L
3998 1517 mt 3994 1515 L
3994 1515 mt 3969 1499 L
3969 1499 mt 3957 1492 L
3957 1492 mt 3944 1485 L
3944 1485 mt 3919 1472 L
3919 1472 mt 3909 1467 L
3909 1467 mt 3894 1461 L
3894 1461 mt 3869 1450 L
3869 1450 mt 3851 1442 L
3851 1442 mt 3844 1440 L
3844 1440 mt 3819 1431 L
3819 1431 mt 3794 1423 L
3794 1423 mt 3772 1417 L
3772 1417 mt 3769 1417 L
3769 1417 mt 3744 1411 L
3744 1411 mt 3719 1406 L
3719 1406 mt 3694 1402 L
3694 1402 mt 3669 1398 L
3669 1398 mt 3644 1396 L
3644 1396 mt 3619 1395 L
3619 1395 mt 3594 1394 L
3594 1394 mt 3569 1394 L
3569 1394 mt 3544 1395 L
3544 1395 mt 3519 1397 L
3519 1397 mt 3494 1400 L
3494 1400 mt 3469 1404 L
3469 1404 mt 3444 1408 L
3444 1408 mt 3419 1414 L
3419 1414 mt 3403 1417 L
3403 1417 mt 3394 1420 L
3394 1420 mt 3369 1427 L
3369 1427 mt 3344 1435 L
3344 1435 mt 3324 1442 L
3324 1442 mt 3319 1444 L
3319 1444 mt 3294 1454 L
3294 1454 mt 3269 1465 L
3269 1465 mt 3264 1467 L
3264 1467 mt 3244 1477 L
3244 1477 mt 3219 1490 L
3219 1490 mt 3215 1492 L
3215 1492 mt 3194 1504 L
3194 1504 mt 3173 1517 L
3173 1517 mt 3169 1520 L
3169 1520 mt 3144 1536 L
3144 1536 mt 3135 1542 L
3135 1542 mt 3119 1554 L
3119 1554 mt 3101 1567 L
3101 1567 mt 3094 1573 L
3094 1573 mt 3070 1593 L
3070 1593 mt 3069 1593 L
3069 1593 mt 3044 1616 L
3044 1616 mt 3042 1617 L
3042 1617 mt 3019 1639 L
3019 1639 mt 3016 1642 L
3016 1642 mt 2994 1665 L
2994 1665 mt 2991 1667 L
2991 1667 mt 2969 1692 L
2969 1692 mt 2969 1692 L
2969 1692 mt 2948 1717 L
2948 1717 mt 2944 1722 L
2944 1722 mt 2928 1742 L
2928 1742 mt 2919 1754 L
2919 1754 mt 2913 1762 L
2770 2038 mt 2769 2041 L
2769 2041 mt 2768 2042 L
2768 2042 mt 2760 2067 L
2760 2067 mt 2753 2092 L
2753 2092 mt 2746 2117 L
2746 2117 mt 2744 2126 L
2744 2126 mt 2740 2142 L
2740 2142 mt 2734 2167 L
2734 2167 mt 2730 2192 L
2730 2192 mt 2725 2217 L
2725 2217 mt 2721 2242 L
2721 2242 mt 2719 2262 L
/c11 { 0.500000 0.000000 0.000000 sr} bdef
c11
2469 2255 mt 2468 2267 L
2468 2267 mt 2466 2292 L
2466 2292 mt 2464 2317 L
2464 2317 mt 2463 2342 L
2463 2342 mt 2462 2367 L
2462 2367 mt 2462 2392 L
2462 2392 mt 2463 2417 L
2463 2417 mt 2463 2442 L
2463 2442 mt 2465 2467 L
2465 2467 mt 2466 2492 L
2466 2492 mt 2468 2517 L
2468 2517 mt 2469 2524 L
2469 2524 mt 2471 2542 L
2471 2542 mt 2474 2567 L
2474 2567 mt 2478 2592 L
2478 2592 mt 2482 2617 L
2482 2617 mt 2486 2642 L
2486 2642 mt 2491 2667 L
2491 2667 mt 2494 2681 L
2494 2681 mt 2497 2692 L
2497 2692 mt 2503 2717 L
2503 2717 mt 2509 2742 L
2509 2742 mt 2516 2768 L
2516 2768 mt 2519 2777 L
2519 2777 mt 2524 2792 L
2524 2792 mt 2532 2817 L
2532 2817 mt 2540 2842 L
2540 2842 mt 2544 2852 L
2544 2852 mt 2550 2867 L
2550 2867 mt 2559 2892 L
2559 2892 mt 2569 2916 L
2569 2916 mt 2570 2917 L
2570 2917 mt 2581 2942 L
2581 2942 mt 2592 2967 L
2592 2967 mt 2594 2971 L
2594 2971 mt 2604 2992 L
2604 2992 mt 2617 3018 L
2617 3018 mt 2619 3021 L
2619 3021 mt 2631 3043 L
2631 3043 mt 2644 3065 L
2644 3065 mt 2645 3068 L
2645 3068 mt 2660 3093 L
2660 3093 mt 2669 3106 L
2669 3106 mt 2676 3117 L
2676 3117 mt 2693 3142 L
2693 3142 mt 2694 3144 L
2694 3144 mt 2710 3167 L
2710 3167 mt 2719 3179 L
2719 3179 mt 2729 3192 L
2729 3192 mt 2744 3212 L
2744 3212 mt 2748 3217 L
2748 3217 mt 2769 3242 L
2769 3242 mt 2769 3243 L
2769 3243 mt 2791 3267 L
2791 3267 mt 2794 3271 L
2794 3271 mt 2814 3293 L
2814 3293 mt 2819 3298 L
2819 3298 mt 2838 3318 L
2838 3318 mt 2844 3324 L
2844 3324 mt 2864 3343 L
2864 3343 mt 2869 3347 L
2869 3347 mt 2891 3368 L
2891 3368 mt 2894 3370 L
2894 3370 mt 2919 3391 L
2919 3391 mt 2921 3393 L
2921 3393 mt 2944 3411 L
2944 3411 mt 2952 3418 L
2952 3418 mt 2969 3430 L
2969 3430 mt 2986 3442 L
2986 3442 mt 2994 3448 L
2994 3448 mt 3019 3465 L
3019 3465 mt 3024 3467 L
3024 3467 mt 3044 3480 L
3044 3480 mt 3064 3492 L
3064 3492 mt 3069 3495 L
3069 3495 mt 3094 3509 L
3094 3509 mt 3110 3517 L
3110 3517 mt 3119 3522 L
3119 3522 mt 3136 3530 L
3389 3611 mt 3394 3612 L
3394 3612 mt 3419 3616 L
3419 3616 mt 3433 3618 L
3433 3618 mt 3444 3619 L
3444 3619 mt 3469 3621 L
3469 3621 mt 3494 3623 L
3494 3623 mt 3519 3624 L
3519 3624 mt 3544 3624 L
3544 3624 mt 3569 3624 L
3569 3624 mt 3594 3623 L
3594 3623 mt 3619 3621 L
3619 3621 mt 3644 3619 L
3644 3619 mt 3657 3618 L
3657 3618 mt 3669 3616 L
3669 3616 mt 3694 3612 L
3694 3612 mt 3719 3608 L
3719 3608 mt 3744 3603 L
3744 3603 mt 3769 3597 L
3769 3597 mt 3787 3593 L
3787 3593 mt 3794 3591 L
3794 3591 mt 3819 3583 L
3819 3583 mt 3844 3576 L
3844 3576 mt 3868 3567 L
3868 3567 mt 3869 3567 L
3869 3567 mt 3894 3558 L
3894 3558 mt 3919 3547 L
3919 3547 mt 3931 3542 L
3931 3542 mt 3944 3537 L
3944 3537 mt 3969 3525 L
3969 3525 mt 3984 3517 L
3984 3517 mt 3994 3513 L
3994 3513 mt 4019 3499 L
4019 3499 mt 4031 3492 L
4031 3492 mt 4044 3485 L
4044 3485 mt 4069 3470 L
4069 3470 mt 4073 3467 L
4073 3467 mt 4094 3454 L
4094 3454 mt 4112 3442 L
4112 3442 mt 4119 3437 L
4119 3437 mt 4144 3420 L
4144 3420 mt 4147 3418 L
4147 3418 mt 4169 3401 L
4169 3401 mt 4179 3393 L
4179 3393 mt 4194 3381 L
4194 3381 mt 4210 3368 L
4210 3368 mt 4219 3360 L
4219 3360 mt 4239 3343 L
4239 3343 mt 4244 3338 L
4244 3338 mt 4266 3318 L
4266 3318 mt 4269 3314 L
4269 3314 mt 4291 3293 L
4291 3293 mt 4294 3289 L
4294 3289 mt 4315 3267 L
4315 3267 mt 4319 3263 L
4319 3263 mt 4338 3242 L
4338 3242 mt 4344 3235 L
4344 3235 mt 4359 3217 L
4359 3217 mt 4369 3206 L
4369 3206 mt 4380 3192 L
4380 3192 mt 4394 3174 L
4394 3174 mt 4399 3167 L
4399 3167 mt 4418 3142 L
4418 3142 mt 4419 3141 L
4419 3141 mt 4436 3117 L
4436 3117 mt 4444 3105 L
4444 3105 mt 4452 3093 L
4452 3093 mt 4468 3068 L
4468 3068 mt 4469 3067 L
4469 3067 mt 4484 3043 L
4484 3043 mt 4494 3025 L
4494 3025 mt 4498 3018 L
4498 3018 mt 4512 2992 L
4512 2992 mt 4519 2979 L
4519 2979 mt 4525 2967 L
4525 2967 mt 4538 2942 L
4538 2942 mt 4544 2929 L
4544 2929 mt 4547 2924 L
4648 2619 mt 4648 2617 L
4648 2617 mt 4653 2592 L
4653 2592 mt 4657 2567 L
4657 2567 mt 4661 2542 L
4661 2542 mt 4665 2517 L
4665 2517 mt 4668 2492 L
4668 2492 mt 4669 2480 L
4669 2480 mt 4670 2467 L
4670 2467 mt 4672 2442 L
4672 2442 mt 4674 2417 L
4674 2417 mt 4675 2392 L
4675 2392 mt 4676 2367 L
4676 2367 mt 4676 2342 L
4676 2342 mt 4675 2317 L
4675 2317 mt 4675 2292 L
4675 2292 mt 4673 2267 L
4673 2267 mt 4672 2242 L
4672 2242 mt 4670 2217 L
4670 2217 mt 4669 2211 L
4669 2211 mt 4667 2192 L
4667 2192 mt 4664 2167 L
4664 2167 mt 4660 2142 L
4660 2142 mt 4656 2117 L
4656 2117 mt 4652 2092 L
4652 2092 mt 4647 2067 L
4647 2067 mt 4644 2054 L
4644 2054 mt 4641 2042 L
4641 2042 mt 4635 2017 L
4635 2017 mt 4629 1992 L
4629 1992 mt 4622 1967 L
4622 1967 mt 4619 1958 L
4619 1958 mt 4614 1942 L
4614 1942 mt 4606 1917 L
4606 1917 mt 4598 1892 L
4598 1892 mt 4594 1883 L
4594 1883 mt 4588 1867 L
4588 1867 mt 4579 1842 L
4579 1842 mt 4569 1819 L
4569 1819 mt 4568 1817 L
4568 1817 mt 4557 1792 L
4557 1792 mt 4546 1767 L
4546 1767 mt 4544 1764 L
4544 1764 mt 4534 1742 L
4534 1742 mt 4521 1717 L
4521 1717 mt 4519 1714 L
4519 1714 mt 4507 1692 L
4507 1692 mt 4494 1670 L
4494 1670 mt 4493 1667 L
4493 1667 mt 4478 1642 L
4478 1642 mt 4469 1629 L
4469 1629 mt 4462 1617 L
4462 1617 mt 4445 1593 L
4445 1593 mt 4444 1591 L
4444 1591 mt 4428 1567 L
4428 1567 mt 4419 1556 L
4419 1556 mt 4409 1542 L
4409 1542 mt 4394 1523 L
4394 1523 mt 4390 1517 L
4390 1517 mt 4369 1492 L
4369 1492 mt 4369 1492 L
4369 1492 mt 4347 1467 L
4347 1467 mt 4344 1464 L
4344 1464 mt 4324 1442 L
4324 1442 mt 4319 1437 L
4319 1437 mt 4300 1417 L
4300 1417 mt 4294 1411 L
4294 1411 mt 4274 1392 L
4274 1392 mt 4269 1388 L
4269 1388 mt 4247 1367 L
4247 1367 mt 4244 1365 L
4244 1365 mt 4219 1344 L
4219 1344 mt 4217 1342 L
4217 1342 mt 4194 1324 L
4194 1324 mt 4186 1317 L
4186 1317 mt 4169 1305 L
4169 1305 mt 4152 1292 L
4152 1292 mt 4144 1287 L
4144 1287 mt 4119 1270 L
4119 1270 mt 4114 1267 L
4114 1267 mt 4094 1255 L
4094 1255 mt 4074 1242 L
4074 1242 mt 4069 1240 L
4069 1240 mt 4059 1234 L
3810 1136 mt 3794 1133 L
3794 1133 mt 3769 1128 L
3769 1128 mt 3744 1123 L
3744 1123 mt 3719 1119 L
3719 1119 mt 3705 1117 L
3705 1117 mt 3694 1116 L
3694 1116 mt 3669 1114 L
3669 1114 mt 3644 1112 L
3644 1112 mt 3619 1111 L
3619 1111 mt 3594 1111 L
3594 1111 mt 3569 1111 L
3569 1111 mt 3544 1112 L
3544 1112 mt 3519 1114 L
3519 1114 mt 3494 1116 L
3494 1116 mt 3481 1117 L
3481 1117 mt 3469 1119 L
3469 1119 mt 3444 1123 L
3444 1123 mt 3419 1127 L
3419 1127 mt 3394 1132 L
3394 1132 mt 3369 1138 L
3369 1138 mt 3351 1142 L
3351 1142 mt 3344 1144 L
3344 1144 mt 3319 1152 L
3319 1152 mt 3294 1159 L
3294 1159 mt 3270 1167 L
3270 1167 mt 3269 1168 L
3269 1168 mt 3244 1177 L
3244 1177 mt 3219 1188 L
3219 1188 mt 3207 1192 L
3207 1192 mt 3194 1198 L
3194 1198 mt 3169 1210 L
3169 1210 mt 3154 1217 L
3154 1217 mt 3144 1222 L
3144 1222 mt 3119 1236 L
3119 1236 mt 3107 1242 L
3107 1242 mt 3094 1250 L
3094 1250 mt 3069 1265 L
3069 1265 mt 3065 1267 L
3065 1267 mt 3044 1281 L
3044 1281 mt 3026 1292 L
3026 1292 mt 3019 1298 L
3019 1298 mt 2994 1315 L
2994 1315 mt 2991 1317 L
2991 1317 mt 2969 1334 L
2969 1334 mt 2959 1342 L
2959 1342 mt 2944 1354 L
2944 1354 mt 2928 1367 L
2928 1367 mt 2919 1375 L
2919 1375 mt 2899 1392 L
2899 1392 mt 2894 1397 L
2894 1397 mt 2872 1417 L
2872 1417 mt 2869 1421 L
2869 1421 mt 2847 1442 L
2847 1442 mt 2844 1446 L
2844 1446 mt 2823 1467 L
2823 1467 mt 2819 1472 L
2819 1472 mt 2800 1492 L
2800 1492 mt 2794 1500 L
2794 1500 mt 2779 1517 L
2779 1517 mt 2769 1529 L
2769 1529 mt 2758 1542 L
2758 1542 mt 2744 1561 L
2744 1561 mt 2739 1567 L
2739 1567 mt 2720 1593 L
2720 1593 mt 2719 1594 L
2719 1594 mt 2702 1617 L
2702 1617 mt 2694 1630 L
2694 1630 mt 2686 1642 L
2686 1642 mt 2670 1667 L
2670 1667 mt 2669 1668 L
2669 1668 mt 2654 1692 L
2654 1692 mt 2644 1710 L
2644 1710 mt 2640 1717 L
2640 1717 mt 2626 1742 L
2626 1742 mt 2625 1745 L
2508 2041 mt 2507 2042 L
2507 2042 mt 2501 2067 L
2501 2067 mt 2495 2092 L
2495 2092 mt 2494 2098 L
2494 2098 mt 2490 2117 L
2490 2117 mt 2485 2142 L
2485 2142 mt 2481 2167 L
2481 2167 mt 2477 2192 L
2477 2192 mt 2473 2217 L
2473 2217 mt 2470 2242 L
2470 2242 mt 2469 2255 L
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

3395 2051 mt  -5 rotate
(0.005) s
5 rotate
3672 2951 mt  -22 rotate
(0.01) s
22 rotate
3190 2060 mt  -37 rotate
(0.01) s
37 rotate
3652 3372 mt  -12 rotate
(0.03) s
12 rotate
4123 1693 mt  -312 rotate
(0.03) s
312 rotate
2808 2017 mt  -56 rotate
(0.03) s
56 rotate
3137 3587 mt  -345 rotate
(0.05) s
345 rotate
4594 2898 mt  -67 rotate
(0.05) s
67 rotate
3812 1186 mt  -342 rotate
(0.05) s
342 rotate
2547 2013 mt  -63 rotate
(0.05) s
63 rotate
3 -79 7 -79 13 -78 17 -77 22 -77 28 -74 31 -73 37 -70 
40 -68 45 -66 49 -62 53 -59 57 -56 60 -52 63 -48 66 -44 
69 -39 71 -36 73 -30 75 -26 76 -21 78 -17 78 -11 80 -6 
79 -1 79 3 79 9 78 14 77 19 76 23 74 29 72 33 
70 37 67 42 65 46 62 50 58 54 55 57 51 61 47 64 
42 66 39 70 34 71 30 74 24 75 20 77 15 78 10 79 
5 79 0 79 -5 79 -10 79 -15 78 -20 77 -24 75 -30 74 
-34 71 -39 70 -42 66 -47 64 -51 61 -55 57 -58 54 -62 50 
-65 46 -67 42 -70 37 -72 33 -74 29 -76 23 -77 19 -78 14 
-79 9 -79 3 -79 -1 -80 -6 -78 -11 -78 -17 -76 -21 -75 -26 
-73 -30 -71 -36 -69 -39 -66 -44 -63 -48 -60 -52 -57 -56 -53 -59 
-49 -62 -45 -66 -40 -68 -37 -70 -31 -73 -28 -74 -22 -77 -17 -77 
-13 -78 -7 -79 -3 -79 4819 2367 100 MP stroke
1 0 0 -2 1 -1 1 -1 1 0 1 0 1 1 1 1 
0 3 -1 1 0 2 -1 2 -2 2 -2 2 -3 3 -2 2 
-3 1 -3 2 -4 1 -4 0 -3 0 -4 0 -3 -2 -3 -3 
-2 -4 -2 -4 -1 -7 1 -7 2 -8 4 -10 5 -10 9 -13 
11 -13 14 -14 16 -13 18 -11 19 -10 21 -7 22 -5 22 -1 
22 3 21 8 19 14 16 20 12 28 6 34 -1 43 -11 56 
-24 64 -37 73 -53 78 -67 79 -81 80 -97 78 -112 71 -121 58 
-130 42 -137 19 -137 -10 -124 -40 -113 -75 -97 -111 -74 -146 -20 -61 
-16 -64 -11 -69 -8 -73 0 -15 -1 -15 -1 -16 0 -30 4819 2367 72 MP stroke
0 -1 -1 1 1 -1 1 -1 1 -1 1 0 1 0 -1 0 
2 2 0 2 -1 1 0 1 -1 2 -1 1 -2 2 -2 2 
-2 1 -2 2 -3 1 -3 1 -3 0 -2 0 -3 -1 -3 -1 
-2 -2 -2 -3 -1 -4 -1 -4 1 -6 2 -8 4 -9 6 -10 
8 -11 9 -10 12 -10 13 -10 15 -9 16 -6 17 -5 17 -2 
18 1 17 4 17 9 14 15 10 19 7 25 1 30 -5 37 
-11 42 -23 52 -33 57 -45 62 -58 64 -43 40 -48 39 -53 38 
-57 36 -12 6 -12 7 -13 6 -12 7 3819 1867 62 MP stroke
1 0 0 -2 1 -1 1 -1 1 0 1 0 1 0 1 0 
1 1 0 4 -1 2 0 1 -1 3 -2 2 -3 3 -2 2 
-3 3 -4 2 -4 2 -4 1 -4 1 -4 0 -4 -1 -4 -2 
-4 -2 -3 -5 -2 -5 -1 -7 0 -8 3 -10 3 -11 6 -12 
10 -15 12 -15 16 -16 19 -16 20 -13 23 -12 24 -9 26 -7 
26 -1 26 2 25 9 23 15 20 23 14 31 9 39 0 49 
-11 60 -23 70 -38 79 -53 85 -72 92 -91 95 -110 94 -127 88 
-138 72 -150 54 -158 29 -160 -6 -190 -66 -165 -137 -126 -212 -68 -279 
-3 -257 46 -286 101 -314 161 -342 141 -242 171 -257 203 -271 145 -175 
4022 4369 73 MP stroke
gr

24 w
0 sg
4 w
DO
SO
6 w
1569  367 mt 5569  367 L
1569 4368 mt 5569 4368 L
5569 4368 mt 5569  367 L
1569 4368 mt 1569  367 L
1569 4368 mt 5569 4368 L
1569 4368 mt 1569  367 L
1569 4368 mt 1569 4328 L
1569  367 mt 1569  407 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1416 4513 mt 
(-0.8) s
2069 4368 mt 2069 4328 L
2069  367 mt 2069  407 L
1916 4513 mt 
(-0.6) s
2569 4368 mt 2569 4328 L
2569  367 mt 2569  407 L
2416 4513 mt 
(-0.4) s
3069 4368 mt 3069 4328 L
3069  367 mt 3069  407 L
2916 4513 mt 
(-0.2) s
3569 4368 mt 3569 4328 L
3569  367 mt 3569  407 L
3536 4513 mt 
(0) s
4069 4368 mt 4069 4328 L
4069  367 mt 4069  407 L
3986 4513 mt 
(0.2) s
4569 4368 mt 4569 4328 L
4569  367 mt 4569  407 L
4486 4513 mt 
(0.4) s
5069 4368 mt 5069 4328 L
5069  367 mt 5069  407 L
4986 4513 mt 
(0.6) s
5569 4368 mt 5569 4328 L
5569  367 mt 5569  407 L
5486 4513 mt 
(0.8) s
1569 4368 mt 1609 4368 L
5569 4368 mt 5529 4368 L
1298 4412 mt 
(-0.8) s
1569 3868 mt 1609 3868 L
5569 3868 mt 5529 3868 L
1298 3912 mt 
(-0.6) s
1569 3368 mt 1609 3368 L
5569 3368 mt 5529 3368 L
1298 3412 mt 
(-0.4) s
1569 2867 mt 1609 2867 L
5569 2867 mt 5529 2867 L
1298 2911 mt 
(-0.2) s
1569 2367 mt 1609 2367 L
5569 2367 mt 5529 2367 L
1468 2411 mt 
(0) s
1569 1867 mt 1609 1867 L
5569 1867 mt 5529 1867 L
1368 1911 mt 
(0.2) s
1569 1367 mt 1609 1367 L
5569 1367 mt 5529 1367 L
1368 1411 mt 
(0.4) s
1569  867 mt 1609  867 L
5569  867 mt 5529  867 L
1368  911 mt 
(0.6) s
1569  367 mt 1609  367 L
5569  367 mt 5529  367 L
1368  411 mt 
(0.8) s
1569  367 mt 5569  367 L
1569 4368 mt 5569 4368 L
5569 4368 mt 5569  367 L
1569 4368 mt 1569  367 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 203 x Fy(Fig.)20 b(7.)61 b(Le)n(v)o(el)21
b(Sets)f(of)h(the)g(con)m(v)o(erse)h(L)l(yapuno)o(v)g(function,)f(with)
f(Ball)0 5046 y(of)26 b(radius)h Fo(r)19 b Fk(=)d Fp(:)p
Fy(25)2326 4756 y @beginspecial 0 @llx 0 @lly 366 @urx
346 @ury 1830 @rwi @setspecial
%%BeginDocument: VDP_levelsets.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: VDP_levelsets.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Peet
%%CreationDate: 5/6/2011
%%BoundingBox: 0 0 366 346
%%HiResBoundingBox: 0 0 365.3799 345.8531
%%CropBox: 0 0 365.3799 345.8531
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541
%ADO_ContainsXMP: MainFirst

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-05-06T15:55:27-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>244</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9A+dtQ1y1uNCTR2uvWn1&#xA;G3S7it7czRNaGZFuDM/1edYwqMSOU0PchmK8Cqj7HVdbvVmlhsLZYI7i4t42kupA7fV53h5FRbsF&#xA;5enWnI4qifX1/wD5Y7T/AKSpP+yfFXevr/8Ayx2n/SVJ/wBk+Ku9fX/+WO0/6SpP+yfFXevr/wDy&#xA;x2n/AElSf9k+KrUuvMDNIDYWqhG4gm6k+IcQaj/R/emKrvX1/wD5Y7T/AKSpP+yfFXevr/8Ayx2n&#xA;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&#xA;Qp9Z/Y9H1v8Advhx3xV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2011-05-06T15:55:28-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-05-06T15:55:28-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:FDD74F2C2378E011938DACEC9169FBC4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FDD74F2C2378E011938DACEC9169FBC4</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FDD74F2C2378E011938DACEC9169FBC4</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FDD74F2C2378E011938DACEC9169FBC4</stEvt:instanceID>
                  <stEvt:when>2011-05-06T15:55:28-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -345.853 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 345.853 li
365.38 345.853 li
365.38 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.5 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
14.25 331.27 mo
14.25 6.02002 li
363 6.02002 li
363 331.27 li
14.25 331.27 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
@
2 lw
113 162.186 mo
112.5 163.186 li
.5625 .5625 0 .4375 cmyk
@
112.5 163.186 mo
110.417 168.603 li
@
110.417 168.603 mo
109.167 174.02 li
@
109.167 174.02 mo
108.5 179.436 li
@
108.5 179.436 mo
108.333 184.853 li
@
108.333 184.853 mo
108.667 190.27 li
@
108.667 190.27 mo
109.333 195.686 li
@
109.333 195.686 mo
110.25 201.103 li
@
110.25 201.103 mo
111.417 206.52 li
@
111.417 206.52 mo
112.833 211.936 li
@
112.833 211.936 mo
113 212.52 li
@
113 212.52 mo
114.667 217.353 li
@
114.667 217.353 mo
116.833 222.853 li
@
116.833 222.853 mo
118.833 227.353 li
@
118.833 227.353 mo
119.333 228.27 li
@
119.333 228.27 mo
122.667 233.686 li
@
122.667 233.686 mo
124.667 236.52 li
@
124.667 236.52 mo
127 239.103 li
@
127 239.103 mo
130.5 242.27 li
@
130.5 242.27 mo
133.833 244.52 li
@
133.833 244.52 mo
136.25 245.77 li
@
136.25 245.77 mo
142.083 247.52 li
@
142.083 247.52 mo
147.917 248.02 li
@
147.917 248.02 mo
153.75 247.52 li
@
153.75 247.52 mo
159.5 246.27 li
@
159.5 246.27 mo
165.25 244.52 li
@
165.25 244.52 mo
165.333 244.436 li
@
165.333 244.436 mo
171.167 241.936 li
@
171.167 241.936 mo
177 239.27 li
@
177 239.27 mo
177.333 239.103 li
@
177.333 239.103 mo
182.75 236.103 li
@
182.75 236.103 mo
187.25 233.686 li
@
187.25 233.686 mo
188.583 232.853 li
@
188.583 232.853 mo
194.417 229.353 li
@
194.417 229.353 mo
196.25 228.27 li
@
196.25 228.27 mo
200.25 225.77 li
@
200.25 225.77 mo
205 222.853 li
@
205 222.853 mo
206 222.186 li
@
206 222.186 mo
211.833 218.436 li
@
211.833 218.436 mo
213.583 217.353 li
@
213.583 217.353 mo
217.667 214.686 li
@
217.667 214.686 mo
222 211.936 li
@
222 211.936 mo
223.417 211.02 li
@
223.417 211.02 mo
229.25 207.27 li
@
229.25 207.27 mo
230.333 206.52 li
@
230.333 206.52 mo
235.083 203.27 li
@
235.083 203.27 mo
238.333 201.103 li
@
238.333 201.103 mo
240.917 199.186 li
@
240.917 199.186 mo
245.667 195.686 li
@
245.667 195.686 mo
246.75 194.853 li
@
246.75 194.853 mo
252.083 190.27 li
@
252.083 190.27 mo
252.5 189.936 li
@
252.5 189.936 mo
257.417 184.853 li
@
257.417 184.853 mo
258.333 183.77 li
@
258.333 183.77 mo
261.583 179.436 li
@
261.583 179.436 mo
264.167 175.02 li
@
264.167 175.02 mo
264.667 174.02 li
@
264.667 174.02 mo
266.75 168.603 li
@
266.75 168.603 mo
268 163.186 li
@
268 163.186 mo
268.667 157.77 li
@
268.667 157.77 mo
268.833 152.353 li
@
268.833 152.353 mo
268.5 146.936 li
@
268.5 146.936 mo
267.833 141.52 li
@
267.833 141.52 mo
266.917 136.103 li
@
266.917 136.103 mo
265.75 130.686 li
@
265.75 130.686 mo
264.333 125.27 li
@
264.333 125.27 mo
264.167 124.686 li
@
264.167 124.686 mo
262.5 119.853 li
@
262.5 119.853 mo
260.333 114.436 li
@
260.333 114.436 mo
258.333 109.853 li
@
258.333 109.853 mo
257.833 108.936 li
@
257.833 108.936 mo
254.5 103.52 li
@
254.5 103.52 mo
252.5 100.686 li
@
252.5 100.686 mo
250.167 98.103 li
@
250.167 98.103 mo
246.75 94.936 li
@
246.75 94.936 mo
243.333 92.686 li
@
243.333 92.686 mo
240.917 91.436 li
@
240.917 91.436 mo
235.083 89.686 li
@
235.083 89.686 mo
229.25 89.186 li
@
229.25 89.186 mo
223.417 89.686 li
@
223.417 89.686 mo
217.667 90.936 li
@
217.667 90.936 mo
211.917 92.686 li
@
211.917 92.686 mo
211.833 92.77 li
@
211.833 92.77 mo
206 95.27 li
@
206 95.27 mo
200.25 97.936 li
@
200.25 97.936 mo
199.833 98.103 li
@
199.833 98.103 mo
194.417 101.103 li
@
194.417 101.103 mo
189.917 103.52 li
@
189.917 103.52 mo
188.583 104.353 li
@
188.583 104.353 mo
182.75 107.853 li
@
182.75 107.853 mo
180.917 108.936 li
@
180.917 108.936 mo
177 111.436 li
@
177 111.436 mo
172.167 114.436 li
@
172.167 114.436 mo
171.167 115.02 li
@
171.167 115.02 mo
165.333 118.77 li
@
165.333 118.77 mo
163.583 119.853 li
@
163.583 119.853 mo
159.5 122.52 li
@
159.5 122.52 mo
155.167 125.27 li
@
155.167 125.27 mo
153.75 126.186 li
@
153.75 126.186 mo
147.917 129.936 li
@
147.917 129.936 mo
146.833 130.686 li
@
146.833 130.686 mo
142.083 133.936 li
@
142.083 133.936 mo
138.833 136.103 li
@
138.833 136.103 mo
136.25 138.02 li
@
136.25 138.02 mo
131.5 141.52 li
@
131.5 141.52 mo
130.5 142.353 li
@
130.5 142.353 mo
125.083 146.936 li
@
125.083 146.936 mo
124.667 147.27 li
@
124.667 147.27 mo
119.75 152.353 li
@
119.75 152.353 mo
118.833 153.436 li
@
118.833 153.436 mo
115.583 157.77 li
@
115.583 157.77 mo
113 162.186 li
@
363.083 188.603 mo
362 188.686 li
360.083 188.936 li
358.167 189.27 li
356.25 189.52 li
354.167 189.853 li
352.083 190.103 li
349.917 190.52 li
347.75 190.853 li
345.333 191.27 li
343 191.686 li
340.5 192.103 li
338.083 192.603 li
335.333 193.103 li
332.5 193.686 li
329.667 194.27 li
326.75 194.936 li
323.5 195.686 li
320.167 196.52 li
316.667 197.436 li
313.083 198.436 li
308.917 199.686 li
304.583 201.02 li
300.083 202.603 li
295.333 204.353 li
289.333 206.77 li
282.833 209.686 li
275.917 213.186 li
268.333 217.436 li
255.167 226.02 li
239.417 238.603 li
219.75 257.02 li
194.75 281.436 li
180.917 294.27 li
165.583 305.853 li
149.083 313.436 li
132.167 313.686 li
115.75 302.936 li
101.25 282.936 li
89.417 257.436 li
80.75 230.02 li
75.75 208.52 li
72.75 190.603 li
71.25 176.52 li
71.083 165.853 li
71.417 160.27 li
72.083 155.686 li
73.083 151.853 li
74.25 148.603 li
75.667 145.853 li
77.167 143.52 li
78.833 141.436 li
80.667 139.52 li
83.25 137.27 li
86.083 135.186 li
89 133.27 li
92.083 131.27 li
97.083 128.353 li
102.417 125.103 li
108.167 121.52 li
114.417 117.436 li
122.333 111.853 li
131.167 105.02 li
141.167 96.603 li
152.5 86.186 li
162.417 76.436 li
173.583 65.27 li
186.167 53.02 li
200.083 40.603 li
215.417 29.686 li
231.667 23.686 li
248.25 25.686 li
264 37.52 li
273.583 51.02 li
282 67.686 li
289.083 85.936 li
294.75 104.353 li
299 121.436 li
302 136.603 li
304 149.52 li
305.083 160.186 li
305.333 167.02 li
305.25 172.853 li
304.833 177.77 li
304.167 181.936 li
303.25 185.436 li
302.167 188.436 li
300.917 191.02 li
299.5 193.353 li
297.583 195.77 li
295.417 198.02 li
293.167 200.02 li
290.75 201.853 li
287.167 204.27 li
283.333 206.686 li
279.333 209.186 li
275 211.77 li
266.583 217.103 li
257.167 223.603 li
246.333 231.853 li
233.75 242.52 li
224.917 250.686 li
215.083 260.353 li
204.083 271.353 li
191.75 283.353 li
178.083 295.77 li
163 306.52 li
146.917 313.02 li
130.5 312.186 li
113.417 299.27 li
98.583 276.77 li
86.917 249.436 li
78.75 221.353 li
74.417 200.103 li
72 183.02 li
71.25 170.02 li
71.583 160.436 li
72.333 155.603 li
73.333 151.603 li
74.583 148.27 li
76.083 145.436 li
77.75 143.02 li
79.5 140.853 li
81.5 138.936 li
83.583 137.186 li
86.667 134.936 li
90 132.686 li
93.5 130.52 li
97.25 128.27 li
103.667 124.353 li
110.75 119.936 li
118.583 114.603 li
127.25 108.186 li
135.417 101.52 li
144.583 93.603 li
154.75 83.936 li
166.333 72.52 li
179.5 59.52 li
194.417 45.436 li
211.167 32.436 li
229.25 24.103 li
245 24.52 li
260.25 33.52 li
273.917 50.853 li
285.417 74.686 li
292.833 96.186 li
298.333 116.77 li
302.083 135.02 li
304.417 150.186 li
305.417 160.353 li
305.667 168.686 li
305.417 175.436 li
304.667 180.936 li
304.25 182.936 li
303.75 184.853 li
303.25 186.52 li
302.667 188.103 li
0 0 0 1 cmyk
@
194.417 157.77 mo
194.083 157.936 li
193.833 158.02 li
193.5 158.186 li
193.25 158.353 li
191.917 159.103 li
190.667 159.936 li
189.583 160.77 li
188.583 161.603 li
187.25 163.02 li
186.167 164.353 li
185.417 165.603 li
184.917 166.77 li
184.583 167.603 li
184.5 168.436 li
184.583 169.103 li
184.667 169.603 li
184.917 170.02 li
185.25 170.353 li
185.667 170.52 li
186.083 170.686 li
186.5 170.686 li
186.833 170.603 li
187.25 170.52 li
187.583 170.353 li
188 170.186 li
188.25 170.02 li
188.583 169.77 li
188.75 169.52 li
189 169.353 li
189.083 169.103 li
189.167 168.853 li
189.25 168.686 li
189.25 168.52 li
189.167 168.436 li
189.167 168.353 li
189.083 168.27 li
189 168.27 li
188.917 168.27 li
188.833 168.27 li
188.75 168.353 li
188.667 168.353 li
188.583 168.436 li
188.5 168.52 li
188.5 168.686 li
188.583 168.603 li
@
188.667 222.77 mo
188.583 222.77 li
188.667 222.77 li
188.75 222.686 li
188.833 222.603 li
188.833 222.52 li
188.917 222.436 li
189.333 222.103 li
189.667 221.77 li
190 221.436 li
190.417 221.103 li
192.083 219.436 li
193.833 217.686 li
195.417 216.02 li
197 214.353 li
202.5 208.186 li
207.167 202.353 li
211.167 196.77 li
214.5 191.52 li
218.167 184.103 li
220.583 177.27 li
221.583 171.103 li
221.583 165.52 li
220 159.436 li
217.083 154.853 li
213.167 151.853 li
208.833 150.436 li
205.083 150.353 li
201.417 150.936 li
197.917 152.103 li
194.667 153.686 li
191.75 155.603 li
189.167 157.603 li
187.083 159.686 li
185.417 161.686 li
184.167 163.52 li
183.25 165.27 li
182.75 166.77 li
182.5 168.103 li
182.5 169.103 li
182.667 170.02 li
183 170.686 li
183.5 171.186 li
184 171.52 li
184.583 171.686 li
185.167 171.686 li
185.833 171.686 li
186.417 171.52 li
187 171.353 li
187.5 171.103 li
188 170.77 li
188.417 170.436 li
188.75 170.103 li
189.083 169.77 li
189.333 169.436 li
189.417 169.186 li
189.5 168.936 li
189.583 168.77 li
189.583 168.436 li
189.5 168.27 li
189.417 168.186 li
189.333 168.186 li
189.25 168.103 li
189.167 168.103 li
189.083 168.103 li
189 168.103 li
188.917 168.103 li
188.75 168.186 li
188.667 168.27 li
188.583 168.353 li
188.5 168.436 li
188.417 168.52 li
188.417 168.686 li
188.5 168.686 li
188.583 168.603 li
@
217.667 168.603 mo
217.667 167.603 li
217.583 167.27 li
217.583 166.936 li
217.417 165.353 li
217.167 163.853 li
216.75 162.436 li
216.333 161.186 li
214.583 158.02 li
212.333 155.603 li
209.667 153.936 li
206.833 153.103 li
203.667 152.853 li
200.5 153.27 li
197.417 154.186 li
194.667 155.436 li
192 157.02 li
189.75 158.686 li
187.833 160.436 li
186.333 162.103 li
185.083 163.853 li
184.25 165.436 li
183.667 166.77 li
183.417 168.02 li
183.417 168.936 li
183.5 169.686 li
183.833 170.27 li
184.167 170.686 li
184.667 171.02 li
185.083 171.186 li
185.583 171.27 li
186.167 171.27 li
186.667 171.103 li
187.167 170.936 li
187.583 170.77 li
188 170.52 li
188.417 170.27 li
188.667 169.936 li
189 169.686 li
189.167 169.353 li
189.25 169.186 li
189.333 168.936 li
189.417 168.77 li
189.417 168.353 li
189.333 168.27 li
189.25 168.186 li
189.167 168.186 li
189.083 168.186 li
189 168.186 li
188.917 168.186 li
188.833 168.186 li
188.75 168.27 li
188.667 168.353 li
188.583 168.353 li
188.417 168.52 li
188.417 168.603 li
188.5 168.686 li
188.583 168.603 li
@
136.25 184.27 mo
136.167 184.853 li
.5625 .5625 0 .4375 cmyk
@
136.167 184.853 mo
135.583 190.27 li
@
135.583 190.27 mo
135.667 195.686 li
@
135.667 195.686 mo
136.25 200.686 li
@
136.25 200.686 mo
136.333 201.103 li
@
136.333 201.103 mo
138.083 206.52 li
@
138.083 206.52 mo
140.667 211.936 li
@
140.667 211.936 mo
142.083 214.02 li
@
142.083 214.02 mo
145.583 217.353 li
@
145.583 217.353 mo
147.917 219.02 li
@
147.917 219.02 mo
153.75 220.936 li
@
153.75 220.936 mo
159.5 221.02 li
@
159.5 221.02 mo
165.333 219.853 li
@
165.333 219.853 mo
171.167 217.936 li
@
171.167 217.936 mo
172.333 217.353 li
@
172.333 217.353 mo
177 215.103 li
@
177 215.103 mo
182.75 212.02 li
@
182.75 212.02 mo
182.833 211.936 li
@
182.833 211.936 mo
188.583 208.27 li
@
188.583 208.27 mo
191.25 206.52 li
@
191.25 206.52 mo
194.417 204.436 li
@
194.417 204.436 mo
199.167 201.103 li
@
199.167 201.103 mo
200.25 200.353 li
@
200.25 200.353 mo
206 196.103 li
@
206 196.103 mo
206.583 195.686 li
@
206.583 195.686 mo
211.833 191.603 li
@
211.833 191.603 mo
213.5 190.27 li
@
213.5 190.27 mo
217.667 186.77 li
@
217.667 186.77 mo
219.917 184.853 li
@
219.917 184.853 mo
223.417 181.52 li
@
223.417 181.52 mo
225.667 179.436 li
@
225.667 179.436 mo
229.25 175.52 li
@
229.25 175.52 mo
230.5 174.02 li
@
230.5 174.02 mo
234.5 168.603 li
@
234.5 168.603 mo
235.083 167.686 li
@
235.083 167.686 mo
237.417 163.186 li
@
237.417 163.186 mo
239.583 157.77 li
@
239.583 157.77 mo
240.917 152.936 li
@
240.917 152.936 mo
241 152.353 li
@
241 152.353 mo
241.583 146.936 li
@
241.583 146.936 mo
241.5 141.52 li
@
241.5 141.52 mo
240.917 136.52 li
@
240.917 136.52 mo
240.833 136.103 li
@
240.833 136.103 mo
239.083 130.686 li
@
239.083 130.686 mo
236.5 125.27 li
@
236.5 125.27 mo
235.083 123.186 li
@
235.083 123.186 mo
231.583 119.853 li
@
231.583 119.853 mo
229.25 118.186 li
@
229.25 118.186 mo
223.417 116.27 li
@
223.417 116.27 mo
217.667 116.186 li
@
217.667 116.186 mo
211.833 117.353 li
@
211.833 117.353 mo
206 119.27 li
@
206 119.27 mo
204.833 119.853 li
@
204.833 119.853 mo
200.25 122.103 li
@
200.25 122.103 mo
194.417 125.186 li
@
194.417 125.186 mo
194.333 125.27 li
@
194.333 125.27 mo
188.583 128.936 li
@
188.583 128.936 mo
185.917 130.686 li
@
185.917 130.686 mo
182.75 132.77 li
@
182.75 132.77 mo
178 136.103 li
@
178 136.103 mo
177 136.853 li
@
177 136.853 mo
171.167 141.103 li
@
171.167 141.103 mo
170.583 141.52 li
@
170.583 141.52 mo
165.333 145.603 li
@
165.333 145.603 mo
163.667 146.936 li
@
163.667 146.936 mo
159.5 150.436 li
@
159.5 150.436 mo
157.25 152.353 li
@
157.25 152.353 mo
153.75 155.686 li
@
153.75 155.686 mo
151.5 157.77 li
@
151.5 157.77 mo
147.917 161.686 li
@
147.917 161.686 mo
146.667 163.186 li
@
146.667 163.186 mo
142.667 168.603 li
@
142.667 168.603 mo
142.083 169.52 li
@
142.083 169.52 mo
139.75 174.02 li
@
139.75 174.02 mo
137.583 179.436 li
@
137.583 179.436 mo
136.25 184.27 li
@
107.25 165.853 mo
106.417 168.603 li
.75 .75 0 .25 cmyk
@
106.417 168.603 mo
105.25 174.02 li
@
105.25 174.02 mo
104.583 179.436 li
@
104.583 179.436 mo
104.25 184.853 li
@
104.25 184.853 mo
104.25 190.27 li
@
104.25 190.27 mo
104.417 195.686 li
@
104.417 195.686 mo
104.917 201.103 li
@
104.917 201.103 mo
105.5 206.52 li
@
105.5 206.52 mo
106.333 211.936 li
@
106.333 211.936 mo
107.167 217.353 li
@
107.167 217.353 mo
107.25 217.603 li
@
107.25 217.603 mo
107.917 222.853 li
@
107.917 222.853 mo
108.667 228.27 li
@
108.667 228.27 mo
109.417 233.686 li
@
109.417 233.686 mo
110.083 239.103 li
@
110.083 239.103 mo
110.667 244.52 li
@
110.667 244.52 mo
111.167 249.936 li
@
111.167 249.936 mo
111.583 255.353 li
@
111.583 255.353 mo
112.25 260.77 li
@
112.25 260.77 mo
113 265.186 li
@
113 265.186 mo
113.167 266.186 li
@
113.167 266.186 mo
114.833 271.603 li
@
114.833 271.603 mo
117.667 277.02 li
@
117.667 277.02 mo
118.833 278.353 li
@
118.833 278.353 mo
122.5 282.436 li
@
122.5 282.436 mo
124.667 284.02 li
@
124.667 284.02 mo
130.5 287.436 li
@
130.5 287.436 mo
131.583 287.853 li
@
131.583 287.853 mo
136.25 289.103 li
@
136.25 289.103 mo
142.083 289.77 li
@
142.083 289.77 mo
147.917 289.436 li
@
147.917 289.436 mo
153.75 288.186 li
@
153.75 288.186 mo
154.667 287.853 li
@
154.667 287.853 mo
159.5 285.853 li
@
159.5 285.853 mo
165.333 282.853 li
@
165.333 282.853 mo
166 282.436 li
@
166 282.436 mo
171.167 279.02 li
@
171.167 279.02 mo
173.833 277.02 li
@
173.833 277.02 mo
177 274.686 li
@
177 274.686 mo
180.75 271.603 li
@
180.75 271.603 mo
182.75 270.02 li
@
182.75 270.02 mo
187.25 266.186 li
@
187.25 266.186 mo
188.583 265.103 li
@
188.583 265.103 mo
193.583 260.77 li
@
193.583 260.77 mo
194.417 260.103 li
@
194.417 260.103 mo
199.833 255.353 li
@
199.833 255.353 mo
200.25 255.02 li
@
200.25 255.02 mo
206 249.936 li
@
206 249.936 mo
206 249.936 li
@
206 249.936 mo
211.833 244.77 li
@
211.833 244.77 mo
212.083 244.52 li
@
212.083 244.52 mo
217.667 239.52 li
@
217.667 239.52 mo
218.083 239.103 li
@
218.083 239.103 mo
223.417 234.103 li
@
223.417 234.103 mo
224 233.686 li
@
224 233.686 mo
229.25 228.686 li
@
229.25 228.686 mo
229.75 228.27 li
@
229.75 228.27 mo
235.083 222.936 li
@
235.083 222.936 mo
235.25 222.853 li
@
235.25 222.853 mo
240.5 217.353 li
@
240.5 217.353 mo
240.917 217.02 li
@
240.917 217.02 mo
245.583 211.936 li
@
245.583 211.936 mo
246.75 210.603 li
@
246.75 210.603 mo
250.25 206.52 li
@
250.25 206.52 mo
252.5 203.603 li
@
252.5 203.603 mo
254.583 201.103 li
@
254.583 201.103 mo
258.333 195.77 li
@
258.333 195.77 mo
258.417 195.686 li
@
258.417 195.686 mo
261.917 190.27 li
@
261.917 190.27 mo
264.167 186.02 li
@
264.167 186.02 mo
264.833 184.853 li
@
264.833 184.853 mo
267.333 179.436 li
@
267.333 179.436 mo
269.25 174.02 li
@
269.25 174.02 mo
270 171.353 li
@
270 171.353 mo
270.75 168.603 li
@
270.75 168.603 mo
271.917 163.186 li
@
271.917 163.186 mo
272.583 157.77 li
@
272.583 157.77 mo
272.917 152.353 li
@
272.917 152.353 mo
272.917 146.936 li
@
272.917 146.936 mo
272.75 141.52 li
@
272.75 141.52 mo
272.25 136.103 li
@
272.25 136.103 mo
271.667 130.686 li
@
271.667 130.686 mo
270.833 125.27 li
@
270.833 125.27 mo
270 119.853 li
@
270 119.853 mo
270 119.603 li
@
270 119.603 mo
269.25 114.436 li
@
269.25 114.436 mo
268.5 108.936 li
@
268.5 108.936 mo
267.75 103.52 li
@
267.75 103.52 mo
267.083 98.103 li
@
267.083 98.103 mo
266.5 92.686 li
@
266.5 92.686 mo
266 87.27 li
@
266 87.27 mo
265.583 81.853 li
@
265.583 81.853 mo
264.917 76.436 li
@
264.917 76.436 mo
264.167 72.02 li
@
264.167 72.02 mo
264 71.02 li
@
264 71.02 mo
262.333 65.603 li
@
262.333 65.603 mo
259.5 60.186 li
@
259.5 60.186 mo
258.333 58.853 li
@
258.333 58.853 mo
254.667 54.77 li
@
254.667 54.77 mo
252.5 53.186 li
@
252.5 53.186 mo
246.75 49.77 li
@
246.75 49.77 mo
245.583 49.353 li
@
245.583 49.353 mo
240.917 48.103 li
@
240.917 48.103 mo
235.083 47.436 li
@
235.083 47.436 mo
229.25 47.77 li
@
229.25 47.77 mo
223.417 49.02 li
@
223.417 49.02 mo
222.5 49.353 li
@
222.5 49.353 mo
217.667 51.353 li
@
217.667 51.353 mo
211.833 54.353 li
@
211.833 54.353 mo
211.167 54.77 li
@
211.167 54.77 mo
206 58.186 li
@
206 58.186 mo
203.333 60.186 li
@
203.333 60.186 mo
200.25 62.52 li
@
200.25 62.52 mo
196.417 65.603 li
@
196.417 65.603 mo
194.417 67.186 li
@
194.417 67.186 mo
189.917 71.02 li
@
189.917 71.02 mo
188.583 72.103 li
@
188.583 72.103 mo
183.583 76.436 li
@
183.583 76.436 mo
182.75 77.103 li
@
182.75 77.103 mo
177.333 81.853 li
@
177.333 81.853 mo
177 82.186 li
@
177 82.186 mo
171.167 87.27 li
@
171.167 87.27 mo
171.167 87.27 li
@
171.167 87.27 mo
165.333 92.436 li
@
165.333 92.436 mo
165.083 92.686 li
@
165.083 92.686 mo
159.5 97.686 li
@
159.5 97.686 mo
159.083 98.103 li
@
159.083 98.103 mo
153.75 103.103 li
@
153.75 103.103 mo
153.167 103.52 li
@
153.167 103.52 mo
147.917 108.52 li
@
147.917 108.52 mo
147.417 108.936 li
@
147.417 108.936 mo
142.083 114.27 li
@
142.083 114.27 mo
141.917 114.436 li
@
141.917 114.436 mo
136.667 119.853 li
@
136.667 119.853 mo
136.25 120.186 li
@
136.25 120.186 mo
131.583 125.27 li
@
131.583 125.27 mo
130.5 126.603 li
@
130.5 126.603 mo
126.917 130.686 li
@
126.917 130.686 mo
124.667 133.603 li
@
124.667 133.603 mo
122.583 136.103 li
@
122.583 136.103 mo
118.833 141.436 li
@
118.833 141.436 mo
118.75 141.52 li
@
118.75 141.52 mo
115.25 146.936 li
@
115.25 146.936 mo
113 151.186 li
@
113 151.186 mo
112.333 152.353 li
@
112.333 152.353 mo
109.833 157.77 li
@
109.833 157.77 mo
107.917 163.186 li
@
107.917 163.186 mo
107.25 165.853 li
@
89.75 162.936 mo
89.667 163.186 li
@
89.667 163.186 mo
88.417 168.603 li
@
88.417 168.603 mo
87.667 174.02 li
@
87.667 174.02 mo
87.25 179.436 li
@
87.25 179.436 mo
87.083 184.853 li
@
87.083 184.853 mo
87.25 190.27 li
@
87.25 190.27 mo
87.583 195.686 li
@
87.583 195.686 mo
88.167 201.103 li
@
88.167 201.103 mo
89 206.52 li
@
89 206.52 mo
89.75 210.103 li
@
89.75 210.103 mo
90.083 211.936 li
@
90.083 211.936 mo
91.083 217.353 li
@
91.083 217.353 mo
92.333 222.853 li
@
92.333 222.853 mo
93.833 228.27 li
@
93.833 228.27 mo
95.583 233.186 li
@
95.583 233.186 mo
95.75 233.686 li
@
95.75 233.686 mo
97.333 239.103 li
@
97.333 239.103 mo
99.333 244.52 li
@
99.333 244.52 mo
101.417 249.353 li
@
101.417 249.353 mo
101.583 249.936 li
@
101.583 249.936 mo
103.583 255.353 li
@
103.583 255.353 mo
105.833 260.77 li
@
105.833 260.77 mo
107.25 263.686 li
@
107.25 263.686 mo
108.25 266.186 li
@
108.25 266.186 mo
110.417 271.603 li
@
110.417 271.603 mo
113 277.02 li
@
113 277.02 mo
113 277.186 li
@
113 277.186 mo
115.167 282.436 li
@
115.167 282.436 mo
117.917 287.853 li
@
117.917 287.853 mo
118.833 289.353 li
@
118.833 289.353 mo
121.167 293.27 li
@
121.167 293.27 mo
124.667 297.103 li
@
124.667 297.103 mo
126.333 298.686 li
@
126.333 298.686 mo
130.5 301.27 li
@
130.5 301.27 mo
136.25 303.603 li
@
136.25 303.603 mo
139.25 304.103 li
@
139.25 304.103 mo
142.083 304.436 li
@
142.083 304.436 mo
147.917 304.186 li
@
147.917 304.186 mo
148.333 304.103 li
@
148.333 304.103 mo
153.75 302.936 li
@
153.75 302.936 mo
159.5 300.853 li
@
159.5 300.853 mo
164 298.686 li
@
164 298.686 mo
165.333 298.02 li
@
165.333 298.02 mo
171.167 294.436 li
@
171.167 294.436 mo
172.75 293.27 li
@
172.75 293.27 mo
177 290.27 li
@
177 290.27 mo
179.917 287.853 li
@
179.917 287.853 mo
182.75 285.603 li
@
182.75 285.603 mo
186.333 282.436 li
@
186.333 282.436 mo
188.583 280.52 li
@
188.583 280.52 mo
192.25 277.02 li
@
192.25 277.02 mo
194.417 275.02 li
@
194.417 275.02 mo
197.917 271.603 li
@
197.917 271.603 mo
200.25 269.436 li
@
200.25 269.436 mo
203.417 266.186 li
@
203.417 266.186 mo
206 263.603 li
@
206 263.603 mo
208.833 260.77 li
@
208.833 260.77 mo
211.833 257.77 li
@
211.833 257.77 mo
214.333 255.353 li
@
214.333 255.353 mo
217.667 252.02 li
@
217.667 252.02 mo
219.75 249.936 li
@
219.75 249.936 mo
223.417 246.27 li
@
223.417 246.27 mo
225.333 244.52 li
@
225.333 244.52 mo
229.25 240.686 li
@
229.25 240.686 mo
231.083 239.103 li
@
231.083 239.103 mo
235.083 235.27 li
@
235.083 235.27 mo
237 233.686 li
@
237 233.686 mo
240.917 230.02 li
@
240.917 230.02 mo
243.083 228.27 li
@
243.083 228.27 mo
246.75 224.936 li
@
246.75 224.936 mo
249.333 222.853 li
@
249.333 222.853 mo
252.5 219.936 li
@
252.5 219.936 mo
255.667 217.353 li
@
255.667 217.353 mo
258.333 214.936 li
@
258.333 214.936 mo
261.833 211.936 li
@
261.833 211.936 mo
264.167 209.77 li
@
264.167 209.77 mo
267.75 206.52 li
@
267.75 206.52 mo
270 204.186 li
@
270 204.186 mo
273.083 201.103 li
@
273.083 201.103 mo
275.75 197.686 li
@
275.75 197.686 mo
277.5 195.686 li
@
277.5 195.686 mo
281 190.27 li
@
281 190.27 mo
281.583 189.186 li
@
281.583 189.186 mo
284 184.853 li
@
284 184.853 mo
286.083 179.436 li
@
286.083 179.436 mo
287.417 174.27 li
@
287.417 174.27 mo
287.5 174.02 li
@
287.5 174.02 mo
288.75 168.603 li
@
288.75 168.603 mo
289.5 163.186 li
@
289.5 163.186 mo
289.917 157.77 li
@
289.917 157.77 mo
290.083 152.353 li
@
290.083 152.353 mo
289.917 146.936 li
@
289.917 146.936 mo
289.583 141.52 li
@
289.583 141.52 mo
289 136.103 li
@
289 136.103 mo
288.167 130.686 li
@
288.167 130.686 mo
287.417 127.103 li
@
287.417 127.103 mo
287.083 125.27 li
@
287.083 125.27 mo
286.083 119.853 li
@
286.083 119.853 mo
284.833 114.436 li
@
284.833 114.436 mo
283.333 108.936 li
@
283.333 108.936 mo
281.583 104.02 li
@
281.583 104.02 mo
281.417 103.52 li
@
281.417 103.52 mo
279.833 98.103 li
@
279.833 98.103 mo
277.833 92.686 li
@
277.833 92.686 mo
275.75 87.853 li
@
275.75 87.853 mo
275.583 87.27 li
@
275.583 87.27 mo
273.583 81.853 li
@
273.583 81.853 mo
271.333 76.436 li
@
271.333 76.436 mo
270 73.52 li
@
270 73.52 mo
268.917 71.02 li
@
268.917 71.02 mo
266.75 65.603 li
@
266.75 65.603 mo
264.167 60.186 li
@
264.167 60.186 mo
264.167 60.02 li
@
264.167 60.02 mo
262 54.77 li
@
262 54.77 mo
259.25 49.353 li
@
259.25 49.353 mo
258.333 47.853 li
@
258.333 47.853 mo
256 43.936 li
@
256 43.936 mo
252.5 40.103 li
@
252.5 40.103 mo
250.833 38.52 li
@
250.833 38.52 mo
246.75 35.936 li
@
246.75 35.936 mo
240.917 33.603 li
@
240.917 33.603 mo
237.917 33.103 li
@
237.917 33.103 mo
235.083 32.77 li
@
235.083 32.77 mo
229.25 33.02 li
@
229.25 33.02 mo
228.833 33.103 li
@
228.833 33.103 mo
223.417 34.27 li
@
223.417 34.27 mo
217.667 36.353 li
@
217.667 36.353 mo
213.167 38.52 li
@
213.167 38.52 mo
211.833 39.186 li
@
211.833 39.186 mo
206 42.77 li
@
206 42.77 mo
204.417 43.936 li
@
204.417 43.936 mo
200.25 46.936 li
@
200.25 46.936 mo
197.25 49.353 li
@
197.25 49.353 mo
194.417 51.603 li
@
194.417 51.603 mo
190.833 54.77 li
@
190.833 54.77 mo
188.583 56.686 li
@
188.583 56.686 mo
184.917 60.186 li
@
184.917 60.186 mo
182.75 62.186 li
@
182.75 62.186 mo
179.25 65.603 li
@
179.25 65.603 mo
177 67.77 li
@
177 67.77 mo
173.75 71.02 li
@
173.75 71.02 mo
171.167 73.603 li
@
171.167 73.603 mo
168.333 76.436 li
@
168.333 76.436 mo
165.333 79.436 li
@
165.333 79.436 mo
162.833 81.853 li
@
162.833 81.853 mo
159.5 85.186 li
@
159.5 85.186 mo
157.417 87.27 li
@
157.417 87.27 mo
153.75 90.936 li
@
153.75 90.936 mo
151.833 92.686 li
@
151.833 92.686 mo
147.917 96.52 li
@
147.917 96.52 mo
146.083 98.103 li
@
146.083 98.103 mo
142.083 101.936 li
@
142.083 101.936 mo
140.167 103.52 li
@
140.167 103.52 mo
136.25 107.186 li
@
136.25 107.186 mo
134.083 108.936 li
@
134.083 108.936 mo
130.5 112.27 li
@
130.5 112.27 mo
127.833 114.436 li
@
127.833 114.436 mo
124.667 117.27 li
@
124.667 117.27 mo
121.5 119.853 li
@
121.5 119.853 mo
118.833 122.27 li
@
118.833 122.27 mo
115.333 125.27 li
@
115.333 125.27 mo
113 127.436 li
@
113 127.436 mo
109.417 130.686 li
@
109.417 130.686 mo
107.25 133.02 li
@
107.25 133.02 mo
104.083 136.103 li
@
104.083 136.103 mo
101.417 139.52 li
@
101.417 139.52 mo
99.667 141.52 li
@
99.667 141.52 mo
96.167 146.936 li
@
96.167 146.936 mo
95.583 148.02 li
@
95.583 148.02 mo
93.167 152.353 li
@
93.167 152.353 mo
91.083 157.77 li
@
91.083 157.77 mo
89.75 162.936 li
@
84 147.02 mo
81.167 152.353 li
0 .5 .5 .5 cmyk
@
81.167 152.353 mo
79.667 157.77 li
@
79.667 157.77 mo
78.917 163.186 li
@
78.917 163.186 mo
78.5 168.603 li
@
78.5 168.603 mo
78.417 174.02 li
@
78.417 174.02 mo
78.583 179.436 li
@
78.583 179.436 mo
78.833 184.853 li
@
78.833 184.853 mo
79.333 190.27 li
@
79.333 190.27 mo
80 195.686 li
@
80 195.686 mo
80.75 201.103 li
@
80.75 201.103 mo
81.75 206.52 li
@
81.75 206.52 mo
83.083 211.936 li
@
83.083 211.936 mo
84 214.686 li
@
84 214.686 mo
84.417 217.353 li
@
84.417 217.353 mo
85.417 222.853 li
@
85.417 222.853 mo
86.583 228.27 li
@
86.583 228.27 mo
88 233.686 li
@
88 233.686 mo
89.75 238.603 li
@
89.75 238.603 mo
89.833 239.103 li
@
89.833 239.103 mo
91.083 244.52 li
@
91.083 244.52 mo
92.5 249.936 li
@
92.5 249.936 mo
94.583 255.353 li
@
94.583 255.353 mo
95.583 257.27 li
@
95.583 257.27 mo
96.667 260.77 li
@
96.667 260.77 mo
98.667 266.186 li
@
98.667 266.186 mo
101.417 270.936 li
@
101.417 270.936 mo
101.667 271.603 li
@
101.667 271.603 mo
104 277.02 li
@
104 277.02 mo
107.25 281.936 li
@
107.25 281.936 mo
107.5 282.436 li
@
107.5 282.436 mo
110.25 287.853 li
@
110.25 287.853 mo
113 291.853 li
@
113 291.853 mo
113.917 293.27 li
@
113.917 293.27 mo
117.333 298.686 li
@
117.333 298.686 mo
118.833 300.353 li
@
118.833 300.353 mo
122.083 304.103 li
@
122.083 304.103 mo
124.667 305.853 li
@
124.667 305.853 mo
130.5 309.02 li
@
130.5 309.02 mo
132 309.52 li
@
132 309.52 mo
136.25 310.52 li
@
136.25 310.52 mo
142.083 310.936 li
@
142.083 310.936 mo
147.917 310.436 li
@
147.917 310.436 mo
151.667 309.52 li
@
151.667 309.52 mo
153.75 309.02 li
@
153.75 309.02 mo
159.5 306.603 li
@
159.5 306.603 mo
164.167 304.103 li
@
164.167 304.103 mo
165.333 303.436 li
@
165.333 303.436 mo
171.167 299.52 li
@
171.167 299.52 mo
172.25 298.686 li
@
172.25 298.686 mo
177 295.103 li
@
177 295.103 mo
179.083 293.27 li
@
179.083 293.27 mo
182.75 290.186 li
@
182.75 290.186 mo
185.333 287.853 li
@
185.333 287.853 mo
188.583 284.936 li
@
188.583 284.936 mo
191.167 282.436 li
@
191.167 282.436 mo
194.417 279.436 li
@
194.417 279.436 mo
196.833 277.02 li
@
196.833 277.02 mo
200.25 273.77 li
@
200.25 273.77 mo
202.417 271.603 li
@
202.417 271.603 mo
206 267.936 li
@
206 267.936 mo
207.833 266.186 li
@
207.833 266.186 mo
211.833 262.186 li
@
211.833 262.186 mo
213.25 260.77 li
@
213.25 260.77 mo
217.667 256.353 li
@
217.667 256.353 mo
218.75 255.353 li
@
218.75 255.353 mo
223.417 250.686 li
@
223.417 250.686 mo
224.333 249.936 li
@
224.333 249.936 mo
229.25 245.186 li
@
229.25 245.186 mo
230.083 244.52 li
@
230.083 244.52 mo
235.083 239.853 li
@
235.083 239.853 mo
236 239.103 li
@
236 239.103 mo
240.917 234.77 li
@
240.917 234.77 mo
242.25 233.686 li
@
242.25 233.686 mo
246.75 229.853 li
@
246.75 229.853 mo
248.833 228.27 li
@
248.833 228.27 mo
252.5 225.186 li
@
252.5 225.186 mo
255.75 222.853 li
@
255.75 222.853 mo
258.333 220.77 li
@
258.333 220.77 mo
263 217.353 li
@
263 217.353 mo
264.167 216.436 li
@
264.167 216.436 mo
270 212.27 li
@
270 212.27 mo
270.5 211.936 li
@
270.5 211.936 mo
275.75 208.103 li
@
275.75 208.103 mo
278.083 206.52 li
@
278.083 206.52 mo
281.583 203.603 li
@
281.583 203.603 mo
284.75 201.103 li
@
284.75 201.103 mo
287.417 198.186 li
@
287.417 198.186 mo
289.833 195.686 li
@
289.833 195.686 mo
293.167 190.27 li
@
293.167 190.27 mo
293.25 190.186 li
@
293.25 190.186 mo
296 184.853 li
@
296 184.853 mo
297.5 179.436 li
@
297.5 179.436 mo
298.25 174.02 li
@
298.25 174.02 mo
298.667 168.603 li
@
298.667 168.603 mo
298.75 163.186 li
@
298.75 163.186 mo
298.583 157.77 li
@
298.583 157.77 mo
298.333 152.353 li
@
298.333 152.353 mo
297.833 146.936 li
@
297.833 146.936 mo
297.167 141.52 li
@
297.167 141.52 mo
296.417 136.103 li
@
296.417 136.103 mo
295.417 130.686 li
@
295.417 130.686 mo
294.083 125.27 li
@
294.083 125.27 mo
293.25 122.52 li
@
293.25 122.52 mo
292.75 119.853 li
@
292.75 119.853 mo
291.75 114.436 li
@
291.75 114.436 mo
290.583 108.936 li
@
290.583 108.936 mo
289.167 103.52 li
@
289.167 103.52 mo
287.417 98.603 li
@
287.417 98.603 mo
287.333 98.103 li
@
287.333 98.103 mo
286.083 92.686 li
@
286.083 92.686 mo
284.667 87.27 li
@
284.667 87.27 mo
282.583 81.853 li
@
282.583 81.853 mo
281.583 79.936 li
@
281.583 79.936 mo
280.5 76.436 li
@
280.5 76.436 mo
278.5 71.02 li
@
278.5 71.02 mo
275.75 66.27 li
@
275.75 66.27 mo
275.5 65.603 li
@
275.5 65.603 mo
273.167 60.186 li
@
273.167 60.186 mo
270 55.27 li
@
270 55.27 mo
269.667 54.77 li
@
269.667 54.77 mo
266.917 49.353 li
@
266.917 49.353 mo
264.167 45.353 li
@
264.167 45.353 mo
263.25 43.936 li
@
263.25 43.936 mo
259.833 38.52 li
@
259.833 38.52 mo
258.333 36.853 li
@
258.333 36.853 mo
255.083 33.103 li
@
255.083 33.103 mo
252.5 31.353 li
@
252.5 31.353 mo
246.75 28.186 li
@
246.75 28.186 mo
245.167 27.686 li
@
245.167 27.686 mo
240.917 26.686 li
@
240.917 26.686 mo
235.083 26.27 li
@
235.083 26.27 mo
229.25 26.77 li
@
229.25 26.77 mo
225.5 27.686 li
@
225.5 27.686 mo
223.417 28.186 li
@
223.417 28.186 mo
217.667 30.603 li
@
217.667 30.603 mo
213 33.103 li
@
213 33.103 mo
211.833 33.77 li
@
211.833 33.77 mo
206 37.686 li
@
206 37.686 mo
204.917 38.52 li
@
204.917 38.52 mo
200.25 42.103 li
@
200.25 42.103 mo
198.083 43.936 li
@
198.083 43.936 mo
194.417 47.02 li
@
194.417 47.02 mo
191.833 49.353 li
@
191.833 49.353 mo
188.583 52.27 li
@
188.583 52.27 mo
186 54.77 li
@
186 54.77 mo
182.75 57.77 li
@
182.75 57.77 mo
180.333 60.186 li
@
180.333 60.186 mo
177 63.436 li
@
177 63.436 mo
174.75 65.603 li
@
174.75 65.603 mo
171.167 69.27 li
@
171.167 69.27 mo
169.333 71.02 li
@
169.333 71.02 mo
165.333 75.02 li
@
165.333 75.02 mo
163.917 76.436 li
@
163.917 76.436 mo
159.5 80.853 li
@
159.5 80.853 mo
158.417 81.853 li
@
158.417 81.853 mo
153.75 86.52 li
@
153.75 86.52 mo
152.833 87.27 li
@
152.833 87.27 mo
147.917 92.02 li
@
147.917 92.02 mo
147.083 92.686 li
@
147.083 92.686 mo
142.083 97.353 li
@
142.083 97.353 mo
141.167 98.103 li
@
141.167 98.103 mo
136.25 102.436 li
@
136.25 102.436 mo
134.917 103.52 li
@
134.917 103.52 mo
130.5 107.353 li
@
130.5 107.353 mo
128.333 108.936 li
@
128.333 108.936 mo
124.667 112.02 li
@
124.667 112.02 mo
121.417 114.436 li
@
121.417 114.436 mo
118.833 116.436 li
@
118.833 116.436 mo
114.167 119.853 li
@
114.167 119.853 mo
113 120.77 li
@
113 120.77 mo
107.25 124.936 li
@
107.25 124.936 mo
106.667 125.27 li
@
106.667 125.27 mo
101.417 129.103 li
@
101.417 129.103 mo
99.083 130.686 li
@
99.083 130.686 mo
95.583 133.603 li
@
95.583 133.603 mo
92.417 136.103 li
@
92.417 136.103 mo
89.75 139.02 li
@
89.75 139.02 mo
87.333 141.52 li
@
87.333 141.52 mo
84 146.936 li
@
84 146.936 mo
84 147.02 li
@
188.583 277.02 mo
188.667 276.936 li
188.75 276.853 li
188.833 276.77 li
188.917 276.686 li
189.333 276.353 li
189.667 276.02 li
190 275.686 li
190.417 275.353 li
192.167 273.603 li
193.917 271.936 li
195.667 270.27 li
197.333 268.603 li
205.417 260.52 li
212.833 252.936 li
219.667 246.02 li
225.917 239.686 li
236 229.603 li
244.75 221.02 li
252.25 213.436 li
258.583 206.353 li
265 197.686 li
269.667 188.186 li
272.417 176.936 li
272.75 163.186 li
270.75 149.436 li
266.417 134.436 li
259.583 119.77 li
250.583 107.603 li
239.917 100.103 li
228.417 97.686 li
216.917 99.603 li
206.083 104.853 li
197.833 110.52 li
190.333 116.77 li
183.75 123.103 li
178 129.27 li
173 135.353 li
168.75 141.02 li
165.333 146.436 li
162.583 151.52 li
159.833 158.52 li
158.417 164.853 li
158.167 170.436 li
159.083 175.27 li
161.167 179.603 li
164.167 182.686 li
167.75 184.52 li
171.583 185.186 li
174.917 185.02 li
178.167 184.186 li
181.167 183.02 li
183.917 181.52 li
186.5 179.77 li
188.667 177.936 li
190.5 176.02 li
191.833 174.27 li
192.833 172.686 li
193.5 171.27 li
193.917 170.02 li
194.083 168.936 li
194.083 168.02 li
193.833 167.27 li
193.5 166.686 li
193.083 166.27 li
192.583 165.936 li
192.083 165.853 li
191.5 165.77 li
191 165.853 li
190.417 165.936 li
189.917 166.186 li
189.5 166.436 li
189.083 166.686 li
188.667 167.02 li
188.333 167.27 li
188.083 167.603 li
187.917 167.853 li
187.833 168.103 li
187.75 168.353 li
187.667 168.52 li
187.667 168.686 li
187.75 168.77 li
187.75 168.936 li
187.833 168.936 li
187.917 169.02 li
188 169.02 li
188.083 169.103 li
188.167 169.02 li
188.25 169.02 li
188.333 169.02 li
188.417 168.936 li
188.5 168.936 li
188.583 168.853 li
188.667 168.77 li
188.75 168.686 li
188.75 168.52 li
188.667 168.52 li
188.583 168.603 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/space <1C60D8A8C9B896187A> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DKKUFS+Helvetica /Helvetica findfont ct_VMDictPut
/DKKUFS+Helvetica*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
DKKUFS+Helvetica nf
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
12.833 334.853 mo
( )sh
361.667 9.52002 mo
( )sh
.5 lw
14.25 6.02002 mo
363 6.02002 li
@
14.25 331.27 mo
363 331.27 li
@
363 331.27 mo
363 6.02002 li
@
14.25 331.27 mo
14.25 6.02002 li
@
14.25 331.27 mo
363 331.27 li
@
14.25 331.27 mo
14.25 6.02002 li
@
14.25 331.27 mo
14.25 327.77 li
@
14.25 6.02002 mo
14.25 9.43604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DKKUFS+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642E6C0751425F2912B774695F4573A7ED10CC8657328CADE6CD5BA
97A6C5BF6C1485B23CC65AC596605B697818C329637772F63BFEC9BF78A14135
7498BBAC8062C44F8B28D5A5EFBE38074FF4A38C9291B6291D33E32B99042454
59FFD3AE6CFBA6472FEF21B7BFBB29FDDBA248755ED07D6E4AD20219> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DKKUFS+Helvetica /Encoding get
dup 45 /hyphen put
dup 51 /three put
pop
%ADOEndSubsetFont
/DKKUFS+Helvetica*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 5{/.notdef}rp /three 204{/.notdef}rp]
DKKUFS+Helvetica nf
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
5.66699 343.353 mo
(-3)
[3.06992 0 ]xsh
72.333 331.27 mo
72.333 327.77 li
@
72.333 6.02002 mo
72.333 9.43604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DKKUFS+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887
D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DKKUFS+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/DKKUFS+Helvetica*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 4{/.notdef}rp /two /three 204{/.notdef}rp]
DKKUFS+Helvetica nf
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
63.75 343.353 mo
(-2)
[3.06992 0 ]xsh
130.5 331.27 mo
130.5 327.77 li
@
130.5 6.02002 mo
130.5 9.43604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DKKUFS+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DKKUFS+Helvetica /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/DKKUFS+Helvetica*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
204{/.notdef}rp]
DKKUFS+Helvetica nf
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
121.917 343.353 mo
(-1)
[3.06992 0 ]xsh
188.583 331.27 mo
188.583 327.77 li
@
188.583 6.02002 mo
188.583 9.43604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DKKUFS+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F3
5FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90
C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DKKUFS+Helvetica /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/DKKUFS+Helvetica*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three 204{/.notdef}rp]
DKKUFS+Helvetica nf
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
185.833 343.353 mo
(0)sh
246.75 331.27 mo
246.75 327.77 li
@
246.75 6.02002 mo
246.75 9.43604 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
244 343.353 mo
(1)sh
304.833 331.27 mo
304.833 327.77 li
@
304.833 6.02002 mo
304.833 9.43604 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
302.083 343.353 mo
(2)sh
363 331.27 mo
363 327.77 li
@
363 6.02002 mo
363 9.43604 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
360.25 343.353 mo
(3)sh
14.25 331.27 mo
17.667 331.27 li
@
363 331.27 mo
359.5 331.27 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
0 334.936 mo
(-3)
[3.06992 0 ]xsh
14.25 277.02 mo
17.667 277.02 li
@
363 277.02 mo
359.5 277.02 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
0 280.686 mo
(-2)
[3.06992 0 ]xsh
14.25 222.853 mo
17.667 222.853 li
@
363 222.853 mo
359.5 222.853 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
0 226.52 mo
(-1)
[3.06992 0 ]xsh
14.25 168.603 mo
17.667 168.603 li
@
363 168.603 mo
359.5 168.603 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
5.83301 172.27 mo
(0)sh
14.25 114.436 mo
17.667 114.436 li
@
363 114.436 mo
359.5 114.436 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
5.83301 118.103 mo
(1)sh
14.25 60.186 mo
17.667 60.186 li
@
363 60.186 mo
359.5 60.186 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
5.83301 63.853 mo
(2)sh
14.25 6.02002 mo
17.667 6.02002 li
@
363 6.02002 mo
359.5 6.02002 li
@
DKKUFS+Helvetica*1 [10 0 0 -10 0 0 ]msf
5.83301 9.68604 mo
(3)sh
14.25 6.02002 mo
363 6.02002 li
@
14.25 331.27 mo
363 331.27 li
@
363 331.27 mo
363 6.02002 li
@
14.25 331.27 mo
14.25 6.02002 li
@
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 61 /equal put
dup 100 /d put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F3
5FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90
C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887
D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-
/eight <1C60D8A8C9B7BA8F623D810BCFAA50091BF89AB5BE3357ACF7A8EC11
C35A526108259CA49EFD17EA8971235551BABBA49C018C3375128659D5D7051D
45E4C4ECFE02CC0D35373F3D4B2DC792F4C41BCD9DEAF2AC24EA7A456EB3C155
13EE5D201ACCA4975153635E279761AFF1AF1596B3D3861988A67B17B4B84234
7EAF131C1ABA71797B1264826F04BDED0719803E211C51F417CEBD773552253C
6786889CD2B3EB81707FCE2453D0BD7C65B6D6DB5614A7F2FDB700BE408D6F36
A3C20DDE8F30CA7C808E9263350AB2907E45DC2CA6BBA6B44E98822CA142BAF4
C98107A946AA8711E8E6F4BC5EB9C6DC60704FA7E3779BF270D263AF4819BBE7
93351D4C> |-
/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5F
ADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-
/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE1010
56958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C847
6BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D92067
68FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE
752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E604
3872EFC1C407DD53136E> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DKKUFT+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut
/DKKUFT+MyriadPro-Regular*1 
[48{/.notdef}rp /zero /one /two 5{/.notdef}rp /eight 4{/.notdef}rp /equal 
38{/.notdef}rp /d 155{/.notdef}rp]
DKKUFT+MyriadPro-Regular nf
DKKUFT+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
284.083 42.77 mo
(d=10)sh
307.417 63.8945 mo
(d=8)sh
148.333 211.27 mo
(d=2)sh
288.75 46.936 mo
273.167 60.186 li
.75 1 0 0 cmyk
f
2 lw
0 lj
288.75 46.936 mo
273.167 60.186 li
.5625 .5625 0 .4375 cmyk
@
312.75 67.77 mo
278.083 90.936 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DKKUFT+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7BA8F425ECEAC1D5FB15843FC3AEF325D7DA4AC5B49218
1366F1B4D605798E0A37299E20A2C781E96943F501C8D283CF9274FA8718C41B
B1F2F8D3022028ECD22D73F736D12B17047DF40EDD60B6519E74C55A33C> |-
/six <1C60D8A8C9B7BA8F6239473257A8A6F62043E414325CA26487C2B24B19
1B168E0DA687FF84130E464A581CEABD7A1831A83A01C968043ECE2E73D7C0CF
5C7A53E3098E1CA41D075CF1B0FAA4D3D63203DF5A7A1EBF70F4DE9A7FD3C13C
DDAF688040D9BEE80C42C7397D37BC0163DE0936D86331F997A056B7561C404E
F4CCB6BEFB2D969A52553626DC842C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DKKUFT+MyriadPro-Regular /Encoding get
dup 52 /four put
dup 54 /six put
pop
%ADOEndSubsetFont
/DKKUFT+MyriadPro-Regular*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 4{/.notdef}rp /equal 38{/.notdef}rp /d 155{/.notdef}rp]
DKKUFT+MyriadPro-Regular nf
DKKUFT+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
218.083 85.186 mo
(d=4)sh
319.75 95.3945 mo
(d=6)sh
324.75 99.6865 mo
270.833 125.27 li
.5625 .5625 0 .4375 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/DKKUFS+Helvetica*1 uf
/DKKUFS+Helvetica uf
/Helvetica uf
/DKKUFT+MyriadPro-Regular*1 uf
/DKKUFT+MyriadPro-Regular uf
/MyriadPro-Regular uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Peet) ()
%%Title: (VDP_levelsets.eps)
%%CreationDate: 5/6/2011 3:55 PM
%%Canvassize: 8640
%AI9_DataStream
%Gb!R&B7'3\dP,u2YNt145XIdBRgu-9!XTD\$#,'%8uT"'m<q2@hVWc]gi9*jpT3uQOrLVf,E51A1aCi3j>Qo.GeTd32ZJc+8Uo+R
%pP6u/(h!nCr2.5HDCY6*MNKjgJi98Br$N>@H,KV`%(%Cq,S>Rq'K2`bMH]J;oO^KG9Ra>'cqN5bs"dcH*sP[5A74h&bN7kNk1ju2
%>);&bD:Ueq[R)SGVKVRY!'YIl+9'XY_&0uZ4AjT+E^5OiC%&Ocjd[5.Il1F>oh4m&<SGg#_9P^e?3:'tqYRi%HoZZ2YD*`32[@23
%oR!6l`mA9^kJ9.9BD2)bHF2IgW?rGd26O*tEs=dao[0!`[G(_nJR4JC2u/589hZ8j1](PV46YLjg!PH.I'`foE+nL\Fu>p/!.]iX
%rsP$d3>*Ri`uSp&>n2#lR[4!d1'_83mU*+'(abh4')jNeAh"FMYn)PFUAg`_s,!57Gs'MM[8^W"PbiTkq>YtRPJJA-i4nWRVu;dQ
%]B_JQ\f^kd_ll:@`mg1K%=ooZ#ET8qqCa;qAQs6\oT\&1:>7>oO8s9APfEhPUH\H?d4>kQP/`ekG;ddGb9UK40H'A7_dP6:1DpON
%JJ']PR>`=H!RU'r^sAc&\\B\?#R`uYE53@+BnEm2d.?LL*ToI$l'LZ1=I@Hkh]0Ubcp56@dJm_3s4RC'dI28.RMu67Zi#FUM'0GA
%D2>U0*p5I43$FB?DK:7Pepq%lRjn56pk#(<&GrToYBSH&JXGnM^Y)HmJ@ME!Z*8.=&,rF+EMC2,T&,jV!$Q)3*&*Uq![_Zr`kROh
%pc#E*k?DO.d/1h8l'.pqJ&$-_BMJYIR4P?;qR.*ORr.lC?p44k7g"(Dp.`B76*Q^*AER_B!Mb<%D"n*_LHYg'c?;<Be<Ki^*t@u&
%f:@t+NsEnQ8$1-&40TtZ+'9Il$8)M_N0,:&05i8rGdCV+eMRSZ&G,S7F,C/HB$<GN$Po\/$jV3U4\\l@d3%j(ll4BB"goC<Tg4@-
%5-DS;[+YFe@FF0B[@4;^C[cYgmfW1eU1Lmlm!Q-(gDREmd:hKj(WX8??j+(Fa9j99[pAD>nE->4mJaG#p4-iJ%IMopBStfa%7^48
%j]h*Q[g%6D\+'aJ5Cs(bb'^`&@a);a$ZCP*XTm!_^I15B7cD8BrI>+@^lPh<Ee8;85;Hh+k4`F!56+M_N%liObq,`1Q61Mj%`"D_
%qXSG=Hq!\=YD?Kh:l;"!Mu7p%go?6/<(1Z(I%0,5k'KK%!LO(?Tn-QaLgFcQ4uN-0<r:ur^0Ua.24,]NM(U`[/q1>]HF_56e\_nZ
%ZOIARK`]\O%9SV[%5?cB2kGTam/][>i.2:J3<k^d`0#\hY>Z9!-+jXO;>bc^ghMjRbsa&CHlEES@uV(<E:XOjViBno%GQPcD`n&H
%%Y):4f]-'-(t2g>T0<5"+8gA=M"-8tg%8@DLdbb9^>E@L5)>[M!@+j!!XY=THF/8"5Aoo\g/Y4ehgNB15+r,q\XbYmJct-N#KPVn
%pJg>%Q9#*;JK@n@m%>R.^\SGt`0rrjA(gBa.-_]<73?WP$(,+Uf(J&=4cB$'b<:)PVDnBhFZnEFrj&<._;G;T!Eb??%lN'$b]`[b
%iDY(fhbi7HI-],["V_29RIO5F3r03_S\T`7]O.<Y^r-fbi*VE.^T$=,.g!rp!nN/&AO(0n!!c!>)A!QFi*k7#5j^B5J62kpiAX,3
%#J1kX$\8XmGc:D<$mP\u#fu_3eSqjb1FjN>p_Wq9_;53d\o+Th2sEI]1NtaH,nHD\^ciAZ:[dd7ru*/1@jM99iP-1RIK7S++S)tI
%q+(h+_K-c\b.ED<BS<=eKMhT%7s=[I^B4uloOPZWK3+-_&h(4lD5".GDU/MkpbQ_h'"&G3L7m<991Ft4=(\&p:(0@>DTM7l'"V/Y
%g3W@_2>UpF6`R7IJ-`m0_2:"[_;k5/GXW>HS1ln[+"[""n0?%iVUn'%gHG?("+L-.3G<jq^OHmYYmEO>_C]-8!$[_AGG`.!4s3_]
%#C.EJ_=%J6U3mmF#_>).,]p,29ZK]sNZj8\.Z<Me:\a&P(u<R&JB43IN'PK:KmdIhE95qkEs,jU,OZ.Y">f9B!1I:>RlR/Q4Jq.N
%]ag,qW-gR$guLjM,748ZWr`Rls5AD3^uW81@:21AH.@Vb%`TXf54/Zs"Rt`)"N`Qps0+`#51C[*a/nk,c><OL$90#8aob[)4Wa_M
%%VS<jC7M-b_>dLh(W%A22jsd%(:[mk/&0b="f1-"_`tat:`,nHp=hIRs*I!eG@78TGL/15[f(QWh"-Na"%K-G)D"gq*SVN&qXsm_
%U]PS!1.%i!B!e5NL<.:jFoNrr31QbJ,\^eNJ7mTcmLbGu^d,l`0?Fpk'8=p_MD8#Q#K%j!BOr$Kl2T'I!=FP.T%Rs]s.EKh=,c]0
%d22i;paBS*UH&2oA^NInJAr8PTjSlZkLBMNlNVIphq"G">t^TRr9)t@hZ"&.KNZSjs*M\/+;jZ=6NOO^M&Ip&7QmMSB\q+KF%uZL
%!^%#(Gls129Qu$eR?)PJ6fVZ\r[W`DmKi+fmZ4&mrV;cgMV[[N)q9@s8YLXWTZk.*Atq5TiFW=RWB)oiiGDCY_`N81?XlkS6.t,]
%kn/W4)?(W\"jh>jMLMY*h-^XBXUB4tG'7N$a)&9(&C62:URqf-5KoY=daTBIQIarX!k6jn8/u%b]`e1mfu&;s`;#C%P5FH.mg6+L
%%W]8AYsLS.JB4CMn;8.=(YNP;^KbefTkB6p_"%_+Ke_NIRB=KQgVK2Mc-1RC?_V5'CslaU!PKFi#5$P1K&JYk5r]Dbn;TD4q8)pr
%!<Wur\DFn`:uhA#AJUF^?jsBRSrWlR\K5Ca,\cDY==EXRbU,2tc8B<nTlt%1ZQ'I/![6)8RS!*IQuJ32pm*16T($.P!Sg`Mr(W/o
%i18h73EV?@6P=sAEBIW8X>conB"p,tnYVOOgGp,>?q5dN:ah4:FXKRrdN8,[JRW6R-e+@Us.BZ0;2TcJj:D*^lD+$ABg-(%gN6%d
%r*"]O/#'1'p:DmnRSIMn,3V+7Y\(<GSF8/.k@;:tr64JM75RNGo-s+9DI\5;Uh"3O+45R:jpq(AS[g_Omfp]*Ek_Dq>MDd*=<FWB
%qn\LP2`Frijps:a+NtF>3uF%?r37.o$[Kd[m:I_a2d"?cr>";44l4Jt*+@Nm^i4!R:h?]im!cG&VsckebIE&F&S(Dk7;lV-R8MmT
%nJd#I;,YIF:eq>kBK=t%l$siKJ'BZuA[=9%S_:iL)8VX@oGh`30f;uS\_6_efcBgWRq&'u.enHN6SBQ/>cfdG-Z=_&1fu@@[*:m(
%^a``39_AB@MtqN%"OFrYh*%2.Zc#[Z+LJsKEm'%ZV>X6Wb$X7:&bl3`?T`9Xk^G=@H[KErjhhCA&,rFIE$>aVQ(]SE8nYgLfZlTd
%,?EJOo::om&?-&P))/^hM@d*@C7L&AR:gg98]$Z'6(HlAGS0bCZ"h?O<.dShj5snkB(H!&0YIK[FLg&R*t`3>2VXZfP/qEt\IOr7
%h!]ubO]X]\/<tbtLB]%7)`QDlfp8^40u\)nj!;P0%F@d0?Mp7C!UGRBV1nNuXV],2NE$6fCpp*u?42M9CGFZfAK&\I(KmY.(r4j:
%]T`;?A8KYgk(E>qf0ROl%5l&nD[kY]>'X0L%u7^]D0sM\e.?R;&?KC5LV<Z7BRVqbJ,?W8"lO4]c"+QL*IhX25^#tFhCt:4O_[5f
%Jt>=,+Vbat(ms.-42rD*SDj^U%Sbo/ljKQ01@ik:%-b6+)t2C%C`GR/5N*>"5hO%%DRnTOhDn7]pVQ9"K2$P/DWQP*-*,gc(<+H@
%;4Y_Zi>:/FYjD]Srm,13@Ao`7]:$=&UAc-2b^?uC.%%Z)RWcc`qjK399/0(T2B4Egq//(:P")Z-DFD[eT2P:.Op2]I)Q;F31cVnS
%$_-^uGmMS@Zl7D'mtQR+I%]'ncuK15ltf&hO3EWL2a`m]"Id2T6H#O`bJDak1YV>:NW*dmX+_AbrkM_o\>IUlGYs;Ef#UKlnojVq
%^^Hk:i'CSOd\6LPa'hu[%unjpYg2mpdA#\?]sc"[)@gFMMo_hCTH#fn.nhKR%($d\LOmHSl!^6q7"0ehgS5)m=jIPa(.g[f`o<R/
%BJ/P[Oqs,hFO*e!?d6Ej>&/JjhKd/b/Nqdg2.aQ=BR?C%BNXMlbp&)_#ZU$+X[-0rfqr<Wcj-i`)2:aXVhW,.[+_``PPV'n%C(8Z
%B0f)m!N@n_f[=62Fb\:/NpIYMCl_VH1rZH@EjM64ZkhbS51?p\?mF6%i)ic\Q&A(),c99hZK#L$2A_HMA+T2N\NnL@L0`@EIfP#K
%JlPb6;L,1;cmbqV3$]ngKq_PdSR<HG)sTqURB*K4kc"U-"<)8`M,ZC(?o)CO=Ah7<h1f*Z%_(.E7t7m*(,[#4),8h:7_AIoLhs*V
%&-h8ml8:o69NN1\]ZaC@2jSC1fhlS(m"bMk!m5P#8c;@8[FQ)q$o$mTC5^+i2'%Kr#ZRWP0FubrNKth(aofB8.],*8ag8f#(>ie^
%Y:UMr,1.-&ZH%LRPQo.(iLhaR;B-6/LqG-k&.#[USO6Q*2pmL_9&gZ/:tR[H0Th/J"E_BrRN#J0I2K;(1W,QKF&@X-4(#*Z6NmgS
%'(e#JDVVt<&hci2h;Hh3+1Q04EZ)I$R`21?bC.Ll[bLBEJX<Wr]9Qk#3hGT%;\-]d]`)>daO'f]Uf?tN6uU.Sn<tJe_G=V*-ENWI
%0<[0qE,V-Q;tKkdR`o'n6?B9sGI_Fa<R2qB<'*<?VFC`mf/>e-<?Lr8_FUAB'9BekGD2[8>k$"ucE9'J-<k?UB!,,.H=&-)XY75W
%V<nGZ.85QpTcu=/,W:KA\)'?TS\4]"*NQ\Ur%jO=PWgmC`k-7+gc,+n]f_kd1l,J7ms\bRR!cV9Em)\t2*T.,G55;%NKd9#qmJ1&
%lbAiUg@g+!JPJ#sYNaXCI(K8.<6&!3c4g/]B%rpC2=AEK@(Z_X@R#%fW&P-lm.jegJ!\75"E%MU8,'JCPIG[-H"ueA4l9VmmREtf
%!e-TMMNdlFUF$<)+@=DVhspNorA_:!8_ZA7lXQQh[r6cT!$%E=q\cJ/&)TO"B!U`bD<4ARh"`.pO5rD9nM-4mQ6'$tf-3u\+@h-4
%jr$uJ@\Y,#!Fd%@kC!FdalGh;mVu19AYclRA*DH]1AP\EqPED9Kj_WCU&#hE:.=`C03@.Yr#YSCY<NWSeG9@X.2@#4_eFB,^P#g,
%8?,X,i<Xd4#(7QE$1d]aU#6k8DG(bs)\(2JiI`cd"Z6<oLuD>kLq^AsV$-ZEnPZIIp3ClP)aj5kr)LPKYCnEk._>S4oJFYkH:]IO
%`]oMkBK#Z-"*ff1LdM8JjmMpsHjX.%mE$a.M@-*86C(lMO2tV"Quk%[(B,1_4,"bX@H+?d('ar22&@<W>I!>8CH("hkF.)rHiBN1
%rJ\XWk$5.Bl!o=ZKu\,N53[C="^eTq;W6f8T:c.:I<Un*c*W_-3(ZBQe9<2/1u8KDU[?r=/_d3cCScVm>f5(MBT8>YA:`RfgN'-_
%#JYLSWGls@\a/UbZCUmKrbug3ief/#9u\]#iBXfe$>SX1)+*k1Ho(GF-di0moT9G&5"L&K8d3!T::Da_M1*M/91iIZjDpH8fdApm
%p4uI_1h'A=f?;kH4c/q\iS*.:QgBp)2bPDWDgmK7.tN$kV+>k2'Ve:ogT;\b$U65#Y.D(fn1.TG]aYT4mG\s<C'LcBeL_Wn[3Io,
%'q*/!W;Dg=]_Ppqo?aQiT-_:Vb!hA<(fQlhfRg-b!Ldif@I+'4-5A&llFhmLIo0-A]5fP[!K3l>-iE)a_]epDRO(IFGulJKhYaNU
%q&:)a#X\^S)GNiC67A!)HQ(4$p3=^%ZQ!=)pqF5_gs9lNat;5kRqua2C'?;+/fqg:kh\Gu9=LM6HhM//Z[p^lDf]>gIE%.>7q#l-
%KL()H1Fs/sc`\'YU&th3cVC-tR3l:7]`0SmK<pn\pL_?7gYHJ63q(8UcdJ"BdS8'r&<5%EF&+'%$i>*R8sDoZ8CYC;3<s$!!8Sh3
%h'=`1([]?%(I@Z6SjJ1?mik]W6)o@[+StK:X"k>2^IQnL*4]FjBA;><H1kr'qjg;Xnm9](q\dJ-qJD7?g\8&AI4$F*7?+!7"2Com
%oI,0HVbFa"ID&%[O^CU&[D=_?^O+9<2>aBZretndN>uU$Vu'dU#!T_t^i+japc!5^6Z54HihchOc'j'LkMH+;T,b*_IYiKD_ghbr
%B\O/5Q[T".IL<RkgN^o9iB%<LM#ebVX+D=GW;HK3pPX$Bm1/OtllCZZ3e>Z9OWomk>E2r-s2IAmj$IG;lZ+KFSX*cf-WoX6G^)(6
%C!l8@]1)k/lDDCipT0aN#f$<g_\"ZO&eP/.oZd*N62AY1`._m#Z_]e!a%hA*-3Q/S9:;OkkUP?d4iNOU64r!JpkkIDYn'6NfEnt5
%(mu-r#5j;[aZbu;KtN!!7YNu^GiR%H(QV5IQU?(m#7-;%^$otQ0fY&H7L^:edM4KmB[eRB"es*D%UNTVnh?lq&Zo(ri:iH=.ti\_
%^8CD2&Z/5_[?u=Q,]4-KTsS@_PmLfMlTi[o#hKSK2mC-'jORl\7.jVD3"`(YZS/tEfAe];&i67r@0_aJL=S3"mKbb]:M<:<+F'ur
%&#i:eb]]RnlVb_lFatPfnVd'1/@u,?F':5F5P3q]Mpi'a)F4hm;9f74=FiV6=Cba@]@6]UX.Li$(;I=\[u"p[d&sA9mYG]lf*cVC
%TXQ9@GYhHL;i`/_D8Ko8nKB;DM*FI7B:`u6=FR].H7RK[^H(hGEd]G7Zn=0jm4WbkNSA#V77tt;OD>GX,aSC^kI\*`5P8;BhLVHu
%]If0!*FCGcp3T31-(,]I$^@u"&POff5i(m=!c;'*lm(3qH$<`@!r/tG!KJa)RgD"-%KO-G_/#X%n)<LU$TeP%-t(5RhTg+I%!XDG
%J3)/)1#TT]jri!K*]Q.G=A(d;YD(oN7$h5k_TkOCB#0p1YP1%fi<l@n5lIm-4HR>&H!HVq67j"^!=XusY*F9Vk#s^94(KfSpLQ+S
%5Us%>K"+#[Y'CE*T?'9j*-=:cn^o;3Xt,XtA\F:EFDHEo_(rtl.eH-RkJ/?;Ku6Z7*L(WgnFRas"osY@*ZT?gC)"gK)[`[Q<W\"?
%7c9JW=5I6m@klS@n50P%Y2[>ECojiiBA:Ug$bS\%,tCbqL-O.p`)q5lj.l[g(."MLJH'J+SY(=4ih4?j50!_s?8,b?PQJD7K*sXg
%bt4"(-unH0I,u.CUd]ODo/mU,YEf<]WdBRM*R9o_`=FU4,uXU9FC(;klTJLErgVOiMYYG4ot<j?U\]DAe]]lKNo'&`mHVE0PANIk
%T:np'4a?c/Y[lVG&s:.^fHf`dn$:.o-sD@o>FmV:QUVG2n=3Y(d.FCYN'FtN&V`@kIJ40k^cX?.jf9T`NGYh]$gr'=l0^;BaZR4c
%ARfpA&-&:9r:S@AfNTl;1\B4GV;ua.K0XOl!!gS.?3>?C<%@P]Q5LZX+HmXkXYVU^f55otC<qGhN;XlB(Wkrp:e/K'\>PnT/>jNZ
%NMW#Z:&1&*JS&^9qnq)kU_6PK7W0RXKK,h%1)BNc/n<fkDC50>1Cp8MKBF6l'uf(C%&AGfJ-^&9!gG^SN!!TN?X'6OEAD9SKMoV5
%C[SL9*]_5]RB/Q3$fb72c*<r?$Fo\AU6)Q`A*)e)=AiHF0Yl)EQXhL>IG[pRW@CVLDWuQn!RUNYfcgD*`qe8HIMVff2t*F:;bQ73
%pLWMffSnuW+G7S_)aK?a($_H+EThb=9._).^Yb03c`6L2'H0f1Q\TE^Wm>\680Um+MI2?O+':(<;"dR&`K?)Ra9M%:((c0Q;/@>Y
%p]K-97(R_LW35:O\^9rK2qr@2VqIu.$Q]m_^+"P$EXQn]M[^N)@$85jotBdH(<@/(!b?GJXjm;_kLS?>ori:\KaAl)DAfjn$hnh"
%*LT$A'L:g"oO\+`,Be2gZ*n9P=G&l@4u#Km1HZ984#gU%IdS`XCu+K'e9*Ii;bM@:00uKi([?6.P%QZ\;11)F=;\]n7<..=T?/?B
%\$[9-Xlmuq$GD<qBlK5Y+W!CbpUPSLct`7?N'*-g)R:]6e<aZribn;,l.s#9hRnt99SUW)4&l&-YBEY[D"kgTRfd!.Aq4cEQsoS5
%*I]U'+7mfm)2#/?+11,MR+/lH@&>`p,.!C87<eie?f:H'B`CJ/*kYmSf#$BVl*lg(/F+Iq5\;D7le57([(eQqq3<f?pcI-LY#El1
%&gO*\J\9UeN4-!HM3#k=il,*`0"2Rbj_Wfep'g>Fm@f3YA0[`,a20+qm45nJ]3?.E@m@?&")NOl??S,?3$H\F/Ak[hkj+#NIF,*<
%<Q$AdA2p7#-*]nIfZ?Tl:WT-o(FC^<.VUFkf`"pS9DRr;[$8m1T.8D;=j=s6Ml^r_XRdh2go1cUM8E$;*?^]PY;5VaC79uskroGc
%.\J6e*DSFuJ<u]\ULV::T+jnl]R3hl;NYu'lC6\?],j1@!?a7X$k2[8!0@'5AtCB@]a/j4I(q=ZT>mHrr:+DCZJ<9g:ACircEg_6
%r4;jOqVbICD?][+A.!-Ghi.F.k/^7#`>#:.p4^X*_\CnD;DI.7hK/cgp3q(`7OiN$1p&:$c5(?>J@Zum5j/AiJ.:-#'daq>pk-Lq
%-!H1+k4?34;mOn.o_$h=0\OfZ"hors4Z[`$c(W`eIZb0HbD>b.TZ%IniEL,EQ)q/RF2B#&bR3I]%0c*Y=;XPG8'c)^&,35;YDut_
%"8W%p`G:#sHpL83mh1"9I[_bDZob!*qX+M(9BDd^K?OLL2kF>d&uk9+GYrM4&bn3VM$Q[,m^I/8)_>SgSluMZ$rR*8C5'7q<Ut>J
%Q./g5^+PF4COk.!FXYV[QAr6n8mi]dc0Qc=Z)aMue?;<k@+^$-782_PXoQhNSQh#G,qIr'G&GeF!$AZtG$m=Selfk^0!t[pI1sRs
%Nt)m[Q0g6VfY)ij?5R`^\X-Hnm75I_E$au1mR76[C?RI_N+B$2dpP+&_f064inQoKnJ(^k&i;gRENJ/niZN9bjn;p@kDM;oUrnJ3
%+d'!cm<]UZ(dH(o#8GtB\;$J97.t=nh\Fq+h_Ab//bXS$-2Ih>\LiiE_OnWmZ-]=VoVj%D5^k4ZFlZ<T9iea4^q9UQ$RV$g<U^"L
%GL;<q*2:h72""\-Y(k1)B_^]:C6s5Hl`k%*W(UGCe,Tr=r?[Y0Q5j?9>n4!=^&[+qrlmYCA)Bhn\5LOT9G!FbFM^m$m4Cg=H8(Do
%q/ng9g:COi;Ldp="+_=rAg4G-@Q%D%G&S\^;mP;-T(?K:`S=>\gD(RuP=(9iot*QQ-'HX>&LA0_qeUAaSVf6,'#/@e5m8*V)rbb@
%VeEU`hDbm,d2W!)1ZBAkjnL-3D.&=39;TiH0RJ0()=+VK(jX,W'$s9r!'Ko5#=_>F+kq0Q^t_VSCC(otUW(X[Wh58s]N<HZ%*P"H
%kbg;'$SKHZn8n?q3>tKP/,@lqp^4T?=.)H,n5ZF;&m,"FZhu[oVj.Iq`Q[.N(KdJqQAb7EIn)cf^FasSSnt`/bKu/8,S+3;N8sT2
%:qI5<m_@%aQ)#ps"OMOSFSbkl%,81no?"j+'Y[2LpE0!GlIT/ADNaV#PUMMnVW;;'0;^`!`6'okof8JMY%/l"<C"Y3TI6B-8:/!@
%5Z<)HrUL4+dJ.rKlGWW'B/@$hOIbt.gZod%bq:B^s)=1BYMm4frOJQ:$k=4sSige4-\s*:4Q-E(mgd[b`92CHZer0'f>B&Tb;fmM
%0E2An78_or"R\(MCVTRnL:nNKi`^]f.EcEYfhOKS&]bbmA:EfOn>d?sQkNBoqZZ2b/\ttS`8al484E0nfb0j-F7'tngq?lD)g,4*
%]\>Fd%9g0PSYS`'DLu!>Y6\sGgaLpU<T(UWZj/&=Qh78""`sq@IQ)N)r'2(M=8]TX'k<_Yn`t>K"gZ1t;eZ1OmP`pO=CG,]IAd3#
%3HfV9i[F.!jW5D%H":2t\WF]]%qE)!/auTB!NrlF'g97o1`(NGGXO):s)LoASH@g[s4.D=,k.Jo_#$`c;M7.HB+hA:@=41gI*R)j
%,'MuI+nm)BTTpFS5V#(BN'2m[1B/OS!sjDBj18d)je?^3RW%VRL]ikHHC1$2F6KBRMSi1D,`#"ul8NBM<5p?7blq&&@OV/+4Qui#
%QH!Rs`PM;041e6lR\as"V]ROKO2ASA63nUmJG6hHWf>/"3<%VPK$dC@eoh0)a3'Bg!X=ISrT=.t5/_I?E;]R]:tAMmeoqiN>VWJZ
%>]-d33_XOXWW5lOgT<?a/\YG!dhh4>K>(>n9],`4mEA$]fZX;Y&i']g\TJ't-j7i>APX@"Ph=,K==1;hmGt+9@M#7`0"o+dqg3Ir
%gnW#I%;e;,>YHkh*MsX)mc,fI$Ch'snI]8d(%csO9M:Y[d5<$!iJ,Z$%I:]s(Gb`#oCZ31KiRNJep\aAMUrncR3)8dH*#G\%u.+7
%BDAKQQSi)sfW7$,)800M!bN%8P`$?b?9T3I:m58uKZ9C3L9N2SZ!puFpMpAd^6QLg=aKh7%DA_+'YC<XR+&1;;18+/Y6mblbmpB@
%I=0^!#F)?m#1'Q-;(eu:^1m4A$rMkf*.X.r4qs3aO#X=2L#WW6a^F%Djl75c()hDN7Wq1<L4^M\s$llK5CO+X8tqf9+G2U3bIM5m
%!r!lh`aG4\;=EHM#*8;>;@kkL%*AB-FX&r?:&tD#1.Gi:eM.%^T?K/'IZP4KV!-_s-NI4sYf3N2bk]pjWdGA"!\?3r/"VfreEJSQ
%Tosqd\0==>J4$a`m&83G^Da6[o;,JR)S^m?&pU+)n3/.nH;.8Zqa7r0'OGV+Q5lZ/:lS$MZ;Cd;\9%/Q,PoER!+OFXI67(Ko`/b=
%%CCPXVFI%!K'"=IV!8p.'Ok(SLfIi+<+QSed1MB=;_+c2O7@qP.jjB75]r?7SZ5^^j/8Y;GI1"N-#I^LKqZpicdrQl[R&Q3WuVok
%R&L.)mtX^sDq;NJW6>ZlKeKniZGNldl%i*#dXFjhKHaEae_UbdirQ8l,,;$NGlg;H.IU4-K';m6otbW$ZPP(gH.9!3jI-1^Dmr%:
%HtNZ5M&G.^[$sp)[Zo:cYZK#9s"gG$AnLNk`'.:m`SM>/IHCP4Ihj"cmVF_`)5moK')\!rqm4tF\%o4&"!`Z>M@6,ti22/&)BK\?
%6KC$,AGiKD^r5Bk#(d[hjuGJ,BOG-VrkL>E#4NPO&N7FlrFcDI='ZWhE=W*fN,9">i?%W/1D/![)=r<jJG4)/%F=m,So7&]#(0hJ
%!*c(@hQu8b*kJGI)`M<Z5/7>Smt6.UDVRU(!ulJ-r^jY(c'8Wa7pP<ATo\]R*aGl?C_qVor4tcO*oJ-IpeU+i>p.tVjU.2RGu;,$
%8e0d.=,MLmG9rlu1Q*JS8Qn5?)r0qk\5J6<`UW^=ZaaXhnEbM][CGr#[`/47>-N7-#=%0?p?W'7aHCbSJrH=I!50m6K'C:!.ZfPm
%U>`TNl4%<STNI'?Pc44'=P6!hWT5c!hEKe/C,%%MXX%5cV9N66\O_4_&V[\lY>\&*P9\MDNN?8>!GflDpGecF_Ko=$^j&E,5Wr_5
%6p#'^B5%.%kl<:&.cCcDnN_cA1""G;g&JH_g_/XO&ts1KE9U/M8H@\r]dm*kgnLM&\LB)B4sjGC7XslU^t8,i]\Y/0Z$t&l%j*B7
%XQ@N)-sllC.Ur@^5/KH2).EV^G[;oX-t>tRlnh)dd)oI[j@A^^+*S&o!?(tn@rjkZ<3V*hp49>I<5ojC]b2X.q4NQ:W\fJ#>&33@
%nYe9LU==H;W*g'Ah_a*@X;]Z.U3upj'sO-'Pp_X&m)dn[6gq'"O[":!@2<Y-As6(OE49&3&QZ]0_kM6ZH]XpcrV)?aZ/]e<^$ieu
%6f&!N"ucbqop$r)@LXn.=$$G`LnQQ_!W@.fo;mPO1^^F'iIE+Q-MnZW_[<mAK:DVl7X;M#.m%7!gsSesl2<Pdj05H=5F&GcV-#Gu
%@"i9i;ep57ds&r:K=t'ToN?H;*:$U]\[u#>T%ck>i>-Fd]mj!!DYVpT9f!6DZ!)N3ZY`kh<p'L;>:!oCP-I+LX:^in+s1\cP3]AT
%HQKd-CUdYW4CbJ3O$uVqf!c&bIkQP@YQ?Z*<TTR(/?W2cKNO9-_+DsQZ"=dMHr^F:]7Xe;.0a3LS0fJ$c1=dO;sp2#eoj9+Vi(0;
%UN2u*_MT$nn3'Q0gKpY47)#[.n(Z=M33%f-\P@$AZ$+=)ne,@7BG?2*,G)AqN!e.Cj8&$&40+21,s??"@>,=4,4>33],)2+IftVS
%7`V3]os$7MGqC;3MHE)ehA3tcoZc?6=&%<6WuBP%d;St1Pd*,%%f/?3jCMFj1'0jKr:,G?L`EO!?64qa`]CW`Q)0Bd:%)HGK+P*L
%@.?(Vmi5^3<?Ej>nSOGT&,4iSA7`"u@SW?R\Kr:<6O9aMQEjSf=M6OI]t];(4T\Z?L6WKrYN=e*>QS"`b^j$sfYfJp[(Y[h;:q$`
%2/F,qk:V3:Ts1<X\uR+F+W>m`G:49>UaK'Tr;g"nHT>,QSp%>?j"7HVXHd\kju.dp#1D=R*FVBMn8PSgRF(H:$*b*J7"1*N?G5c1
%<IiVL+KObnE8>Zm";8jQF&=?ZHenP=]jcWm^lfh?+0M0W;d5,!0[4C0VdL-0DTbc">(BB`KhZ-g%S',l&iM^WSu^"MbNUp]Ve\?A
%poK-Z:B_N4lul5]obLDR]m=J91gZ%kQ)D7+>4ql`;1;[n?k#uhjU1BT)MJ!KRFL)jo!C;h`ZreN`M_,(2j2XlI^]s;l@bFp:s\+L
%n83C=?;.=\:"Z*0M3j1fWBdh:cM:qGk;egZ/+.jMh"acqqN*<-,TQo@o$bW,W2+p1IaP"?i:U^t@!mEgVlS^7B0etOTCtI<iMV53
%^T0c0:ZjgcjG0r5J"Ja[W:4oul;(`s,:-?a;6Q%Wh,T)*IXOP1c>5_q/&eDF0<OcNh=?q6H:lZ.ILDeTA6O.<Cu@Hmi6PCBXkX7I
%4ci0U[_H9&T=0@2e,=LGm^u+n^<tCsU4EM?LGSP]*!iaG[Z8:lG7(fM@&7<IlOT.h7-2%KkFK)<P4L#?4=ne3*GKL0SmEu9k:bb?
%p;\23rS=`6T:4+sc!*<<4tr+*(D6RK._/]4m^+bUTn(kk&7+%@bPJe?c4G/o-4(a`[;VWV3e6I=<<W;_:F\cs/&*[hoWZW&FX,J[
%WTsQ6#59Y7$k9=7$]-GX7N?MtW+3LjI<ees&uAjCTn5-1$fnGU^g1;4/A^';d_K%pK[d8mbB/fc)F,X)#][4lr>XUCE*1:V.?Qj6
%=G(IkR)5uLP6gLLp@_\*$IRW\]8m#&)3H)gD3_@1HTcMQ=/@>h?(Os4aL+j\$9V)A=q&rc%TK\W;nYlC<JQM!'NM6]8Em-OfI^KB
%9b-E,X1,C6-/H?:628hTFtt-5@mfW%f9BMIW&22&,V95SdJNq&7O0qNW!1TEI@lfW@dpt`m`KC68%]2EV`ZdEX,&YREV["LDEIqT
%5IfB2BgNO!6,=i-HNr;%ie>pq"gZSMSnEC6GfkT?`]'m!IGBt*QiR,UDakIZi1Fd+K2WO#j$H,+8+-W0RJSGL<WNUrOFaB1nOE-U
%Le5E"BB*<m`m*7FXpI0t+j'gH:#(MADU9KH&J@<]m9>2b6c#$+"tCf8MF_+B2Sn!LW6+a.KFk=+oklLiDTV_X'3X/T%ji`cm3!eY
%^OX>N>B=EBH[Wc+5>Pb??"&D#Z;t$F+[@7n,l0<A/LX>g0Sb5OF6>i-%c%XHdm/BhESB@o6%A?ng@R-aLZLEf)Ej*e)UP)+GoitC
%IC9sU78.O4Y=A=\?nR"D@fG)C"08PE'_U!Imh7GJg!h*!g8&A<VEur('^E6\E[aucaD]$7q!h"R&4!!P,@<mFprSbG(]e1dQ><t2
%Z)5/rM][qLAri%PGJcZ6i_]"Cq23PFXsjZsNTKD$*F-C+=0!E#313sfjSl[?-hf3!956U5W'S0KN(_$%P&WL"dC>EPC<sSYC(6^W
%W<o'R8&6\f2Z.lcYWG-.]sgm,?9D5eo#EC-N"Cb.NAd!1rCp"+[s62<M](6F!A3bg2ZQPi'Nfe3aDG\UhoHVli2Zcl?ib#G50VB+
%'&Q;m6JY'hrkm"t\Q7jP@Gjal8s'-#SQ5H?'o=@8XhZ'3Ws;Of6%$"u.k0d$B'B#n9&KQ]rnL`E??qq+S6`rlP>@*Y2_)4kDIq8u
%?LQ=2P1QWH.O.$WBe-/r.QqQF_NEla<5a[D'LHlj,VPnhj,GN'.0-qDZtRnrNmO]YVq@9#p(Vg`^t&SnB@gmHb&C7okVT<nHE>'P
%mqpc"JRf\lCd$g"8Fri3^bbUCd)NL[;7g=odu6TAF%`l$-J`*#d+!=?pgFN\hBdt)'t`WA9e+tZ-Q3p1A(f,!HgQ*ShJEEKRH!b&
%Zd;jf7f[nC9Bc]oOfbZ8e#!j[dp%oJK(Z6^5ZHeSq`2i@>4I+1F1!7JBtQ0J31IPPNBeN0@6^>K`]Z[S*R<q4+AfVZ1)b(-),5u#
%`.R?d0ecU2?D+AIX9#0M)*N7QUaHCJk=K43'*)95GY]5[=:RcjQ$_m'O)s.IegMUZQY*+Ba3gLUP;jt.0C4_:TG%7&ZCAhp,:&,g
%633,#Q"lqaYW8Rb-].tVdmS!?Vg9L`!(M3[FBh(RK^!aI6(@.aS&bTg$Tl1T0GO>ER/)p/T`:4DOdBK.YVLR"\-/jNZid+=Y5;"[
%R#kB4"'iu`:E=a!?0nS/&a)VLHA0Y;f2aFb^6:Y38k1Xr]\aZIcLk[Ep[XTP)GJNc3WL,QWne[qj8La"'!TAa6p].A2A!sC(Q<^4
%ToY85!#TmSJInU_PdSs<JYkUS&@/kp-t`"$9b+#`L!_("mgTEm&/q[\?GIKV%2u(&.Ub$"5(-,76nPhL#c&6jOYO46Le9uH;DT8h
%65*6Q]-]JCV=_g?;0nNd3tLl4onhbim53TCokc9D.p53QD,%#H"#=f^.+K/Q?"2X>jBD'VG)s*`kUF.4H"n0XORCs.$k*H:dGjqi
%9F[R=$F]F(0Y%BMNAfML78X2F=+2W2/gO9S35*8"\ZD>K<IPFi9:?Or`qA':?@^b1:WCaH,bMc^!TWkpfr,Fj=,hsD+>f^QFi/6g
%G*Eb/,L2S$Gq@E"q_M@jc('Lu'^lb$"-P^77s%8._i=_f]bD'C%sbZl/>8+*FJL)p`s!0M8N.QK;QGsd7]`E?CUr1+J%O5("Q#?.
%BqUZB1pF<$]1*]#KkcpmCW@PT7><7M6S%s%]QA3E8@S$WdS2Td!nPErU`6X"f_RLDh^^rjh_jE$VnkME#gIi"""FgDM"]B0;P:'9
%h+j(6h;b?$@[$rq3a]I@0=6Xq!;0@$h_G>BlhV/'5t.FZ$#<'Ym>b$9ZR%\pb(bg^Fg@RC!B3%#Pi[iAc)!+WdIm@;l>IX!i<N;]
%,]SOrrGb.?5W_Hp@O[s"FF2d&'.W(DH=Ha\MIJIkRk6=L_.?HqkQ6oOGXlnsKT62TJBlH?5Yr.h7"pVJ>sR[*8C_$JhMOSFNf4Wd
%.7Z<5jcJcJQZK6X$*/OQ,3='H;[?Y_*K;De1k#<.TG_`(<L'?/nGpq]NmHe&/5at+W3quP,@JZ/mH#>R?NPp]Np!CL(FABS#n$"U
%BEBrb+17@Y05Lho&,pYBUJ*\b/9J@o*'#h\3Ai1\3l1@$.OdlMp(XE:$)nrFp&XC0Q`A4YTdF*;g9D+N9Bb#s#)lqr63CnU<i,mB
%(k;tXL*&5uYEW_d)l'a]MG@0<l.+^Lf@kr_.g!]=R)Ou@d+?UrPP7Xo[B^3X@%GCrPug7Goi0J+H5p*g;[jTR2bkYV:*VC<PGdoN
%;:E<)K+<7rFeS1b),7-S"&QaQ<?n*)UUGXp[%1W3egHoK34.DBJoim_6VESj25.#%*I4ha,L[I5"\OM\3Q#L&>?]EbNC>0BBf9EG
%=:mM)>lgYo-lMoG2.CROIbM"qYAWku4aj/15(McNja>diI'O4'e'%QoC\_'Kp\]%qm92];<pATuja>diHmWRlip#QPg9l;.c"5&n
%ZtoJ2ZI6^UbPAM\q#Hl,Pk/V@o&5gq$^C6s[kj]jX:(9aC"MoI_KP+,o4chIEH[e"3M/,/>.r@$X(7'&BAT[*,@u=blB>t5\9Ua5
%jbbF@Fot0;@WV%_1u@As:?q'U!Fe<ojtZ\t)EWXIRsHR=;5@)<o/TKUEuHT%EuBeCaE@nJTXiAi+Z=62Mti6ld&Xcr$klsU)l2@=
%Q)Y,W^p@@>%ZC'X8G1(#4_%s!k8(1<C"CXNAR%adQ`s@Q/]HeOGaT")2G7&TT]ru&C"i5H3fe13SM]<r\54BQDpF>!F(KR<gHGj[
%P]#118bjYfd0XK]Ysg5;?Zj$r#`>g\?u:H>Th,p1J7Df,8U#PS1=ofpg3]@f)I0sj-V]CZ@r?Rl3QEGr]%<^7?;561U!\`ir>7dk
%Bk(CaVo`FcqQWNA@74[3<iTRhERS\8<Bk^nW>H(W5H*/.^$i=FN2(+p[80jXSB<cCX!TYr1:i,UQ[4WrC6uY9l'$jiXVe\Uh,;S3
%kGQYQ*6,(kRJ05$'X"hS6\#ZYiL3*hRN-I10M*aP=_R3qAb\pN2pj%43<kpObFD54%iqk9323D@U`;Nk<k=hq1hjT^66@IMm8Anu
%:-6k<Qr\=P.G6S^*p_<(h36"k2#r6p0rYptG"DO$B:\M><Wc),k7h\.K*Mus%=_4A,R]+)GBJ6B$s3q8kg`4/>[b3Da<Ie@4)pQ#
%2HJ=u,5#D,"&_CV,3h7T1@A3iLIlU]K-!Igm$Wb)q(*llBGP(nVZ2htHDMBh<Nf;e/R$RR2r\S3f#InQ%X]_^JC:OL;\24ZAQ_Wh
%E13=%qK-4(^`h?EWheA%NNQLQMEdRm3U('Pa`i<3Hskrkr=&4I?B(OkT1lOOBinJ]<:iYT:Osb@RT?\cZ070b9"]`G4H2NFS2-6S
%mho:#-=DgMFkf/*d@2sq]=L6GgqA:&NNc?[j&N2Kc\^LLirWV9[dsa%&A8[PN#8aR4$Is8gF6\!iD.Wf(=1T@OmHeiK#^8teFj.j
%D=eJ=%9<]7l@b-O['@Q-bl47@52NR^aAk0.88i8[WK9et8aR2p,CTn;[]<[\!e^cUPbfm/dRNN\P)eSOnDsFX>;MKPTj,M`988N3
%+cVi`*LAL[S.&UXRM2W*i[6-;P@aj%IbG+.o2@k\9>]&qdK'C6CRZkV*rKX%cM,2E:F$*CPFaC'RE+ICkQKD]Y0>AO`P#AbSk@`0
%V(;/_985</RAZA[H_JSE/>:BrML(P5-H/>I<KdtiXirjt[Gl?A03aiW;E.;a6G%2JSod=t=.,U_R4"RFESB?)/+]"<23iS5(j%c\
%Qd6qX>:XEoOl=e_g%i`.<i;)0bCd`k';[tgr9Ab[O,PDjl2oDV6T2Y]$j"ITlsmUOfP(W<\OQX-.#6Ze9'3h$FR*ZGd,b#QS.s=T
%NsZhXYa/%r&kK;F:&G_saq\P*.EcJm9RiUOmW6aHeQ7j$9N,5X`K/j^"g2lE*RO]cl`mq4bYcCdOOe_7ki*dOB<4TX'X/F6W&8ug
%lFZX;7tIWdG!frk1NE&IEta0]*?73K#O.D*]\m_>B""#[/J9tG%dNs9foP#`(<HVk(G(aJpq8qT/9quA5]dQ;M7L$fn-PGmJBee%
%-;iTfTbC7E];+Rs.<oX>J.*K@/bYZ6EX0uYd5VL,f_d$T)B^Qc#O=*^f9m%W@5,,<:L0i'ZmZI<BtCiAdUA_DPc$Q$QS$?A0@jjI
%..9^ao@0Ks=Zd.<_uE8)SoXVbi^J-mnMGk>*71WRKRud=5.!fPPr.[`\C9mWm'PWgNeE%=Dd:dp3s]OGn-l!^%pV?>Z5GFG,F"8D
%R4q3*jmufNTfjNXA-c:WGS&AgTJ98c/aJTd[Le3n("<C+/o'@GoG"j)ZO,"gU63Rp,Z8k;4h!5]?*7M0^QSP+Vm%9ERXED)s&-A(
%mb<H&X5-?b^0P1:WS@VND>DWG7qq>!V610X=@?"q;&oF8U$V2%/ZoA3'gm45Ot4/VIdT)4d4S!>=t6+nn#;T.]rG,J_&EbRfbU0\
%m#H$KW*g'A_je_3e]R=PMZ'saFfb'fE`K41-M"->72RjA1s56T+hn;`ZkNu*cHTjaQefIs7$jpmIR/`YZ/8Pqi)R`gP\Q&P$<D7E
%iD&gHn?#`7f@MLaZ\I#8Q<VsZ!`mdd4bYhSq85H,l]VO,+)B3&=J8D=(:tmWe6;C1$J[$&Nk`7`kqggAO=+T+fQAEW8pi_\=T]dP
%n]e3b-rVhb?;PO6MVKVLJr\)kV>BN?pDt0\J@$JTFI/t7+FD75ED]V_r5UgATP:$cI[JNZhQ=Fck,NUqLu@9!m!:gk]CejT-bu6p
%^#$#&]7X&::+jiI@&Him]Q@lUT]XLFHF\YE\lhgOKM),#n1HhURDHI_d_B)(0]<IOCmlWI_4?%Sh@]'cUN\kO;JN>=>PW@C`5`\f
%SK+srY-:^D9+ZgE/lgQ%<7PVZ50rA]_EOeEU=-V5Z`m6)W_XO,\O^/$;A`b(_>iT54rIc=WkL,cfV\kpUjJKNd=m!@^:ur[I8"(A
%dQW^oHX<YT:T:?i^9M^0_EOfXN(J?(h'EF*PbRdo(\^g]I9L9*?*LP/WN&a[V0\!84s`@P=l?$.I7eoCaU`8Q^T^LJ%QUq?_88C4
%3E/b]3ifLR&=!/'bU4+uBippm/F5HYBI=Vi*J-VU_-OXVmpr.5=4jG3JslVLG[[3W!#)C/^1^rI&cf!r03[#+[+TJeH%1!GT2J\H
%JW"l(@@pF8RquTr&qta+<IG,Kk5<([-#uOMoue'C)(?uG5[g9_<M+$K#jg-q5%<5PTTP9`-/'_&eZh1E(91MJUd&srN)j:'Q5cpI
%ETp^*Pkq1mEh%60T=2jMN)[B4!)$FZVis\Y_d53.D&D;c_G2M=0WC@J.sL<`:POOSaAgdVehLF+e0d.cUhZRXh^GIgE\fP+N<Z@1
%UWZbC:aU=Q'K36upJMHoOP$ZIaqLg5p&"cL.%XAOr(iJgA(4gLrpi8_@<6?pYM&.$Ij.\b`0rkW8"],.6aQOeSN3MC4XAal`AIiP
%s"b@B]KcD@,P<1T`r1BVlD=&TQiEJ`._K9>N`AG;JTTLdXYaeA;.jufCR;*l8B4qh$?GggT>9CEp@G>A[P^GJ*Ipe:/61f#5+NW2
%oXV?KeIc&ZVGB/"(tTA`eiTmEL);P(K<tql,Y>,8)D"!YBI!82+b=o@daVO$C-IjPWE*aQ7^-dUHbq'A#H:bkbGACM0:HY+2O\BW
%P=aS8)-qrBKp[n,G>\tdePjct(,-$X1`[ueUCa)>QQh#*PN9$Z^_)k*(n,o]YL_h.nnMP2"D6$g)W)mL(&&<\)a\66h,1&AL.;6;
%q$go1Mj0VZ21I$PN1-bf,B>\"/.6.13TMXDi&CIK<I,.eC=[S&.(`g!0]mY%U3WG1Km0d7dcZU)$,ob>J6<`#DTP-ek+2*K)^BiW
%#4lP5h[%SK"fBGYqu#CZbbpKei"!jR0-cW3'^ZNj@lK=>:$+PdTs4L\(WI:sO([;G-\NR@Y5ULs4W`DUB1/V&i8-[M;]T0BGDSZ1
%K$.9d`S("b)00`C^\<dfCT:J9*Bc$o"3aIE[8BE]iB6tn5EjC+\F.7rQi=[JL6$8.\M"bu04RpG1gF;Ge\6[:^.s*Z3-S3&g37Kn
%</`CGE)]9B'L;6t<;V.B.[Al6G,'ut3]?c0PgKX8?(fmf6K+*+FM'JZ5jE":M,SRkU(].ZCT1X#WkMP:g:T#QY=FYjH@.k;%)rYo
%0REDUE$V<3JO6A#/T\pBC/)1'lC]oWR!13T)c[.Cp$>X2na_&b']1fH8CaVL0)ca&-`fEf>"E5aDdYaC@XtK)l=0T<Mp[39AA(HJ
%W=2pgH*9_M0d8H"YE!KTBJK3[/Ol8REGXHJmWGCQS:ol&r?cn/]kV,INo+Aha+kt0r!(=X"4%OC@Qa6-bN9or7!E914m*RqT:UHK
%k)_ki:ms[tHJNF6o5#t'3OVuEXg!`j?`EKk6HGG(;0eU*P;g!TY`k*_"#C:&V-^(h<hqP)9"8r7cZr%VI*PfGq4d7.Vhf5VdLNRf
%.,!-mh<jc=WA5!WJRrlj)Ya9>i_;-p8Lj=:GGBmr4^_sc]Lc3`&d^.l)cJCXA?JO7T.3m9eB,+_YQ?ZVC-$@BRN1Y&f&_CQQjBb"
%>)d.R/k-iBOPg'SI%AgV<!j5@m&Dp`o_t=ZX9XDH6UX])X[G,<a[uVG[gl$NqQ<hP\FN9;\+2l(9rFbDosRW?`bJU)-*/H]0"gCX
%lW'4k7.Kf\XF`<5Okf7Na4`j^`CftFX\lM7kS%/8)F%U1j`YjJmC;M#%f8cP&BLN>M;,:mZQ<.$8%B@>g>bS4B`pmU^78%uIp1Nn
%/pp!Wbd(s>DN*_UBrUFmJojr.D^:^E?5E3LZqkN.KgrP39!M5DY!Oo26A\q8"kB\+=le.!go5"OkI;Cs5*OF62"-.Y'"9^_cjgQ6
%4M<jP0,'Sn\M_<*)]=^.S2F8*-9"o-:JqBs=uV0BD`e75a.]p+'%Q$ca0$A@1p@DVd:"*!<-3CE#<Um-\*-.UWB#4!kkZbIh$2De
%gnM^T/opMg&[B-*.\aY7Qe3VdKDW/D4RK1oJO:j%`%15)b>K#`PpDq4OZpia/RIFY?!*/$\8G$mX+AXIF2/4'dq#F+6iTV^aud,5
%CQI2RYSm<3(\=F3KTQ_`O@uTVH0eRbO\>WuoQj=uW(SSZLP_mNY7<V.6B[I-eit$=DPX3mm,PC+\id-g/\7/77\+U!h3\$f#%<6\
%7ot$$)0M)Z0%VJ)qAWY%;E]oRJ>k0hdpWa9)0Ld6nZQ&!C6G.8V-]L5ef7:t4D`,Pcc%m'fdjN8c@Y17cnU`kjAuGPmS1en&P`"_
%,NH]6?^,5TM\7V?$LOLDq9WplXd`6]&rkHe*[Hl?:oJ!A4Z.6"J#L31/Vc5`O,-oroTDW<*3.O6MN_IE-qVo@+?A4]40^&.`\4>u
%W'\e3g+8e9d3))h;bI`Le"T^#BKE*a;PhGp(Cc6bkn?Z%eb^U$X2t#uEK:UL,r;Q]^9#\'e0T5b?WJQqbs-ASTjmfUns:)[oIm2U
%`+=Y(-Z-I(WDkN$`#Fl[>mttpAVH"M]?=P^W03m"*3&Q`.l8-Wht)fM$Dl\dfWBJh6`""HY+^_aQ.lfA$=aKOG^,X.ZHJeRFl%h-
%d_X%`X%l7R<P7ft4+sDk"*N=OLGI_Nh0,_0KJZ^0G_oA$NkFjXAX;!'%S^]9=rhtKTeV9cqnb_fF;&Yel`:I)N>.U_i5.id:o5!2
%(A,k>(ER<%mP)e'ie<0A[iNV$SL7chW')DkAD#oq4B.h#S`AI#\F<<VUJ2Fu47C$RmFr,ik29AY*boIS]M3L!$P0X`3u!@mR26oZ
%qnm/_f101mW0EGkgidoXVhm&he:qEfE)31$$P0Y=?l$8fKnnCZ1#aJLZS"Ai0'5#?'ZlqgiM#gk%!UI"bZd1-_Sa8Z47R0CHk+ZJ
%eM6EELY@@)oTr7>SU07gi][lk<j6Jkq%k)eVg(jo>O(hg%jbdt#Ib_B%aO9!n\RY1)KNjbfbY]EY.6/okY#0*W4gS0E8$]r*ZfH"
%iV=c9b-rC_:eII0iM#s_ZUS]uE>K[2S,%;H/o]dCp2,TU%EXee4Oc9<i#]^'/j.Y?]08bY3;(-UmFr+H1Y!3m4Of*pd^l@Gm.5`%
%gCDbtaH+"'d"kjep;4^WXsfMBS+A6p4=Ki`gigcj&Y+4,+jX\V[iM%_e!)LJe2Dd*3UOlq&%.@g%sWukAM-*X81h"DKnfkJER2>f
%OG@<;<r(2s4?PBo9B!b*dnBB0gCD3m['MAIe@t<H,b`Prn5)QNZ)5@2>!)8k6gZ/!_[+bK(ETRkl32<eB"[U_DE#'fcbAo<8Dj$g
%$P+OMm,5=iZVhLV(ER=tL$:7CZ!k<R&%*uY@70V0$P0Y'F@Agu]F,7XD`^q(dn[LD:s1\)/XoC<G\Ga83UagPl"nL\4&i=a3VL<W
%D-^Su.4[9'iM!]_i!_$Djlnp)(\OFjVm2[M9I#[jL_[/6(-^:b&4M9"G,X]Cf$=#V(/`4c>1!3nh>XsM#QX`o*$RaZR_K46eL,<Y
%=Aa(&r#e!+<i0$dmuG*#j0Lmn"8/%HCK5"\g<X:]c7.T?H#DWNJX;-g2AC<hZ`7rM+4r&B2!.KH>MlS7eXaU@/Nrp4H=,X@[Jb,O
%\65ofFW33m_IC9!]DgQG/B7?sB(>gZX&87dm.$kAqqNO-[7P_rRP29aho#H(?Zt*!rOg>DdgQ+2<__3%AF"Qbm-'qIh+#ioX6"(`
%D1"9qF`uqmX,iiX1"V%@okRj`OVG<.(MGiMDd&['jTg].f3#WP7_oL1,17p7e9NJTjm1/9;/SMABR69Dd/-tg`n9(-6TB/q>PX]`
%/\7+ma*0Kp(0#fS'V?UuR[N#>UZL1%'SR2^2lPdp`U!qMV/3i0bU,is"e#.?79f3S8XWmX1>&1@XjDg"1[FP*jlNc0;Aq//li,XS
%Fl(uf2QbB=AaZGK0&PEtgXTggG5Dhon`?cYW]l<38H&5en:n!^>a;<1$U+NC$k4^ZT7EqUd*dW5(GDQPS#%AS$Z-;18t-Iu-YO_Z
%-.3C87hEGkpk-PPh!]=([rW<iZ/Euq/,Cb6nCtj/B%$'/Ah2j/7oq7+9UB5>VfD_-rjm^$lHf-.7D-@^VG+#f@Y^TBY(HO_?a<b5
%<O2B7LD?!Jq7oM;$!J-8Mr,B1HX1morQ<bep]eJSW;!DJahe-e#:_R@=Tm1/.kcLtM>D!,ns0Pg.-Np'!RWYAn29W#?d\R^o'$tg
%P!OV7!$pYqT*!S3ik*]a][qt]=([o3X'98ao:!1iDIWRh5B)K%jDTeN"-f`8HIaC_r%kPO_)+12*tY.O*c#o<4a;(AZ'+5FeU[\E
%Kc1%M\:+1r45ulX7"EG73!"O#Yo4hY8ALt!'j1jprU?j0"!<!JnA&6\ggmo@iGg%nO'(:A!R'-S"Z\.fDD_da+eTU%cH%A'Pm7*-
%_B$>'PK8_,I(b]dpX!4L^se;_4nUnRELnj)09:j,=JLP!ftJoH@udb:*V!q\F!as1MS2iSM_"Bm!F26*-pVhc\:b,?l+:O?Y3m;N
%:3D2MfuW@/c?a7d^Z2G5@2ZZNma&$oFXC=>H2/6.c0s;G(E=H%gqr^Z$^Dto(1/c-q[7=B'!Hr)W"D@g+@?s2>sJ5Xrr!32!.WBN
%kd-oZdh%0E_D(h))$ofXMi)*Dr?^t+dC]AU'+=`mn]Gq1RpX$HrpRJh&-"3E.R(UJi+RlCB\p[B)!Y.!m;R)m,Eb4&A.W:4YSG!2
%T**a[$7<Qd`-oYGCstoT(&!8l6W*QumP\[D!34,\h@`Wt%Q%c?7.68RE,i"OIt8kbHf;ot_:K2%55"FJra8[56_k`.I#@>?"^`KL
%/9V5!m3'#pB8%DY0?XD^m%D4:B\C$!oAZ1XbCaP!&m06O]((!`^^UiI+"V@$IorV1FPCCk-q#%akn;aefQ>BWGPVtpWsX0@as5SP
%LH2/gh"#2c,2HT<8gK9lOlo@9H]]<N.s@CLOr7u[Eng[CkQ0L7%1!Ze/45`8p*c<hB`lKl2_2,06-*c$??Y=fYm$"M`KOkEXTT#r
%L>+F:rQ<qOOQ:gFE;Q$$pktG=(D-bn_abJ:1,S6"ikuKEQ2>_d!]OV%Q!H<LeYr%M&E8eOgJ,6p&KBtp=6$*grf^EDSV]\*K3+]J
%(guhC-c*UCB]Xe5l`sDJfk\cA'],$C9_%-:c/%n(ESpP16e4kljZJnF-+?-Eg,A\g_tn]ldNhL[Suk7q==R+J&&[6U*9?*ndL\X#
%bek#VAJ%N4`C-jAa@5?JJRK0)ZCV*,MG\CRAZCR1O9K[P^][LL]gOo&irWO8dc_O@jtmOsh_YG&0h$WEX'*3T".%NsShutmH:T`c
%:%AZMjHh-eqpeuoG&b`0Vob(>O@M&U;8XG>C@'8jL-^BGcu/mn4:U>%KCO@7LTqpZIt8%Jh.)ZJp<A(?RO.Tq-/!o`Cd7<[?/Lp;
%l2Y]"?k;Z>MID/r,rpoLoj**qQCdl%Plot+a;PCSS):Kn7A)5ELVtL3/`o=5+Xo,?Fg=4bY$=eZKQn(bQ7VCIK!TU[UgVV31G@#S
%Z=]dB$uLsc7Ws2?mhDM6N;<'7,SulhY#q0CfmSNZ]n-c@dM";#_VDe-2SLA!gP!lF?nCdJ7b&)[qp>33!JFse/3il^/a5_mgKOeV
%_\-M:D`K0I?!\Vb(:k_@8`fo?rHBUHP+4r3c-[]u'BfG.Z]Nd7@NlMR2G\u:0bO-J%G&;)id)lEK3OfT#\tR3ZJ/M+%+5Rk&`O3l
%"Fq5.)Wu,!C!ig\c::>s+Qo]n7&YKZYC=&TbQ-!\Y-[;/H,.'4Be3@Iq"LSO%\q$r)DeUC@CY(kBhLF$8B+Jp0LQo&_(YjSP+RK4
%8j=5K#XIo)j]#D!m+`F[))cm0l=les"'mf>B:^pkJ*s`-;-i'aPXBd?\.[q_:*>`F[d]j*=pB3bN^aD2?-JmDlWe:hgC\Ap6otj4
%Qo@eT2Kgg%MI@?m&\GiJE&?i6_ul.>&9q-%9%3=L)?IWO^j./[+_&br=N`>W9gl?u@0jNF5mbX7_,<N"K4duS;J6U:j/LVXFq0',
%d;`cG]2*]6K:Jen/r*:Q.-@l=(b2%fPhd>m:-3=[4-#JUXM-]F+l]km"sS"))MPt@7gqeFe'pI!^hF8\K$[sWI'cumIca91^o8R_
%=eZc[L/Ups7s./"Un'sYTkYsn]I@7sR?H-g&Z<F9#)&@;K!@r%H)d#s5mQ\1o!/'3iXH@3i)d^:j*J&6/@WHqa)[Hk?9rKQ_XF9_
%8tE%f*h$<?PEH8QCr3-5F]^-i+/6CeQ]peNE]tE"Q=c_2`.<u*lrE737cWO<FH;FS%Xqd'_7HZ6%VC">Q2H$:MlZ40,=a2;U7VA>
%>G*1u]$!6"5Or<tK1c3!#hrS)6XK!ZB_kb+MIPj3!W;,;.nS5]QNs(`N5J(<G`VUV+54I1idT9LF&?\ES_X[<%`prm=!3#1lZ4VO
%>NEsN(3j,hTj:?:))7^F#o/,OY]"t2]S#W/_56_1\$/8Ji(EZ+2DA#tU+9'n4m@04*"D-Z]*T<;G_FJ&JDWO2kK%]Ch$</Ub5186
%T8,[T[Z(l_B2;)5AK^?r[t?q6S]U[8:H!IG66A8Tj=%Yj'"*=h_1kG!cDnXH(o:)+M&>!>H8pLP0aepd%>/)0jB7`jblLo=?L0YE
%0*sXqGP(\,)hho3+UmGJADQRfb.mtua'GDa:]Wr*)Ilh0ZNEo!)-t&V(0\Nhmq1D?=5oZU/Vdu<E]Z9@+=(ENk#Dr;\dLq]iS:Z<
%jZDa"L&Go+(\/b/7TaXk&Kl8#./D"*0])Q$N"uL3\`MG\K@3)C<I0"Z[?Pf!G)ML#Y9-!m:=;k&ac)dM^8%?eG\q[KpXr!gh9Wj!
%+n]:M#"NQO$RoOTPJN".+X%A&$[L55&o<(XiHMpNj/?mX^L#;J!:W$7i5@Q'm]_D9]r0,aA9n$:LXN"M@p4'3I-@`&T;lh$Wl%qK
%_&KnT5LtM_,F$P*0";mC8656,$Zsb/$O7iYmJL:`SE!V9Ji()/,kP5rT7$PPp7;$G#?cDdfMIM5AJ9$F?7:GY6BHkBk25&a3sa9J
%IN]WI=%2&7X(Xhh4Z)>@XDY#a/RemIlFGLNif>M_aCTIeD9,*,H&a@,"iW@YXCYgdSO4lfgdiK+WP)R)$[j7'),MUMgt.`"km>7h
%l:ejC_/04c6E8)RCM^'c]ie6%8@n31M#TP5CLLA&p5a$(BA$Y)>K'u8S)i"^5+"_.D(A_8<\qZWZQi"bIZX,M4(C^`A@s''hZCXb
%=HeHi!U;of][k?E"[rR"^_haZOJGQO+AN<,G&/?&3]IV6WU8;qG:)+RRDV"rMaGBL&5oe[ogApEe[sm:n?L?gfKNqL>)lC*iNbn&
%m$.o-=Bpm;Y<n1O=A*gdl_H&mK1<@>=]9Q`:F^0*O+VP;h:<9q]<SSss5^sO^Dfp@nUfm4-<eC]:RX4%Url0-:H!,VG:(-Wg`MM*
%R5])gT>-jD@(e)I"'1pm?rI:bH*A%cg%f7i$i&+2O^m"fE"ZXOFp5_-dG"V+9\4hjJOuo[3RA/pCW6<Zpk_:kSpW71G4beKCRYgZ
%jZ$f<D#.u!`qkGODLL)ZT#fUe)K?4I9TKCO*\FWD,5*i-q6m+NidpGt1cYnlPZ&dT[X]5Z4FHZRb#c7h$[lQ!n:FY$,_5%FF4J#A
%#`gQ'1jWB;SjJpNm*</+(dGH$8f;(/`<M^lV])eZY6_:?"chm$Q.h"2a`?h$%8;HQesQ:4;t/&$h&P4,%V_F$m.T^q,ui"=8q':\
%k(h[!/neJ1l#pKV*DDR@-8?)W:=_g,"mrtKVeW4^/-Wk%&D.gGQ_LTbaJrV&rqF=!cdM$P4omJgAHNKcl,DcghJE_pf^4#n"N%k?
%rf55RJ/1'?M8Wh*<a(=m"Q3$;0O&N4;XX4K`bI*ojk_QaGUXb1%KahfcYq@W2Z3@rSsi=MT^LggK5)H1Eft\-h^<lWbmQO.Uc>8#
%pC"*_7reB(\SLBWT,ugojJ6LOcglY/!2]XWXB78\)ite1$#YS_P'@5;P(&!i>@QO.W='?J`T@noXH>KC#]Msa=qlMIPAlSfj^[nF
%dT&iK((5?9l6<b-nG^?`ZBLC?K/6haM[OC7N[T%mmmq*Z"D\C<aXt2)B=9ghe-i[aV(H]Rn;>OB'WU9mN_1`D!7HTGhI/VOe>amA
%5e57EBr/tEDp`:-]sl:FDrW0<p$.Y:1A^]om_:Mn>$^SI^i<:#-t*.++W]Opj2Jp5)R]-T6h84:EV^%C55]N<:F)8Oo7A7U#(?pK
%T7Rm[YSb8[FM>"&q]drHDgX1k)o7":nX':1s#&t<MuquDKnYfbF;@(a+[1S19rT3ImlKA&DK2*gMrA*hY,V]f`,ffh[[lbg"rrIT
%$_^lLfZ_4!idd"6%/O9UT$V-NCVeYTRuJg]>k!n;J&1aE6Hbd(Z6$rUBL0P1K3(6PLV(bIXDarQ;6Ub5&mRI(b$&3]b)lCNTjfZ0
%[bKj/e>D5=+Ek'c21A&dL+D,5(-CZ-pGD+bga=u_BO(*Pl,LlQ:Di\/iZ'(DefiPhG\NH/='g''jbui'!+M-Bb9`tV*%9Nq<W2([
%!%T0_O<J[!!rhtdp.L9\d.?LLD0DEJ\hj<Hb>q3?],kl_1duPcs6^5`d=+NdGNQEgQYkodeS(mHNAb:hN6cn]I7JOG_8TRtXPsa=
%=;?9nV%b8]ntL1'PT1Aa6n]j1AaSq]X2Y&,g-_"HOgf%Eqb)3m/!I3q5_<0_&CS;O\+&Z7iV>*C+tit+HsfsN#4(jNq.H)lIV<<!
%mS+#APf9!eeZ5m:IB-p0iAA2O-hn%Tg)/+n"8Y_@=U3]g7$#Vharcpcj/^W\-&TM\C#8RaGj"dI1n*uRb$lG+?Ak_PI^XKq*l?p.
%rH'T^>VC=U\0J;2KsWsmk,bXl'WG0W$5QNk3@F&5aU/e]K%WuB5Ecg54>>`o[!sDQ=@`aQF7YH("Uccq.&m'8apJn$+3oj8<j7"K
%T"V1m&1iG]jIdCrWKR^kPR%]ZmtGh6PnJZ,gfufT==Fh!9'?ZG!\6h^,W[TJ$`oQubY!FZjoR%Z!h4/Ji$EGqPnJY1YdnR&YYlZ!
%QgK1:>[XBr?uC8T-MmSp5a%'>J_NRP&,:Jb%c!"+<NVKbEO%$(!Mt1m;4,K#k/5dp<;oHCTn='K:KB?%T;8:p1CkBpg`9,qi&Qki
%-r`Km]YpS^WSs#Y>qRX//LB"7]']/MU]_+N#B%:,-+1<eSR->BS-K$+aJ<Pe9p,j+UV/4&VeMk0@q=WS42O6IKl)//XtIV&R4P2n
%`(,?gTUg,*S7ToG$/g[7=pmZ/2*#t4<cCdDRWYRTTK^.YT68'RVtX*=`SkoD5r/R'lN)(UHd0IRG/\NDHnX;0BERS5qa'.@F>J/-
%WV$polGn#>``D`V6h(SF!u[o38N7MXda_3>Q/YjB&pe+r3Do/3k[h]T1a&L6J\\%r(M^(8B27!akaP9j)8o6?6JGjGd.R?$K;#+$
%T9*Fe1l=X!5I[I8%>s6WcAphlU/;,R+InS'A1`7apal!e5pj18n]3K58($$V2Z(eFn1^;dg$I"i2d"2)\;^6Co.]Leo>'a`iP^(i
%X;?sDhM89d2`YY>,BH*4HOp1=V:RIOg7')>H<80R_It"A^3Q^d9pFcE8HBMqk'h[VjaQOC^3O5U''qWcbpA3+Z<>\_'P]O\Tpnb_
%g+U!9ntb0>S5N./>m`%RSG!ZfRSHP#F6TTc"#O11oe:"(dc!hm#F(dt'&cPY"PJ4+Ms(og!N(RAQr;8.gRXiSlJ_!C@V)`;7FT-%
%6&Q#jSZJuE9;aUO>*+b'G=SLZ,A&Wd:YgQK/_c+>)D$C\b,tjITJ6q/=ZF\Y'UdU&S`d'_p@Kbu:;D!^?m,6_S("?N_H1Q#c5R$M
%7mX0hGhm$CU`9%KcWXcX?Q"GKHT;N>oO[@nl=M^X.'I\/RW4irHNQDYkF'0kL4NTeSPW]%'3gWA5`E:tXU@MOM$!``dN_EjB;Zco
%a<:"$^^.S+af$&r=%%hOFGkB?/Gbko!]Qt^)'q8:)-nI@PXZi6bZ23:j#RddG.uFV?W"FUmao:`/,bPRU4of02YjhlC&Q2Rb@t/?
%!e.IK`+^UHVYoOUjq7hu22R4J`7t]IFjF4V[_.TX\4"PT`WoDHApd+N>LqjH&#A26&SDQK'!@F5S7Zm1=40lnSPIN\+3=V`"F&^?
%6DC8a**/]>ZoTq3\m.ju!,/b:+bm6J%C;A%':b5?>IU31f)EaSoVtef:ste!C_Y0e,_/^kD2:S]1urs.5/g,S?CCFsFgGaL.E&tR
%;;s:!QXJk6C!LN/<A$>BE+F$B4\<NYjl:Ftqn_,79Qn@:73PFYCtW?]7?_[F=PCm:&G%hb2G0C[\8cUEpXW&[TtdB:/C,F%m\'%j
%cL-XL,(%1hY?YC:>[1HPO<H+Ir<dThG?L62_=-<&#K.U"!27e2pOMbY:V#bE0jJA,)I!6[]:!XG3?DSRW>q?8(ljTM4?2afPjRM@
%O1&NFE[fbc^S>(][,[9B<kski%LZuP]2QdP5!B]dB3@VgkpTc`c@@>(`EkVN-0%RBi`o$>H\qm2im_+!1f<s_1U!#?CFqpq-0Iu?
%RF2A5J7rnW?6!iH%'?;i)ZSta;<<DlhHQ5e_^8B-:s,@@GO`p)?7/?#;qNE5Dnh,f]CTnmC&e!1fTen'aDo$1/usrof#,FU5r(-[
%:KrB'8r60]iTE*AXK)lE'pO(4]@j:l&!r$em6.[AK?G=udr7BpUr(-BBW$mFVA!mKTa`N&#45R4Ve[7*;VnWH;VUUkg+e<oSXlj`
%r\+bWE;2"e9E*_Yo*apjRD]n:#`%pfXT;<N!(*S_$V//*#pF%P&c)YO^.RP0D*WPkC/%]]?UfJPHNYfBr%dg^Mb]*7QQ/I2^Pr(K
%rM:aU0-e6:/YF9(0-e5+#H']+7(AJ9-cp;pU)#<mI[p>MTh(MJV4L8-,)YS1WP#u7K4>(.Z=h4J?Mqm=1_(nRl2;Ve9-<BUBp=4c
%"X-2/.a981$+WfK)j^a\9p"Z/\Z;u58Jd_*<F[s)`I!o3E:IbWXQXc!A.NjQq=U<@j\gmt6IijuoV&OE1WMmp0.]P"nh"&)>R,i>
%^mP[j/"F&-3>eiG+5R[.IOLFUa^ms$'F[P7,g:KI[&<eP*K;=3Oj=7ProBBmCQuGYNO+2krGfm;*e_2cU)YRt:h%(ZHU>%&,sLFr
%pI\&SYp'X:f(>?^,I<*0*\KYn2aI8_@?kqRd2&uZ.XUa^OnaCn"gE[2W6%+tbsu:N?puVAFbOlC,p,h7L\-;"qXCOeRaZ!2apfga
%ft#,,D?__'V1&3'=.D&:,sH_B$[=1,on-JC0(CMo>Q/>9XXmOWd#/]%::upchq5NZ9:Y>+5W9JtB0a?qj=XR&jX1ZA^au^JZ!+,0
%ol-,"GB,gtn;7kG]#f1\gV(:)F1F@!/Q12oj`#TOGUpI!$@983qulDdGG$$,PK(a%4KRF+@UHLUW`/!*&LCJXPq5RPkX=0j=P2Pk
%[\eMYor7LdE!fT5pgrMF?Ci&Z>YfgDZZC9N2c^&",5a4e)i[<[KO72t$]72<KHDYX,r?=s2bm"">*^'(4]-Z$!aQEN5(#CQKHf(+
%S1X5kKMVgKgVfD9r?EI"6)o`n.2NMg#kg3D%/Z*=:^$Y7T_[b;-isi4Vk%FOn'Wh`p,==eXpH^4SMhBQ&HW/MDsa/(Ta:0%hAlG@
%67@F9DIRDJrfIbL&3n!Erh0m\&3ka.i'.uDOke]8R1P8UEu2TXKi!Ht#t/iV#_gJk(87KsDk'4EMY2C^l##E4#sI#=50EN;b;6Xg
%hYKFYoG3D?A$,3p9Q,ID7-j^udi8-B#M-AKL+:c`VWmK5RGM2mk'63]2n^:a\#%A8>CMKp['BtPN;SFr7T4tI7XfCk=t7C['%q=,
%q9<i(WJU,faDX0Z%2"%,q(6as'h.m@%8W,D-?PZ&]rij%:C;Y3>Vc32,b--%M@"1Mr^N=MVjlU6m;Ehp1gkp-)Zhr)eO6=&i(!*P
%;7QK;'ATPbD,S-5qN<"@PN\qXrj8`glI$hBaD!>#p^`,c:#]XJIkF-Fbe[fVPiG,a>aFY>*$SpAcf=AVj,Fc(L-EmX3BfiE131<o
%9kc-L-m=$Nkc,35];GVVr%0>]e*V)Vr,!(s'V9&p)_f,DJgp^&Iq+Pt4?M<uIrftbkLe_tN,Xn_1Mhj$pfNJ`r^OF<s)36kg([&[
%[/57qr#`]YbhA;W;D%5Ec&U%\CkEPtc-Yh4o:@W0[pN]=.V5X7F(XReF8\jU3*^PgQ).Am8NiJ6WIBo+r##D"6PP$CS_:/o]70>r
%mEBb@]?TR81YT;iZla$q[VObQi:9ClRI/`&$brb#?ahgu=%)6Km2NFJTCScLh&iJC^3s(`,(>t&L$ZhT1]8`hlK0Jh;2BGcBDPK0
%I=mmHkPA&[IJ`fH+6Q.>D*Me46US!TW1OWhc$q`Hrs.8ee'S-F/H$Z(hnNMW5HK93!qfW-l2O$GIR1IBrHWiYkHk!%']mZMn&dN[
%f-iWW7$mq@<-%gl;de>gc%>DE(*$V`-[4B1*rjXLof@,BJ\u#;Li#_;rf^b4%h5S^>W_\(P5Qo0RrKqFYHn!Ng1;a=TY'ehbm`(B
%PV6IS6J`fud-\oOerjtqg/nD>7J+uc1IH91Wiu'ZM[Lc'BRSoH)g/9/EBO=e`fTe[/FLU1<]rAE,/\;N51@RT\IIqRA$(J`DMR,/
%XTUQ+JF1ZYi:Nd==&$HAWOXVBH>3P2O.0^^:%O`41%)M\Mu(]nl.:Km\Vk94h9GqS81e*;qjhGM2T*9eg+L&TY]JW-9l_Uqe$T_K
%0(RQ)qRcUKLZ$j=#&Q<'3W<,thtBg!c0/ge+0>uRQ$2BB=s%V7XVD;'C(/a%LG.P[6Yn_ueqT)9p='`CLl@@4r8m5<kZhW4ESe.)
%SJq9j7-/n<WBsiZ9ZNWlFP42c%,^//69jFel>s=6kG\sqg!`@`J@GO(q)UfQq#:6b&HbX5]X`F#d9";O4SmlBCA-+IXV!L0h^\*,
%>T++.f\H!\W<T[HPN[EHEF0lB&SSAm?l!@l'$g"CqutaDk%X*EhW2h6lnCB!o@`atn,Ci-BVLPgVrQG6=MO#XUK\OF\ATQJ2EVm#
%0gp5[1ZPDS#i<.pm2#017bp=+LJ?sO5tNU8Ys3_Z6FW49E3Fi$:S46I:djcuSt9<GX<%<;o\mc-U<EO/bWe)LAXAKIQdj`ZBL(10
%?MrB8dTp=TCCON=qkNh>VoIige)fuAiPWFB`Xr%BAo21kd5BKdV>#uAGZVZ%;mL>[c(tHrd;C%H])Ud!UoOu\O8jOrgGAc[JqO$2
%$9s5+q=nkf>;><u\rrNMqH$bPoqq'(Q_`s.Kt1r9'<3ar<+W1.WiP@bS`s<UW33NE^SOA*PO/p2dor9!!OcA5[e&LfZE&JJlf/56
%LRQN4*WD,qOfDYR?=ha'?:]e7V+FN771P`I.]_Z]jG;Fk,7qiB>*e7SP32:@MIJ!0C8m=sAaWo5]+mb#$0eKg?ijYpJPJn.4,e34
%>R)tb3\e^Q.M>W-1$\=b\)nTM'_4akpU2CrGs^B;T&W8!),sarpN[@2U7cpCV9>;MYK9WhBO4-lJgJK''XP3E["<o#@LNCE<7hGO
%"Xu;=U6os,9oXd#$qht5Zu@6("Z)V[PAa@/&W2/ma,6-hKS#j4=9;*@R/l1,'\eNsBZ<#f@YK4VRF0&D-jXG3DjAg0'p<&D$>'!2
%8OZR9:_:hs<\H_60172q(3+'l!J*Sj=%__(EY-2^bURs4L3Xs:g8*n#-jZ-I1FUB!DM/ooQ+/je,^0ja`:+@=APrX7T^HrFd@S/X
%+lFACX5Xs'flj;.C%Dpm@YO3FVDmR%N.E)uZ.<'9k84Q":.T)?i>;oe=:hhiEX[V#idmbS,7qgLV`5s$],3uQgqG_t'+kLZk'aAo
%aCrsj-jjQe'@EZgJLHgG%@E4m+/9rlZ=*+E'J3XGTode,>g(,8$C8-hAN<DEUEGr7JYQ-/'L;b:4(g0Z778O2QF;b)3"hu/Qj[t-
%"tp&9AZ%H=^_NV>&:/[HBFSnl`!SSJZLK[O;9Y)o3GlA?MLsQj))b71-jg`-LsKbb8#R(P>8T\cJm^#Ef*LPa;-F`&3D0K91&..D
%7Gfmf;:'(<e7aH\@6!K!"'/qn3N3/l3\e9EQF,aCW-q1K-WT4Z.g-$=Xu&jd)^C.h:.Qp12/PSj8h)5`=^R4d'XZ*1NjN,O@OPc6
%?`Gp5/iZI,>+2_W)!JoBCbeRT2F=Yj?sTS*;j3C+@-B4WcAIX7.$iT=cU1S2ESWQ2\'[AU&6&f+R;#t]7DMcp>11'Z,o31BS#*"6
%Oq].J;PF/Q0#008P,$MNP`,dFd5b1HF4:Xc2TtHH,F"-f!0PPCTjdRdF4Q")=:Ma:@VG`Xk(IRAF@>g.+TQ3n!sjJ[[NA"6/4'['
%8@+7Q#mNFoPF>?C;J+qh]^/f%Dtst`BND-9qr&[G2VXF@c\t`<mf4R(1dVLY9F\`Z]Jr5Td#PJ,F[TVFZY@Qu*=a8D/tHaObp#Ut
%I887U)Qs8e6p+3.i#/:<BMBbTEFY6c!627?.7P]m\fmkIn._iqN`7_HJRN6-BKO)Xi?SJW3L!,kL2dW=0;h@n(`&mb85#dgAfjN?
%0]h=A!Jm"TMN0U9#Y!e)H8PD)*M^GQp+?b(p[#RK!^%L&UG+[U^ce[Y5&fq)2Dp,P(NBV@\uS)`gae$:ZOG$B]N9%Pfg_Q6Ce`P\
%>D,8uWd?"_3r."Q>']5G!NcF6F,_+NCW5G44gU[f#!/6.p1Y67e.TU116GHj&6LEN<=dKCH2<jb@fY@a0j*WpphG(C\=q1%A<a8[
%B\bR"1-hi`a?D1gIN)a%H*X4rnBAY#E%b';:oIo#mTgJ+2M]jX(=GtE@&.n`rd\53NOm9102/Uh>RnQZ5U*9LX]20oJnFc/7G.ij
%c)9KaYRG(K=5g&6j0l'aRG2m6Fk+.$1RnGc=dEc2mO<P:9<#a]<s1duS;A`q1=9cs]"H-1l13D_3>JB+@J0he;e6lM>5L*MHo;#A
%5u(C6L+&V(&lf;nWB-uZmXrYSV=[P5?2(PZ5I'mEb%eGNM5lALoeKPeVb.)kghAcU[O,cjI;3,k:b9uB<??h+Nib@'PeobdFNm?;
%08<oCGcIPY1Fi>04u8E/m03DeG!PZf%N6,ObGl-elJ9n+[-"CGElt*pIq7LZ?D^`NV9QbMWhE)m4.'\Y<3=L>&$9*E.V6e!VcD2I
%g6R^nX/6(!:`H(-7,[^q6WTIB8bqPmcl!MHLH8:4YAst./Tdg59Rd?7##mcc7U">W.Pk9lXtZNt_mp30;S$j:,ee[(J<_Hqcj]-6
%._U`CcEY]^eOT[3>I@\G+L&h-JLsL"@qC7(P.FQ2e\dX'Q2\IM;cT)-#MMCca1N=W@A'pK;$71&'u%)O_U]?5ZQeTcYKeWRjY`P6
%\uYIP'_ci^j#Kn0C+If1SE?t_jG@rJq1gJ+TZ>M_GZm-U@mson(:C?F$2`R%O.+6Sh]X30!l!gB&j,<u:bL0j7Keb\O<`8;\n]9G
%EWG+2KX/0$KW@j`H*StO9eV3>R2/)*J:lNf%s3r9(#eg%%dDN-XWC.L6%Qm15F3YNL!<D,YL8rC#,@<1%,N6[n"3IkNZRGH22SCa
%#s&UhJ4_<)B^(qbfEEZc9NS3dh\)h&ZS3#f[SKoSPn^d*`YG*GNMfY2<MaD"687Gj$<5S]pSg2V+::lQ@1o!0ZJnO`cV@<i\UqnD
%YO%33-n<@i9:M]`$k:MuK,0^VnCEj77AlC#<SAn\2/frBX_*?&Ct:YL*80OX0_0M9BQiSBNTRfZippGg6)3Penk4W+ELmCU#_qsr
%8etBZ)]^3Q>(6Cn.j]m\Sch[MKN(NbP':^g6#RJqgM?sW*-PYj"V)m8"A2,]l"o650joi&9,(.i<n=Qs,7QmQhm"b+<36-3$WJ%\
%)G*9L;`BXC&X$-o(\?q8gVA[3;:\k\I(aj1eOqS'H"H$Y2f[Xd!.8fbeW`[2HNYAS!M#sMJ[0P5ktc.:M)a$X7juS-E6=7UHVY:.
%Yj;9[:oC`B0Z9B98]'AR,U6RVWb2Y$YtRIf8?Tfr@>[mqp9[HCNm!9X;KX4p.g2PN@7rgg#kSa`L)U,UVS=Jd(%%]\k6+uKo"krB
%iXE+=73Ru$XL_Ft>ePmi8720R'NH3f=1HLZV_+I[9bOA?+6@-pdXjAk.cmrEVkaUsoVud0$<@oBO]&U9W22_dcO"-t%L=Q2/jN7X
%kf!3m*8._*&oMScX,oQDRrg?>Un+:0<@=$^N!uH_bhlQ$j6_2s]YR/23E1^=<<N9jL9sZ$:#11_7J<#<hjC:e:N]4G%YQ%=<U,CS
%n@I&orrma<.;sQ4,JN^g<!MK[/,endQuq1-;>L@$MD"C76]NYE:iuu96>*cQ$XCACBk;gb]0-HFR5KVQAWT;PcNReI1[35uH:pSF
%P3\s_gA0$7F1IAJWA<G6os1C([o543eTmIH1WYT$-.R#got2amX"#?Z8,AN'VhF[LGU]e+W;^iRKV7-LF*bM.*R\YSGc44[9r^Xc
%<;-uQjeH'OinCB9P3^IcIk(F1>Y@O)P,Uc'+F%0oKECb5%dGbe#cg:'lHqse5Q5qfl/r2Lag_]ISKS`u5[F&,%omL;JGbM$=82OY
%+[(FiU!`q$E@.A6X.o.qqECPrMQ\#[L>M8=Y(WG%ZeaLNB]3f)Yf;eE<NZRFQ[nq3.`\TH5]3]E8uYl@77K^<fKP][pZf/6f<_TU
%.Yaa<8tt<*0#(@_\2g*J;.\[$>\$eQUkta*an(fj"aMtj:as_J#]Wa;Bp:ntGWc["3[2YAjn47U>1HOR;^,C37W^-D%FR&F66r+.
%ne\J*-7)>HefDJOMcdkNjl%AG:^aULe>eHLcQH#Z#UEXB'<PFdC!f8PWq\cA$HV\7MHI^m5t1<*;2@-)WlV1HKZl:c(?ENPVR97*
%EUb0d#^(a$_&4sGik<ti0upq'6%_WTJca4Xc_CLc'EqDO=Ml>_,*[hLBbj,TTdX$O`q`"FNC;7$>pPk+I3b8Y'>P;*O_C0fpd?56
%1?10A%&>%YRa10;W12</meuXH*$gY[3ccJJn,[.4UgYVRYl\dZ2.MkS#T4!]Mbk*UcTI7r@Mk(rb?-GeK];($Mk^`&f)uBlBmC=`
%M*WE:N.cmbJ@k0=TlbIMUGN`<011O*_d"0""t6b?-4\H`[%\J`[TcTCoQ+e)]SV7t%]s./2\Cq!:+,Q#V?dV3CSdom1!Bg&+k(%c
%9cQR+b%jkf!ek:r88umn\"X^>i].\\KSiS?<#&+O73&!X:.5l(%n*?07&!$nVASHKX=lGj;PU0(Cmj:C5ajbM3?4ehOAEMf`"e*!
%2.@^q&W21ke&)9h3(U)$AMk'n.&^@F,U+p1pLqZHUDT!Yd53U<7O^dX1eo5aC![?N*+^6!g!MA5Q\25t8p;M.<t9u+*pWm\VWTdD
%-e1'>&aBMRKYiSs:cM6V;AO9dThS0ZD28I5,8'3NHkZs0+p\NXp.E2k.tGS3W0E#C;2b_GW/?BB"9h]TX]V)aK[PYtWGD%fCbZaN
%A#FWUTLaa!Gb3i5fkpgf%,IU.:kV/!P".4S7M$9<$@t^'E0(;%"OG87.uJr8&n,Q_,1J?Q@.ORd`pDV5r[7JQ[p)^&"QL4P"@3(9
%-L<W["+r0\dc++[fg?R!8Dr8q3!7S^Qq?!_k+NUt\S534;21c@d4VI3l3)7JnL6jo(r'^N'=+rpXJ&%\bJ&s.8P%u,iWSh>SOK2%
%/)A&LA$fqXfb7Gm3er8\?Pcb0#8rRZD7kIE'=1,'"E\,(=3T7W6mrE=YSX`#-UL\W7HfEt2?\"$QoJG_&tp`;Q\hr.]*NP2fMI6u
%A]?tLK6^*)k*WSe/B!6.fFD3.`]to+\Ob.>NhS-K%9bbcOGBo7%)^id(^b#DFHZtVEH&4Jj@qXj@d)d)fH;(aa$:9.#PsfOQD5TO
%&G.\KO+T('&Ei']&uce#Q+iALeNU!SUAmK\dfi\j-2La[9P6bl)\>^&;.ujtXFPY+RV`Oh+\EN=826'^MR&o2Ne9=6U/Ht#LkB6F
%Q6ilJ,8::hf*#1XMU4U$AB=oJ3J_.5[FfHd:#I^0Yg&<m$TDeA]*?<Sq3t?<2F10T/N$uX2Fa\1.n"4I)T5K?1b#DQLqmEn$F]__
%@DqeL3[k.1N*',_+)DC)pS\b49*;0AN)=<o/&BG1NhW2*oJB"8!NZ@Q%gWNp.3Q@%Ne>179dR,4.;$i]GblBGLhR"VP7ijO-Q"M%
%UC^U=esp@7$,_Ra#du[+%hX\NhGqQ84qS-RY\G[]6Dpj/nRC5;jC&l4\[g7\,XNUfWFBHiM1C,,?_E[j-&3)t"C!laN1s]\`Q+,;
%Mbk,[nTUE;BnW4RMr!DDckm$tV-Ei=4YID)JuXNXEX[Y"53KEr@ji$O>tXC%.:&T>[%`MS:9]^&,skH_Y?WD";[fI2d@)hN>/?L.
%ANB@AJ3T8M-1g<nj^!NV?VJI:-^_8Ed1I;>S=B3\j$ITnFK",2+W80oaNd$>75>ji@e%#MK",EJ``Q=a6kC':NZGjDM1\P3?D:gX
%=?5S+"#c(3jILjP:(1o"KFDe.U8/U&A_EpsHIN71G]+5:&^YZM-lJQY7f^S+aMmctZtF?>-mpSlI9-V6-&3)VJdn1])AK%aX@%$T
%BkAq#9.M,Q`re_a$jMkL6d'_e!/-;?k*/nEKN<^P!$k>K,9sR]PTIgm$JIFN\Ruaf%U)[4a?`-qTTiZNHO`Fu(SAgM-pe#7dXjJ.
%3Jc`IGE%-\TEqZ%S5/:b0TMigF]5M&b:pd`+hkY?C$8D.ZjJ_V.1o03YN]R0k68e%CNmo^EJ-@_DGCN<L,2?hd07Rt"UBZ#O;;Z=
%!"KVDK^5QRrDS=)7@5m[-UOAseYuN+`b;U"@/VF;A"XLq>+6_]:/&!GfSFL$(L2J-)\cbGR&"Fu@^FmJU7du[@7*nN&o/=R0iG(b
%l3-W#I)T]N3oeu+lfkK##:g`Ve[2Z&N7e$TlH0AArW?7A(>Jro64qVb9cg(JB`[OFJd6s<c2hCljF]ugLa.U)0A:;4X^LK'-\uj5
%`2i\o(;*6N@bB[?nt>_R'e46CF0KA,ANgHj]!=<L%0!tc>:(4$;Wc\U;@mi4<+_D;6)@FV&W20;fZ//oTocTN\R.<_SRBVN:CM;2
%G4?jN$Ze"t`BD*IF$d!Mf.lRIPL$"&`0H^+nI0KCC!0XjJs8<dfaBE3K=Qpc'EtmsW6:Q\.-<i:Qq*Nr.-ABq\OSVG;:&IUMRNkO
%JtPeH[kU0F+PtY(+t2@NS@Qg&6;c*HT1,/C"?J9],kii[-jk9='D3nt&A*u2C5mVa*3K&TN9A]G:,1@9A+pk]S.<?r:s?+:Z(Q7a
%Y94(LQtk/H*d!h\rJoZK)53ub]b?\m<&mKk0_fBeS_6G3=`.4`%(N*!7OT,lA=cgg!PpM1::J#p9ZJ!1L@NCk6*V$FK@M(nM)U/5
%.%op@FkNCNZ!Cu3OA/S=/,WWqV\L7qK(p\:*UXM0EQALHD2n`O"d>9)5&Q:P&F,.O'KJ^OT$5m%";+89,:nJDhJeLL?qW!u=UX_Z
%D!m,=+H!"tm5"ea`s0k=ORVF(jcdib:ZJQ:8iXRmkf.n_7o9h&/\J9-N7]D=Dika-B]6J`6,!%%X)')I0_ZI&SE5IiPPaqr1g"dA
%0`n]A/;,4INM;A/@V%%W+cB/2Zpl)1m;n@+\$1I<R`ZU=_)1l>'8.4YHm?<A7DZ:STG=5eXUdkNiZM==V5AD%XsXKp/L\ScD@qb$
%$IQk1cU$R6+PR-;\"Y;7p2]*ZqZq=N(@XAHU*U'PW)eWcJ\e=\FLuD6FJu.n7GomZ56m%g$!&aBj<E+L\_7107VFTfd\':5LRk1_
%=N]:V:Cn5EmUrEl,7qilDAnedT--k`liNNIL\dkR$4+9?8i%=hU)4dSS3f`='=6ZIFBb^]76s"<7!Ul75fdXCD?Rmkdk76$l\MLE
%*2?95-,q\A;2e#BLN@gi7U&d])hBF"[X;P1/4Q2'?2I&a^BgY"0mb]G?2e$f\73qoZD]M[i+9[l"]\>Q8kRuCoMN^4iWN5=[ie.3
%KejN6"?,XVD&WOIBg[h;_[[%/gCg9Wh1A:T1lM]_K%<jf4[Ll\K(2TF'L;c/OGA+l@aoPZPk#OjTF12[!IQYRUJ=mtc6dKA`G@q_
%jG8cATVBkt:REgI`Deo8BnW4Ri*P+%S7pJu)M+YWO:>M.lBF=jR[KM2K.(>;n'lh^+Yo'k8P(35;9X?pA^1Jl#)4j-X"'ng!-m0l
%V.i@]NA9_<>ci*)k'D[ho:!2<3/0cJ!C\:I&4/Q;O'dmnMX(7-UY@6[K^=%"7)U='K5$UYiF!]QZqma0c('LlO[NC,',>/5&mB%M
%J^%571iQkTq6ktc6uMBN[U@?'67\q9q>;k_:e7t#;@4$55mq-;0FWYW24HrXD`C@*)_Ft1,pO*u.EdaGNZ4\;k0aR.PR%O%?t5lK
%Jfql6K]s?m8^0N--&Y;3;1r&JW5KmLe7'gOgSi42-,soH4dcn>Jo8=8Wh1Li)!\?O&oe4s&B3E9bbo"re9M8nY+67mJZR*]'r/]O
%OljmV)5/IG`"Om/+V#.;9nq^Z6;]FR2aJ+NQ,<h"c"rfuaF]mS]5:@=j@k4202\b(ll>I['U*BY8rOD_'s*LiN\6>QO'!Gl9lR0O
%*,2Vr-;BJp:$]T1?1JQ%c,q8uVCW(=K.,k_[.9WT#]4n.B?J3qNe*9jQ=M=t+O/j#9j,89N&IfMfWI8CZT/VTJo5'95,T'fc/@n_
%q<%SeMLp;8#s,9-_.N2i8+SbRMLo8S`X4$e[1N?[K(TedNEYiB-Funu3/D$mSNG"_KK?q-P=lLFJmjk.8r>l/`#<?+4t&ag@%3D_
%&aFDg&jd@b:(6N;4t@>@-to`#4tX]=>KCnUaIV:D/=m1m#R]Y[VL'Mo=k,(\Da+;o(`"0^(#g?n\Lh+>X:PWA`OWsWdB!mL;,F]I
%QQjeai+`MAD0g(Qg1gud5m/>O-(5@%:_^9C+[45i5nkj'9_34boQS(/#Oh+&FW/3p("mt2KVG,DBYc'C,*Zb$Q*;u(6CjcT1dL2W
%)!7&tlb!c6.g7L4^1;q,:8i<;!=)IQXm'LgLdGNtJ_c`N%)l&aWkE'e+@:)G'C@,n,*WM#P-0%i5SWf'1NYp:8'(0?[WUDD!<[+f
%V>[4V3J_.CU0tMIC#L&5(ldEHJ2/%(&L%BT/!9BNiGJY'=]:H:Fa1H4;*91;l?Hn4WWWVr(3bDl1tFuA@`]oFH%HTJ%J+J>jP$A^
%dmKo??/3Lu'Z>85hK0SM/.KLJ\Wm2GZW+/V=\F`OBCiq*'Xr?MiiFLhX2O/$(eC__=YNWpKKB"5FWrb6M7"aWJ9?N+bHl?i8W6\n
%X=W$P6PtPE=j,SYa+B#I'"4&i#>r]'[:o7`6A]E[\Fg`5c<1]3,NBV\4?sHcMrVX)-l1-6V2EN$q,o"%2\_r6kU*s:R4F:urYHm6
%12)E9:tffl8V@_c%kK5>X"=U5mNYpd@Ho<B`!,7(ZZ%:V7o9g6lU;Ig'QY<K-tkAe;uq6sn#49=X!4oR3SY<U1![T^]'c<gWW4k_
%OEi,&>Tsjch07T:A/3"N_1;nm6"@Pfg8l9uMOC=RkeqK^cY.=&kpD=oi5)j7:$\^sWb01-7[mrVLVuf(%#%<jSc)]T9]>%h7Q<l,
%FrgdeOj@N+BTm8Nb\+4*e-Xj>/c&k4JWS\QQ;;!FXD)m7cJqa0#].)sA`Ka=L,gCrG"6/B(kt@,St7-^9;QbG8rWU/(%L&n#G%6A
%Sn)n@&aG5tD6_#he.o'mib>ZDU`&mYNb>7LMLn:OaX<*L(!aQE_D*PTcVDmGfbAUTjKh_eEUC,HEA>FGe'>q?HF@:IFHJDXo9C#2
%6CQ4i&YquFg%]A_KJr3C/N,NL=,]ujbZ^p6,*;#D[%u_`N&L(q))r+n^GQ(`@`m`-.hUtZRnclT$3<Er=k[*DKG8u6,]>Uh'qmo@
%CS=sTZ3O6#[9MAuTdV>EdLtj6k9(Wu@..neZ7sXb5HWC4'LSS$h6^+6P$q.mbt'gM@r+"g<"6&4$%oH_F@chWgk`.4[X<`Na;\rO
%U/'B:8.eI]LecWN7YDE6UJhp2'VQ9!!ha*F:J,f+Z;$3hO+W)p7dh7hKRE'L/2h(,UTm_GU(76t_cedp*he.?CW/'T60.ZUY(ns,
%#d#W\/bqRoE/ka2>:IPSb;`*F(G0nl*CiuR]b0R!*$htX(5u*Z-jh;<-BpOSCd-*RgB`B4BtO%5&K7`ISP\'"!n!_oR2QIr`%KUI
%h23XN;,FfGI=119UVnER=e&r[3odqsfj]mE7mU=eL8I!?L"nus5't:7kESRG5!Kbn'^ucRbgRB%`+&l+hP37ENhW1[1UP.MERqqR
%V;RBn+H#uUa98tJ5Ut)VRPD8k_pHTfQA>%!ZNq"H/!qXkR:7!?q+id:R59j]?][9"<b`5(Jo2K^c^dL<1\g96Af8R$ds;@*kZ\0J
%/&,SoGsFRrS),*QZCj[ITo`Ja'htoPZl.Z0Bc>Pg"9\n^m5GiVc/=dtMkh3@[!lu>Xsqf+:AIjDk8cib^sPY9V&#aI(hTQ,g]dkk
%=El1m-sHtI-7W7]pNG1)>$))8_g[MJnspW4&M?>O,lPHhZLfag^QH5]_fkct,CQa6*F^$feIL*GICdTl%OegF+o&4?%(\DtZL>#)
%o2=tBlb<QH_KNotX7'J,7JOk`VBeMUh-R.2j8HCDECp*f/@(FV^^?T(j/0&`o)MiBS.4rDb%a]b7d<"5$Cg?HOJSMQ$WU'0.72fD
%+afdbQFkleQ\@rA(e#H'CX9\*j>R=i>em-5MN@dP2-C$]g_UjWgqU+7<_QP2r9l5di&uk<e4sHIB.*0h8@u^IgM\_S?Q^h>(G"`B
%aUEmur>o%C@7.]s*O!?KndrNt;tuW)1-g<-SBn<Zh\@Cuh"q8VWiQmBXA;(t7d45`<kE.#DZN.cEDa:?AEi,p_^Eo<6hS:?mbM_@
%@H2AeG>(2lUthb&feh6-jMYu!YSR)9O8a4^T%eZiX,c<^Y9B97\PMb2GC-@8=+-F.&ou3IIf72fq/dj!%k/u^PsG&4GFu<8;YiM&
%?Q+T&I3q"NmW\!GPm4PA)2SiW@!=UW,,qV_9hWI>9BEdg4tKO<Vm,VKaea1bOo==r+ACZf<b7pe?lu;H4@rm,mZ_Sa9t'Qc:C0k=
%$fCAWnp9d9@$&WeUm[Q17U25Tdo<^0drL@iO!7E_*^uZllPM'UlNsEIh_GTfr2!E+'7*;CrPtJT]DhIi^cIc6SQ-Wh=?opLYl@+*
%/)kJNo/@9>k/D86onTHQe+:K;J%n)DT;ShH,Ln[Jrq,1>o(Jqr(sZO-*>)R%VB`o<H?89gh0Sg7Gk60'qp5H`H=d'6o)-qml%USl
%pb>nan9MR_=Do%LPT/$'gZP&i7h?\X*'PC[O5AjYRI9Lj2qqD&D^o)L*hU*9'ZipRXk>[J/q-Hk2i=)mZ,^$hBPO=2AuP_(m<\$I
%f&THsnYgqGmW.=G9mSJiBBmI`h0#o-mJSjuhnS(+Rr'2VAUF72dDEj"fTg`@;(m,8VoH33h@J//=.Ud/%Mipq\_2I8J%+"`h)k<i
%IteIJLG,"_W^lO(+!5qk=knB'[[erio_"ZjnE]0-Bjk6Tf#NP90@!m!bE7^`^;a<]=#5nOXKLF+b1Dh]pYu^&\5P&8QR<a8H=_Ep
%ij@)@LY&:;[mNT)qKOkCL9C)6eZ\i<a3JU8G8dO*h=$,r-L])F*nO,LG6=T=DY<NC&Tbi7q<e$JM1rL(bt%Am6u:c<%8Au[4Ufl5
%Aks)FHM+X!h:S3ekj(CQL8OheO7n1\r&c`U]CbT<C:s"O-Jt3DhcTgI.=IOHSR$`:+'SQs%>A$51-Eap@MtWT?nmrdI=p8^NId:;
%am/i&qSKmik\9[L>YIn7?VNeBoNimmrRn!k;aVZ#-1Z%ORg]2>M4qWECFc]40[O`Eme18bEq8F2UZ^X#),9sS0$Ihric4.(cd^.S
%j+Y=#`GB.6F6TX.I'RrTf<5DAPGP%Z3V0:69>p.IoD8=8G<6124itUs\(@s$p8WUX+<Ni)feR,eGFPQ$X24/Qg>PPRM:LDeo9b6J
%f>mbE'8%h,M&\^m?^OFYhotP[%,K&)qrZY$%suR6r[*+p1W=D0_);iUf;Y@F8\H*N)k%]F4E*J@F`f_Bh1L!smgK&\_s]g%@h0%S
%k-02u%S[rSN114,ajB[qG\J)@XW3d5]I]#_X`fJp1GL_/4_j%94s]:!0*6X^@s0MZ^&?7t0HiPd]&@UM/5/eCbk%GJ5knLAA$1S]
%<hG.?aDYZ#I:MEH0/nZ;']-jjEq_km]Xdkg*L`:B$EeuNS2(o=Wr&&K._0p!k<AL=lW5ApAm.guKPO-Ll5AIS<U,HLpN"d^_H^P9
%mX?%,S,h+F3PWht<sD_rN:91A$&l\DK.OkI+59+DH6*/VRKnjb:>kEJF9u5?P.Sa]qg5M=W21Dg^jGaN:c:<Z!&aMnL`B^s>/EVq
%=iA?sgaZ[dn-b-n:Ns"%eDb)Tl#qC*+%?L/(CnN;]rauYhk+RBYdmf7qYmrtouWau%SY1SpndJAXGS0G)u(rE^s[gdK1+*tA`8&e
%ZEblbMoE676.o@@\QG;g0#d>*S[n^:Ag)otH^$M$mkKl+mL`o1X:L6J\Xd.h0[`XhK6`EdG%X3YK:,GSIW0@5/7*Friom+@bJA'U
%SN@O1MBZMLm@/,4eolcWp1`%540Y!G-J`U8@^uGJ@YKThc36=Bn\3$iH(a"gKS)8\H7i`<kqW#5iSa+nPT4?hQ/_Sf6l$m&"n:I-
%`kKn!i3\f0k0fWe='qiY*oJ(*YK"\+&Kd\@9\l*!%kO'$38Ve7*oJd'8N=eDq6rhn2I\/CkAV\-QolB9dD7tS.l2B#:R'8C4N<t#
%/hO^n.&2DS?61g1jO;O:r4:A5Zh()$M8*p>-([4E[@tTZn+/mGEq`RZqC_e)J,Ce^_-q3QeOjkn;:B#*#KbuLpfdDZ+r;2^VCfPg
%d<D=p>hC,l#KgrqK=cu1?@;,Tp8=t107/W3$ZiXc?]o<QCJ:RE2LQ`'Q&m$XR(7\A=:[Ed=k3,OqY!1&f6!8!_k(>CFp<pga-LW.
%E-aseSmItb(H.Rpp=I_i2B+8V^ZkdNmTO%6H7<cV;f[2l0\#NBC#>Q:-A?S`@LV%82]^_FO-0n"46)C.f=`t']gAbqM7h]2p!jQ`
%a5a3`/,)D0$dVP?=,2d#DDT_dJ"F2.'P8_\RTS3pIZp9CXhW&fGGb(tea`GuEUrKa[huZTT?Dr=qm5@"m;YSf&)T>;Xjsg#eb;de
%bDJ6lLSe,nDQ:7DakQ1Mi941LoChZU2R`<ClCP3.AZs0FT4]K?QLjpId>Mf3R%@bqq*t!PDN,)iM4O'@U&ON1Mr-]nU,-Ji^+9Cq
%XU>Z;V`Qgb[m22P3'D)L0&N1hrf7/iT5GbM>ldE+!rB#l(k)o6pZ'ARh_J!>.0]`2o]!?_l=$(Hikt0TSP,g@hOd<;rIPOH*2B`(
%<rsE_%3J>'[TSAbG=Zk3<-LlULK&IgFb`q?89K\es6h)\MoDcC9Qn&'kVZ)m_a.=^'cZ0)p"?B^qgRa65H1\Io9eVW,EcBt#I3h`
%g\L@+glV!X&%QTO?=d\bq-)>3ceb_:LYF&a0`1A1Vitlc*E)h<a`Pt=`MS';@I2nAM5N7(ReXA$WMA5R,$HFV=K)T(_hkdGeGo"O
%s&r;1885``GNK*O7cTDVU75ND$#GDoOPo7SC-lH"(WK#D;r%:L,K\Vf[V<#qL]2op1AA%n<q#kTT5RNj>ISAQg!ouYB!S.XHh!bT
%O7*k7Cu:g=?_1j:F5,UtjS6hZVS<$,/i?*qIUaF?\$n&q.I/eaZX4[9<&1bb0_;GLT:)'q4_IO?C\-'R+^$kM58ZIm[aA2_l$i#Z
%L9X6uiF'!3o)/0u_X,mb]Bk"=@MBlidl5[P]B;A"A!n:JWI'=.2*H"kW0,!lGI(FiIPd@'pUkLNpc4gg3OT45aL)mf]!m$DoOc(t
%p2[:5cndAW:2eInq_0iWmlr+rL\kbo1sq7:-JQE,`,Oc,gZY-UMg'6GRrb>fl.4@MH2b?.8o3r>e=?I-Gk+tegqh3&f"G[qAbSo]
%+7FT3[s@`I_o#1Ee9<tFYh6U+XRs9rT=rOum=kP/f:P47F$4mK\K&e9=)V,pVP]Yk9gWb_cE;*@o`Ns;*C"o-\AI70D<Q([D&nAL
%CODFnb[ga[4It;5Sh5K$%KDXpN-@K1T`MBV%@*Er*t_-j$edGHf+Z9Zl[,VrDn["^R)c*:eT]\FWkQKHL-qQ&NV+6AL[G5c.Pb*'
%-'!=m"h,k/jtPds0;bEch=9baAqkH'(JN\+aQf]AAVF*scc_('4b(TtQ\J6'5>I$pl/c.[A7LHuRbl3Jrn`S8@3PBKf1\nd]+I#K
%?[j(PUZ14-=PPY"JA7DU2'hBG]`"Wc?<YZ@%[/^U*A862HOcPcq0M'TK@:b:.PRJkOFqKh6F%)^R3-@-M;ui$6Re)J%=MU`4:#(I
%krt_uJK:E%ijhp\VS"/[(Lj@VV>s<+<PreM5*^(q>W2;APo)]W`.BEI20fKJ5)$ICI08dqgmNan$<]6\GB4+l$HbY9\Lag*!QA?4
%)d$)t0Mn"1>Q[,rL[fm7hXI<5"r][=h//Z2@pdb6SFtoY3CSoNCX-6:GHgcRR!.%=6Aqe@WTftI#s%nQ-oHnQC<Vd3`>$Dd@(e:p
%HH,dhUE&rg3M!1$/N$u?2A118*&VGd$kcI"A8:u?NAa@78@U?bI[qei]2r<LF9kd9KXrni@"9\\bgSe;_@qSsf0"!X&ea,H)DM?1
%[PB'(_PE;iYX:!"WSE"*?:iikm+]0%i0b7?7L:`7Z,79?6bd5gFOF^$Y0:`MPAiS5HGGlZ)2HZqGag?^0+3)NI*,/%;[FFs8Z3GQ
%B+=g1_jfGoqATaM.C`l@*AeJI#/1QEonV?;"Jg=H,KR5?gDh?&=&;1l%#*AC*1mCW;]ANHD*AE(&r4jJp%[mo:Cgk:/iH30)qHnZ
%I<F"cN^b[7`g=.Foj+\6Gl>!qp@cbS=(A-5IAZ/1C3p?[nkEPAD/V!7$nh/kjZGYZ$6'Erio(h+B%0NM+^(5$54Al\;aLK>gh5gB
%.U6*RZ<SL9'reGC?=mr[Z<VE`OV3r(b[=U=\K0n5Xqg*\5*')aCWn?c%p'R?i^`lM/o7W6I-6M(RT)"l)EPSj2V%f(NTDTfI4I[e
%G>(Je\XPfGfR'd9X/Djl$2<R:Zd&.lXa4oKQ,_M!T_"\2oA5tVQh-,@?kH&NqPMY*oacC2g%O7q=`X6/Xs*P/C/7'C\f'!nkub,k
%Sub.'.n;[j\m*aW7'6@F,2;oOf;JHl*ql;(S\@:92Y'Y=g$L0WfaKb$45%pWe#_LKNW"RIr_'dUIrR1Qjk;3q\u0n$nr`+aZ/sf*
%=+AbDOal8A_!fo0m]5rDid6KFI"tUg?U9/Td4^B7jMR=cb-FD*4!ah2OSmEpgDuI7+o*.Ah]_e9P2@GY*KpH'P5Ml0rE[r<dap'G
%ei/Usg0meMB=1r$Qh=^cqW6S6W"$FgWOp-g9m1U0=I0E%E_d1i/gAD%3Rm5lmr3M1cc_#G^<p3#2$LP;q\)Q8q@uQ8hpX)pI#ft=
%mm+bZ/*-.BpsQ9DF<hs"Y-O'8^I.RA"NfR#][\2$*Ko;'q&PXU+o*.Ah]_g1.*5915J9-8C?k,N*./`Ek*t0[0D1N45=nm6HeoYn
%5JAWY^PqU^aZgKImOqeMnYt</#O::%HLb-TZJ2M<I;uW$m\i/Er`c[Kp!ipR8UgLdOSiiTMSSd5Lsc-8X.[9""8)=!I9;>e.s!;i
%`tde><p'CFLqYbLi7$Ybl7)2`?Qf2^Df8;@AcMSOUm`<PT)%86oOfLoIk8uCQG5PI4_%^*4hW&o404e>S$$\CRm/YSdIT?hIWJ\E
%l?NoTEq@jFM:'r<H]?S;otL:rnN)?%/i9rL8]9uCH/j!clfDrb3VBDWco:f4pAFc1c!f6$kOZ`@PF'AWbqLnPX4A=Cb(6[dj+X[L
%9,"Q-U)1s_/Q(><=auXK\UnJ1gWX!GamOl7F)*igK):<E5em>LKSB^pSJiLL?8N-:IVOVGpL?HjTF%!or*GlDqGb<kYKc$S!^ll&
%0XXd=7HSQS+Ot5'A:NOA3/iO0VXXctn7p`#/qc7?k<NL,QRk`gA2'/r\2o@t`DR[CIgXMoL;r-\JTNcBQYZqkmE`S`4bXLk\ru),
%?pbUCGOgVA!@BK6,n_P8-qHm[rW-*J&f=CN,19ClW??E#=b4F4b8UO4+C,nh.:bW>pi[fN)aH+7Ur`+#6;Iajl\[odj2$PQ?nk$"
%T;mc!_.1^HL4jS4\u#M2<E5;L\mmpj7l`\]e@pQFZrkd-OMH=)gOFj!NPO6"2hchJT;H\=38ib3!Z))LR(ciQ?k3gLDZf_%]9PN]
%3FarmVak6N>E\LZ$TrCmKJa_V>g/r/apV<(JSR?a175N9;d_?!eTL#;I"k'3]9atJL%/qDE#B(UU<)bR$7dcQEI#fq;0NI$QE0?!
%C&uR%X9B2DXLKOR#=^)^!LLXT'enN*i,Y*6@LAF@<3'L'_(H#PLZ_N/=2hO.i60g&^&m0rQcOg^(>kB_SQ!$50]+rc&*O(\`qWOg
%dD;uC3O#Pnr(4<k`ik86GHf80n/!X8M%7$P"rGaU?W3"q$XZ_eS&^'Q(0$?U5$sA#\c)/Gmdb==-6"UnC5oQD?XD&!XjlWJ0Nmd9
%jPns/]m76`BQWa_:3lb"g)*%jXKThi?emAp++=)mT3E:@ltJ"XXh;M:$l5s>>i*beT3X*V)G=_<f-[;s:,cuUD_K;_C07HtlqAMW
%:K/,O1$lTOR+VBFCk"&KIAk%'Q`Jo$S[*%1WOJkWf?h/)Kt6mncIU;(gY]7j2NATDa+mq^>&UcDD=22QI;2h*fjf'u1c(`)?d+!^
%R$fX\l%`jAR&.pNC,_9qqnk[u5$MY!Y&@k&FHk`g>^hbt2NDp#nT*R90S#uu3V9nsVu#Oo^PLjVYHrL43-2*3?T5\;54`JOSUOT*
%(p24k'MGjoO4dY0cFJ4ZIQSMFPj?$[CK5l:>gj4!qj6;1bL,srp2,+aDH83)@@aTZ`S6s6iOblJSUBhJkJ,12oe4/QF29h"S8s&h
%>L!k!O/II@YKuQj>9'ck9t'Vu6gHh@rkGB(V`jug*Eq?ooc75nU%KF0hkB]`>5rBdqIrs%a;WaW\!R&6+CA<uDR5hUj@i<ekF3.L
%=&hI)]p8ogq)"X'^&FPX4l"lSS)(J*0\N`'!gXsYlMW7LpSSO\&p_)>Q?ie&`Q7cEaNpXSfrm[,@>jE(#NAf]b.igD;7c2*K)Qg[
%T1\jk50NQVbI2-9ESktbrdW8c`R(t/n*p5bcgUB$%aXV5r!q'AnGHXWkGp^l3<'2V2iD^jqslMSbpT^$Z2'TA4RY@[.8C@[D2[A2
%]p!R#rT$On]6(A,NgBtik*<YHP\[ujgO6'`2CBSGrU%ONEm]=/6+pTOYC7P=c[Q7ms1OD@,*pQ!s.T;jrCn9H^eZ+8L0p1Q9QiPo
%*JXRr)#hD/fL1MRG8PdaiHH,fLZ*FoIYZn^RLHs&>R\;mA_?h,Y$hp'f4'!,\RnI.\X`!MNW![+^%P@K-Em-lWH-p$[W?D4%U8sN
%6;5ZG"R%u7f?X',qu61lD`(j42s2]HqQ[alnadTHnLH<keibhF#ESoVNh;1]e,B+>B%dbd.YS(\:pQCaYb_hWe$SnJOSmCEgWmg,
%S`R;NjgL`A[[lNgS`R;NjgL`A[X>W&<f!NGlo)KN,YgPs]f/=!_'(@uh1JL=/?8Q?4;,Qll;2[tdEHdJXnSg/DrXQsGgWi'/a_bN
%p-dFYB&D`sBm2KrlX+"c$`aO.:L%dAr^&/#I/CTdq'GuM]P%%+cEhmFp@DF9@D@.1=FOE(9%@AG*L>U93O?Wo4"S.aniJD;_t#l?
%s.@F(%J*p&//QI0;mEtfGND*Hr@o61>ki'*5<#/!k15Nj9tl*8/3c;B2jW;?kf8mff.[_;IpmQH]T@c,H<2-rT'`KQ_;:J[rj\tX
%,0LdPis0Z*'?sT-Y%o=7h][s>#:[^`RF"a-paVPB;,e6:l1?(i:#6B!n*HOsU%fXchkBfcMVk-&*K&aJpmg@0-ae"Fk6F5aJQVbk
%rG[5X.4aiC+,c?U@In9trJ0J#c.huIilbF!f'M=s)!QI^,F3ZMG0lA$rqJe(D-YnSj-aH(Yb%FFg!/?\r0\9!H_9d*s$6,'7+N3m
%[f@ZJQ&Obt<9,FTHY#.Z<2ElC/!Sd?1JNg'fDcP6hhfAACmWh3`pZ=UGG=UhdJ08Gr(](t-Q8V\\';A=pR\>:ibV?^^Nss0#lWrX
%AF8IE?+s<'3K`o#I:#s':[_dS1]HrA%$+23PXER^8ZoCZD&<NoP(=(m2jc10AadKYT!*<EkLjbIbg23e(Vds+DCrQR)+M/8K'sgW
%nUm>Zq+U/<e,304^&uL'N/\uB*5BD]4*tU`3.?YCG;t&,j**J3LZACJ3W=gS]R5/]L<grc<*sjtOH#Igbri0gcfDq?l50Eol"2p4
%*;oT%:@"n*Ea\^dHR%.K@BRnnA+H^Jlp:;Mm]C'0g&(/aUH*OgS/9ep5EY"+&g+Wk*++U,M*9hm*o`[S"?FNm\_,6kpc?7[l;f0;
%Ml`6E;e#8Y,ep[*Ar#Gk8:H?TG=[1<jEF.DLZC7S0=&2#>Bd)cIGgS79(Y"EdsoKJGHSY*CKoE&Wdj;G?U+0YI8-VpMfUoR=M2uJ
%*bQ+\:^._D+;jI:?d1P'0$[n#ST?ZtPi(Vm:P8>48Fh7e&)94/+*PT(8A9_j^N67uq+U-n+SiTf95Zo9c]`k*P1pJkn*HY!U%o^t
%hkBidRbsh7*LblZq:q;iNgI(JC2W(k0IukGF"t?$D,i26j.G6K\!qE3"ENDuiDVd[HFoX%p=:jZo:,RY#[`t>_!9]"6[6>Zch6H"
%Q@Xh:ZCR=0;a6E,rt=4uD5$b;Tss[-AWtAP43d6_Z2$m&j*C+u""DCR58<4O>eBp3df/*tM>npImmV!!eCqJoi7%p2h3G1bRa+U+
%qEO+4Wf5:S,lFh^WA)>R9P_Mb<N.aWV0m/mel7S_N-&MnJH5A-8Gnkk$/YCmlCe+"e:1j)h_U#A[d`0-R'["fd?I+tD9:E7Q_p3.
%ijDpn5aM*Br6<@;iP//17UY1en&F>^WNeoGY>66Hr-&'apjZ&N%W?6&T+7Jgn'%W2o7tdbPKhRZa,A]%!<P2[2tZghY:mQ`mJd3iEX%p~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2114 4959 a(Fig.)32 b(8.)100 b(Best)33 b(In)m(v)n(ariant)h
(Re)o(gion)g(vs.)g(De)o(gree)f(Bound)i(with)e(Limit)2114
5046 y(Cycle)p Black Black 0 5556 a FF(December)25 b(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 26 26
TeXDict begin 26 25 bop Black 3834 -150 a FF(26)p Black
100 116 a Fz(T)-8 b(o)37 b(e)o(xplore)f(the)h(limits)f(of)h(the)g(SOS)h
(approach,)g(for)f(de)o(gree)h(bound)e(2,)h(4,)g(6,)g(8)g(and)h(10,)e
(we)i(\002nd)f(the)0 289 y(maximum)31 b(unit)h(ball)h(on)g(which)g(we)g
(are)h(able)f(to)g(\002nd)g(a)g(sum-of-squares)g(L)-5
b(yapuno)o(v)31 b(function.)h(W)-8 b(e)33 b(then)0 462
y(use)k(the)g(lar)n(gest)g(suble)n(v)o(el)f(set)h(of)g(this)f(L)-5
b(yapuno)o(v)35 b(function)i(on)g(which)f(the)i(trajectories)e
(decrease)j(as)e(an)0 636 y(estimate)d(for)h(the)f(domain)g(of)h
(attraction)f(of)g(the)h(system.)e(These)i(le)n(v)o(el)e(sets)i(are)g
(illustrated)e(in)h(Figure)h(8.)0 809 y(W)-8 b(e)35 b(see)g(that)g(as)f
(the)h(de)o(gree)g(bound)f(increases,)h(our)f(estimate)g(of)h(the)g
(domain)f(of)g(attraction)h(impro)o(v)o(es.)1586 1117
y(X)t(.)55 b(C)t FA(O)t(N)t(C)t(L)t(U)t(S)t(I)5 b(O)t(N)100
1322 y Fz(In)33 b(this)f(paper)l(,)i(we)g(ha)n(v)o(e)f(used)g(the)g
(Picard)h(iteration)e(to)h(construct)g(an)g(approximation)f(to)h(the)g
(solution)0 1495 y(map)25 b(on)g(arbitrarily)g(long)g(interv)n(als.)f
(W)-8 b(e)26 b(ha)n(v)o(e)f(used)g(this)f(approximation)g(to)h(pro)o(v)
o(e)f(that)h(local)h(e)o(xponential)0 1668 y(stability)37
b(of)h(a)h(polynomial)d(v)o(ector)i(\002eld)h(implies)e(the)h(e)o
(xistence)g(of)h(a)g(L)-5 b(yapuno)o(v)36 b(function)i(which)g(is)g(a)0
1842 y(sum-of-squares)i(of)g(polynomials)e(with)i(a)h(bound)e(on)h(the)
h(de)o(gree.)f(This)g(implies)f(that)h(the)g(question)f(of)0
2015 y(local)33 b(stability)e(may)h(be)i(decidable.)e(Furthermore,)h
(the)g(con)l(v)o(erse)g(L)-5 b(yapuno)o(v)31 b(function)h(we)h(ha)n(v)o
(e)g(used)f(in)0 2188 y(this)d(paper)h(is)f(relati)n(v)o(ely)g(easy)g
(to)h(construct)f(gi)n(v)o(en)f(the)i(v)o(ector)f(\002eld)h(and)g(may)g
(\002nd)f(applications)g(in)g(other)0 2362 y(areas)35
b(of)g(control.)f(The)h(main)f(result)h(also)f(holds)g(for)h(time-v)n
(arying)e(systems.)100 2535 y(Recently)-6 b(,)52 b(there)h(has)f(been)h
(interest)f(in)h(using)e(semide\002nite)h(programming)f(for)i(the)g
(analysis)e(on)0 2708 y(nonlinear)28 b(systems)g(using)g
(sum-of-squares.)g(This)h(paper)g(clari\002es)h(se)n(v)o(eral)e
(questions)g(on)g(the)h(application)0 2882 y(of)42 b(this)e(method.)h
(W)-8 b(e)42 b(no)n(w)f(kno)n(w)f(that)h(local)h(stability)e(implies)g
(the)h(e)o(xistence)g(of)h(an)g(SOS)g(L)-5 b(yapuno)o(v)0
3055 y(function)50 b(and)g(ho)n(w)g(comple)o(x)g(this)f(function)h(may)
g(be.)h(It)g(has)f(been)h(recently)g(sho)n(wn)e(that)h
Fs(globally)0 3228 y Fz(asymptotically)26 b(stable)j(v)o(ector)f
(\002elds)g(do)h(not)f(al)o(w)o(ays)g(admit)g(sum-of-squares)g(L)-5
b(yapuno)o(v)27 b(functions)g([40].)0 3402 y(Still)34
b(unresolv)o(ed)g(is)h(the)f(question)g(of)h(the)g(e)o(xistence)f(of)i
(polynomial)d(L)-5 b(yapuno)o(v)33 b(functions)h(for)h(stability)0
3575 y(of)g(globally)e Fs(e)n(xponentially)h Fz(stable)g(v)o(ector)h
(\002elds.)1671 3883 y(R)t FA(E)t(F)t(E)t(R)t(E)t(N)t(C)5
b(E)g(S)p Black 37 4084 a Fy([1])p Black 50 w(S.)26 b(Bo)o(yd,)i(L.)f
(El)f(Ghaoui,)i(E.)e(Feron,)h(and)h(V)-10 b(.)27 b(Balakrishnan,)h
Fo(Linear)f(Matrix)g(Inequalities)h(in)f(System)h(and)g(Contr)m(ol)f
(Theory)p Fy(.)37 b(SIAM)174 4215 y(Studies)26 b(in)h(Applied)g
(Mathematics,)g(1994.)p Black 37 4346 a([2])p Black 50
w(J.)33 b(B.)f(Lasserre,)h(\223Global)g(optimization)h(with)e
(polynomials)i(and)g(the)f(problem)h(of)f(moments,)-5
b(\224)33 b Fo(SIAM)g(J)n(.)g(Optim.)p Fy(,)f(v)o(ol.)h(11,)g(no.)g(3,)
174 4477 y(pp.)27 b(796\226817,)h(2001.)p Black 37 4607
a([3])p Black 50 w(Y)-10 b(.)39 b(Nestero)o(v)-5 b(,)38
b Fo(High)h(P)-6 b(erformance)39 b(Optimization)p Fy(,)g(v)o(ol.)f(33)h
(of)f Fo(Applied)h(Optimization)p Fy(,)f(ch.)h(Squared)g(Functional)g
(Systems)f(and)174 4738 y(Optimization)27 b(Problems.)34
b(Springer)m(,)26 b(2000.)p Black 37 4869 a([4])p Black
50 w(P)-8 b(.)30 b(A.)h(P)o(arrilo,)e Fo(Structur)m(ed)k
(Semide\002nite)f(Pr)m(o)o(gr)o(ams)f(and)h(Semialg)o(ebr)o(aic)h
(Geometry)e(Methods)i(in)e(Rob)o(ustness)g(and)h(Optimization)p
Fy(.)174 5000 y(PhD)26 b(thesis,)g(California)g(Institute)h(of)f(T)-5
b(echnology)g(,)28 b(2000.)p Black 37 5130 a([5])p Black
50 w(D.)g(Henrion)i(and)f(A.)f(Garulli,)g(eds.,)h Fo(P)-6
b(ositive)28 b(P)-6 b(olynomials)29 b(in)g(Contr)m(ol)p
Fy(,)f(v)o(ol.)g(312)i(of)e Fo(Lectur)m(e)h(Notes)g(in)g(Contr)m(ol)f
(and)i(Information)174 5261 y(Science)p Fy(.)36 b(Springer)m(,)26
b(2005.)p Black 0 5556 a FF(December)f(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 27 27
TeXDict begin 27 26 bop Black 3834 -150 a FF(27)p Black
Black 37 116 a Fy([6])p Black 50 w(G.)24 b(Chesi,)h(\223On)f(the)h(gap)
g(between)g(positi)n(v)o(e)h(polynomials)f(and)h(SOS)d(of)i
(polynomials,)-5 b(\224)25 b Fo(IEEE)f(T)l(r)o(ansactions)h(on)g(A)o
(utomatic)f(Contr)m(ol)p Fy(,)174 246 y(v)o(ol.)i(52,)h(pp.)f
(1066\2261072,)j(June)e(2007.)p Black 37 377 a([7])p
Black 50 w(G.)33 b(Chesi,)g(\223LMI)h(techniques)h(for)e(optimization)h
(o)o(v)o(er)g(polynomials)h(in)e(control:)h(A)f(surv)o(e)o(y)-5
b(,)g(\224)34 b Fo(IEEE)e(T)l(r)o(ansactions)i(on)g(A)o(utomatic)174
508 y(Contr)m(ol)p Fy(,)26 b(v)o(ol.)g(55,)h(no.)f(11,)h(pp.)f
(2500\2262510,)j(2010.)p Black 37 639 a([8])p Black 50
w(S.)k(Prajna,)h(A.)f(P)o(apachristodoulou,)j(P)-8 b(.)33
b(Seiler)m(,)f(and)j(P)-8 b(.)33 b(A.)g(P)o(arrilo,)g(\223Ne)n(w)h(de)n
(v)o(elopments)i(in)e(sum)h(of)f(squares)h(optimization)f(and)174
769 y(SOST)o(OOLS,)-5 b(\224)24 b(in)i Fo(Pr)m(oceedings)h(of)f(the)h
(American)g(Contr)m(ol)f(Confer)m(ence)p Fy(,)h(2004.)p
Black 37 900 a([9])p Black 50 w(D.)e(Henrion)i(and)f(J.-B.)f(Lassere,)g
(\223GloptiPoly:)g(Global)h(optimization)g(o)o(v)o(er)g(polynomials)h
(with)e(MA)-8 b(TLAB)25 b(and)h(SeDuMi,)-5 b(\224)26
b(in)f Fo(IEEE)174 1031 y(Confer)m(ence)j(on)f(Decision)g(and)g(Contr)m
(ol)p Fy(,)f(pp.)h(747\226752,)h(2001.)p Black 0 1162
a([10])p Black 50 w(P)-8 b(.)30 b(A.)h(P)o(arrilo,)e
Fo(Structur)m(ed)k(Semide\002nite)f(Pr)m(o)o(gr)o(ams)f(and)h(Semialg)o
(ebr)o(aic)h(Geometry)e(Methods)i(in)e(Rob)o(ustness)g(and)h
(Optimization)p Fy(.)174 1292 y(PhD)26 b(thesis,)g(California)g
(Institute)h(of)f(T)-5 b(echnology)g(,)28 b(2000.)p Black
0 1423 a([11])p Black 50 w(A.)21 b(P)o(apachristodoulou)j(and)e(S.)f
(Prajna,)g(\223On)g(the)h(construction)h(of)f(Lyapuno)o(v)h(functions)f
(using)h(the)e(sum)h(of)g(squares)g(decomposition,)-5
b(\224)174 1554 y(in)27 b Fo(Pr)m(oceedings)g(IEEE)e(Confer)m(ence)j
(on)f(Decision)f(and)i(Contr)m(ol)p Fy(,)e(2002.)p Black
0 1685 a([12])p Black 50 w(T)-6 b(.-C.)26 b(W)-6 b(ang,)26
b Fo(P)-6 b(olynomial)27 b(Le)o(vel-Set)f(Methods)h(for)g(Nonlinear)g
(Dynamics)g(and)g(Contr)m(ol)p Fy(.)34 b(PhD)26 b(thesis,)g(Stanford)h
(Uni)n(v)o(ersity)-5 b(,)26 b(2007.)p Black 0 1815 a([13])p
Black 50 w(W)-7 b(.)17 b(T)-6 b(an,)18 b Fo(Nonlinear)h(Contr)m(ol)f
(Analysis)g(and)g(Synthesis)h(using)g(Sum-of-Squar)m(es)h(Pr)m(o)o(gr)o
(amming)p Fy(.)i(PhD)c(thesis,)f(Uni)n(v)o(ersity)h(of)g(California,)
174 1946 y(Berk)o(ele)o(y)-5 b(,)27 b(2006.)p Black 0
2077 a([14])p Black 50 w(M.)32 b(M.)h(Peet,)e(\223Exponentially)i
(stable)g(nonlinear)g(systems)g(ha)o(v)o(e)f(polynomial)i(L)l(yapuno)o
(v)f(functions)h(on)e(bounded)j(re)o(gions,)-5 b(\224)32
b Fo(IEEE)174 2208 y(T)l(r)o(ansactions)27 b(on)g(A)o(utomatic)f(Contr)
m(ol)p Fy(,)g(v)o(ol.)g(52,)h(May)g(2009.)p Black 0 2338
a([15])p Black 50 w(E.)g(A.)h(Barbasin,)g(\223The)g(method)g(of)g
(sections)h(in)e(the)h(theory)h(of)f(dynamical)h(systems,)-5
b(\224)28 b Fo(Rec.)f(Math.)h(\(Mat.)g(Sbornik\))h(N.)e(S.)p
Fy(,)g(v)o(ol.)h(29,)174 2469 y(pp.)f(233\226280,)h(1951.)p
Black 0 2600 a([16])p Black 50 w(I.)g(Malkin,)g(\223On)h(the)f
(question)h(of)f(the)h(reciprocal)f(of)g(L)l(yapuno)o(v')l(s)i(theorem)
f(on)f(asymptotic)h(stability)-5 b(,)g(\224)28 b Fo(Prikl.)f(Mat.)h
(Meh.)p Fy(,)g(v)o(ol.)g(18,)174 2731 y(pp.)f(129\226138,)h(1954.)p
Black 0 2862 a([17])p Black 50 w(J.)h(K)o(urzweil,)g(\223On)g(the)h(in)
m(v)o(ersion)g(of)f(L)l(yapuno)o(v')l(s)i(second)f(theorem)g(on)g
(stability)f(of)g(motion,)-5 b(\224)29 b Fo(Amer)-8 b(.)29
b(Math.)g(Soc.)h(T)l(r)o(ansl.)p Fy(,)e(v)o(ol.)h(2,)174
2992 y(no.)e(24,)f(pp.)h(19\22677,)h(1963.)35 b(English)27
b(T)m(ranslation.)f(Originally)g(appeared)i(1956.)p Black
0 3123 a([18])p Black 50 w(J.)e(L.)g(Massera,)g(\223Contrib)o(utions)h
(to)g(stability)f(theory)-5 b(,)g(\224)26 b Fo(Annals)h(of)f
(Mathematics)p Fy(,)h(v)o(ol.)f(64,)h(pp.)f(182\226206,)j(July)d(1956.)
p Black 0 3254 a([19])p Black 50 w(F)-6 b(.)18 b(W)-7
b(.)18 b(W)m(ilson)g(Jr)l(.,)g(\223Smoothing)h(deri)n(v)n(ati)n(v)o(es)
h(of)e(functions)i(and)f(applications,)-5 b(\224)19 b
Fo(T)l(r)o(ansactions)h(of)e(the)h(American)g(Mathematical)h(Society)p
Fy(,)174 3385 y(v)o(ol.)26 b(139,)h(pp.)g(413\226428,)h(May)f(1969.)p
Black 0 3515 a([20])p Black 50 w(Y)-10 b(.)32 b(Lin,)g(E.)f(Sontag,)h
(and)h(Y)-10 b(.)32 b(W)-6 b(ang,)32 b(\223)-6 b(A)32
b(smooth)h(con)m(v)o(erse)g(L)l(yapuno)o(v)h(theorem)f(for)f(rob)o(ust)
g(stability)-5 b(,)g(\224)31 b Fo(Siam)i(J)n(.)f(Contr)m(ol)g(Optim.)p
Fy(,)174 3646 y(v)o(ol.)26 b(34,)h(no.)f(1,)g(pp.)h(124\226160,)h
(1996.)p Black 0 3777 a([21])p Black 50 w(V)-10 b(.)28
b(Lakshmikantam)i(and)e(A.)g(A.)f(Martyn)o(yuk,)j(\223L)l(yapuno)o(v')l
(s)g(direct)e(method)h(in)f(stability)g(theory)g(\(re)n(vie)n(w\),)-5
b(\224)28 b Fo(International)i(Applied)174 3908 y(Mec)o(hanics)p
Fy(,)e(v)o(ol.)e(28,)g(pp.)h(135\226144,)h(March)f(1992.)p
Black 0 4038 a([22])p Black 50 w(A.)f(R.)g(T)-5 b(eel)25
b(and)i(L.)f(Praly)-5 b(,)26 b(\223Results)g(on)h(con)m(v)o(erse)h(L)l
(yapuno)o(v)f(functions)h(from)e(class-KL)g(estimates,)-5
b(\224)26 b(pp.)g(2545\2262550,)j(1999.)p Black 0 4169
a([23])p Black 50 w(W)-7 b(.)26 b(Hahn,)g Fo(Stability)h(of)f(Motion)p
Fy(.)35 b(Springer)o(-V)-8 b(erlag,)25 b(1967.)p Black
0 4300 a([24])p Black 50 w(N.)h(N.)g(Kraso)o(vskii,)g
Fo(Stability)h(of)f(Motion)p Fy(.)35 b(Stanford)26 b(Uni)n(v)o(ersity)h
(Press,)e(1963.)p Black 0 4431 a([25])p Black 50 w(V)-10
b(.)26 b(I.)g(Arnol')l(d,)h Fo(Or)m(dinary)g(Dif)o(fer)m(ential)f
(Equations)p Fy(.)35 b(Springer)m(,)26 b(2)h(ed.,)f(2006.)35
b(T)m(ranslated)27 b(by)g(Roger)g(Cook.)p Black 0 4561
a([26])p Black 50 w(K.)j(G.)f(Murty)i(and)g(S.)e(N.)g(Kabadi,)i
(\223Some)f(NP-complete)g(problems)h(in)f(quadratic)h(and)g(nonlinear)g
(programming,)-5 b(\224)31 b Fo(Mathematical)174 4692
y(Pr)m(o)o(gr)o(amming)p Fy(,)c(v)o(ol.)f(39,)h(pp.)f(117\226129,)i
(1987.)p Black 0 4823 a([27])p Black 50 w(N.)e(Z.)g(Shor)m(,)g
(\223Class)g(of)g(global)h(minimum)g(bounds)h(of)e(polynomial)i
(functions,)-5 b(\224)27 b Fo(Cybernetics)p Fy(,)g(v)o(ol.)e(23,)i(no.)
g(6,)f(pp.)g(731\226734,)j(1987.)p Black 0 4954 a([28])p
Black 50 w(V)-10 b(.)24 b(Po)n(wers)h(and)g(T)-6 b(.)24
b(W)6 b(\250)-31 b(ormann,)24 b(\223)-6 b(An)25 b(algorithm)g(for)f
(sums)h(of)f(squares)h(of)g(real)f(polynomials,)-5 b(\224)25
b Fo(J)n(ournal)h(of)e(Pur)m(e)h(and)g(Applied)g(Linear)174
5084 y(Alg)o(ebr)o(a)p Fy(,)i(v)o(ol.)f(127,)h(pp.)f(99\226104,)i
(1998.)p Black 0 5556 a FF(December)d(3,)e(2011)3181
b(DRAFT)p Black eop end
%%Page: 28 28
TeXDict begin 28 27 bop Black 3834 -150 a FF(28)p Black
Black 0 116 a Fy([29])p Black 50 w(P)-8 b(.)30 b(A.)h(P)o(arrilo,)e
Fo(Structur)m(ed)k(Semide\002nite)f(Pr)m(o)o(gr)o(ams)f(and)h(Semialg)o
(ebr)o(aic)h(Geometry)e(Methods)i(in)e(Rob)o(ustness)g(and)h
(Optimization)p Fy(.)174 246 y(PhD)26 b(thesis,)g(Caltech,)g(P)o
(asadena,)h(CA,)f(2000.)35 b(A)-6 b(v)n(ailable)28 b(at)e
Fa(http://www.mit.edu/\230parrilo/pubs/inde)o(x.html)o
Fy(.)p Black 0 377 a([30])p Black 50 w(A.)21 b(P)o(apachristodoulou)j
(and)e(S.)f(Prajna,)g(\223On)g(the)h(construction)h(of)f(Lyapuno)o(v)h
(functions)f(using)h(the)e(sum)h(of)g(squares)g(decomposition,)-5
b(\224)174 508 y(in)27 b Fo(Pr)m(oceedings)g(IEEE)e(Confer)m(ence)j(on)
f(Decision)f(and)i(Contr)m(ol)p Fy(,)e(2002.)p Black
0 639 a([31])p Black 50 w(J.)g(E.)g(Marsden)h(and)g(M.)g(J.)e(Hof)n
(fman,)i Fo(Elementary)g(Classical)f(Analysis)p Fy(.)34
b(W)-7 b(.)26 b(H.)g(Feeman)g(and)h(Compan)o(y)-5 b(,)28
b(2nd)f(ed.,)f(1993.)p Black 0 769 a([32])p Black 50
w(E.)g(A.)g(Coddington)i(and)f(N.)e(Le)n(vinson,)j Fo(Theory)e(of)h(Or)
m(dinary)g(Dif)o(fer)m(ential)f(Equations)p Fy(.)35 b(McGra)o(ww-Hill,)
25 b(1955.)p Black 0 900 a([33])p Black 50 w(E.)h(Lindel)6
b(\250)-31 b(of)26 b(and)h(M.)f(Picard,)g(\223Sur)g(l'application)h(de)
g(la)f(m)t(\264)-29 b(ethode)27 b(des)g(approximations)h(successi)n(v)o
(es)f(aux)32 b(\264)-30 b(equations)28 b(dif)n(f)t(\264)-29
b(erentielles)174 1031 y(ordinaires)26 b(du)g(premier)f(ordre,)-5
b(\224)25 b Fo(Comptes)h(r)m(endus)g(hebdomadair)m(es)i(des)e(s)t(\264)
-29 b(eances)26 b(de)g(l'Acad)t(\264)-29 b(emie)25 b(des)g(sciences)p
Fy(,)h(v)o(ol.)f(114,)g(pp.)h(454\226)174 1162 y(457,)h(1894.)p
Black 0 1292 a([34])p Black 50 w(H.)f(Khalil,)g Fo(Nonlinear)h(Systems)
p Fy(.)35 b(Prentice)26 b(Hall,)f(third)h(ed.,)g(2002.)p
Black 0 1423 a([35])p Black 50 w(J.)37 b(B.)g(Lasserre,)f(D.)h
(Henrion,)g(C.)g(Prieur)m(,)f(and)i(E.)f(T)m(relat,)f(\223Nonlinear)i
(optimal)f(control)h(via)f(occupation)i(measures)f(and)g(LMI-)174
1554 y(relaxations,)-5 b(\224)27 b(v)o(ol.)f(47,)g(no.)h(4,)f(pp.)h
(1643\2261666,)i(2008.)p Black 0 1685 a([36])p Black
50 w(H.)d(Pe)o(yrl)g(and)h(P)-8 b(.)25 b(A.)h(P)o(arrilo,)f(\223)-6
b(A)26 b(theorem)h(of)g(the)f(alternati)n(v)o(e)h(for)f(SOS)f(L)l
(yapuno)o(v)j(functions,)-5 b(\224)27 b(2007.)p Black
0 1815 a([37])p Black 50 w(M.)19 b(M.)h(Peet)e(and)i(Y)-10
b(.)19 b(V)-10 b(.)20 b(Peet,)e(\223)-6 b(A)19 b(parallel-computing)i
(solution)f(for)f(optimization)h(of)f(polynomials,)-5
b(\224)20 b(in)g Fo(Pr)m(oceedings)g(of)f(the)g(American)174
1946 y(Contr)m(ol)27 b(Confer)m(ence)p Fy(,)g(2010.)p
Black 0 2077 a([38])p Black 50 w(M.)h(Putinar)m(,)g(\223Positi)n(v)o(e)
g(polynomials)i(on)e(compact)i(semi-algebraic)f(sets,)-5
b(\224)27 b Fo(Indiana)j(Univ)-6 b(.)28 b(Math.)h(J)n(.)p
Fy(,)f(v)o(ol.)f(42,)i(no.)f(3,)g(pp.)h(969\226984,)174
2208 y(1993.)p Black 0 2338 a([39])p Black 50 w(J.)24
b(Nie)h(and)g(M.)f(Schweighofer)m(,)h(\223On)g(the)f(comple)o(xity)i
(of)e(Putinar')l(s)g(positi)n(vstellensatz,)-5 b(\224)25
b Fo(J)n(ournal)h(of)e(Comple)o(xity)p Fy(,)g(v)o(ol.)g(23,)h(pp.)g
(135\226)174 2469 y(150,)i(2007.)p Black 0 2600 a([40])p
Black 50 w(A.)d(A.)g(Ahmadi,)g(M.)h(Krstic,)e(and)i(P)-8
b(.)23 b(A.)h(P)o(arrilo,)f(\223)-6 b(A)24 b(globally)h(asymptotically)
g(stable)g(polynomial)g(v)o(ector)g(\002eld)f(with)g(no)h(polynomial)
174 2731 y(L)l(yapuno)o(v)j(function,)-5 b(\224)27 b(in)f
Fo(Pr)m(oceedings)i(of)e(the)g(IEEE)f(Confer)m(ence)j(on)f(Decision)g
(and)g(Contr)m(ol)p Fy(,)f(2011.)p Black 0 5556 a FF(December)f(3,)e
(2011)3181 b(DRAFT)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
